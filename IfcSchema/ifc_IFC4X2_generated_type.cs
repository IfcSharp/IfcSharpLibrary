// ifc_IFC4X2_generated_type.cs Copyright (c) 2020, Bernhard Simon Bock, Friedrich Eder, MIT License (see https://github.com/IfcSharp/IfcSharpLibrary/blob/master/License.md)
// ported from IFC-Model by buildingSMART International Ltd (see https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/EXPRESS/IFC4x2.exp)
// official documentation see https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML

// CAUTION! THIS IS GENERATED CODE! DON'T MODIFY THIS FILE. THIS FILE WILL BE UPDATED WITH NEW VERSIONS.
using System;
using System.Collections.Generic;
namespace ifc{//########################################################################################################



//BASETYPES:
[ifcSql(TypeGroupId:0,TypeId:     1,TableId:5,LayerId:32)] public partial class REAL                      :TYPE<double>    {public REAL                      (double     value):base(value){}   public REAL                      (){} public static implicit operator REAL                      (double     value){return new REAL                      { IsNull=false, TypeValue = value };}public static implicit operator double    (REAL                       value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcreal.htm
[ifcSql(TypeGroupId:0,TypeId:     2,TableId:1,LayerId:32)] public partial class BINARY                    :TYPE<string>    {public BINARY                    (string     value):base(value){}   public BINARY                    (){} public static implicit operator BINARY                    (string     value){return new BINARY                    { IsNull=false, TypeValue = value };}public static implicit operator string    (BINARY                     value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcbinary.htm
[ifcSql(TypeGroupId:0,TypeId:     3,TableId:2,LayerId:32)] public partial class BOOLEAN                   :TYPE<bool>      {public BOOLEAN                   (bool       value):base(value){}   public BOOLEAN                   (){} public static implicit operator BOOLEAN                   (bool       value){return new BOOLEAN                   { IsNull=false, TypeValue = value };}public static implicit operator bool      (BOOLEAN                    value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcboolean.htm
[ifcSql(TypeGroupId:0,TypeId:     4,TableId:6,LayerId:32)] public partial class INTEGER                   :TYPE<int>       {public INTEGER                   (int        value):base(value){}   public INTEGER                   (){} public static implicit operator INTEGER                   (int        value){return new INTEGER                   { IsNull=false, TypeValue = value };}public static implicit operator int       (INTEGER                    value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcinteger.htm
[ifcSql(TypeGroupId:0,TypeId:     5,TableId:6,LayerId: 0)] public partial class NUMBER                    :TYPE<double>    {public NUMBER                    (double     value):base(value){}   public NUMBER                    (){} public static implicit operator NUMBER                    (double     value){return new NUMBER                    { IsNull=false, TypeValue = value };}public static implicit operator double    (NUMBER                     value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcnumber.htm
[ifcSql(TypeGroupId:0,TypeId:     6,TableId:7,LayerId: 0)] public partial class STRING                    :TYPE<string>    {public STRING                    (string     value):base(value){}   public STRING                    (){} public static implicit operator STRING                    (string     value){return new STRING                    { IsNull=false, TypeValue = value };}public static implicit operator string    (STRING                     value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcstring.htm
[ifcSql(TypeGroupId:0,TypeId:     7,TableId:7,LayerId: 0)] public partial class STRING_22_FIXED           :TYPE<string>    {public STRING_22_FIXED           (string     value):base(value){}   public STRING_22_FIXED           (){} public static implicit operator STRING_22_FIXED           (string     value){return new STRING_22_FIXED           { IsNull=false, TypeValue = value };}public static implicit operator string    (STRING_22_FIXED            value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcstring_22_fixed.htm
[ifcSql(TypeGroupId:0,TypeId:     8,TableId:7,LayerId: 0)] public partial class STRING_255                :TYPE<string>    {public STRING_255                (string     value):base(value){}   public STRING_255                (){} public static implicit operator STRING_255                (string     value){return new STRING_255                { IsNull=false, TypeValue = value };}public static implicit operator string    (STRING_255                 value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcstring_255.htm
[ifcSql(TypeGroupId:0,TypeId:     9,TableId:2,LayerId:32)] public partial class LOGICAL                   :TYPE<bool>      {public LOGICAL                   (bool       value):base(value){}   public LOGICAL                   (){} public static implicit operator LOGICAL                   (bool       value){return new LOGICAL                   { IsNull=false, TypeValue = value };}public static implicit operator bool      (LOGICAL                    value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifclogical.htm


//LISTTYPE1D:
[ifcSql(TypeGroupId:1,TypeId:420001,TableId:8,LayerId:32)] public partial class List3to3_PositiveInteger  :List3to3<PositiveInteger>{public List3to3_PositiveInteger  (List3to3<PositiveInteger> value):base(value){} public List3to3_PositiveInteger  (){} public List3to3_PositiveInteger  (params PositiveInteger[] items):base(){foreach (PositiveInteger e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420003,TableId:8,LayerId:32)] public partial class Array1to2_double          :Array1to2<double>{public Array1to2_double          (Array1to2<double> value):base(value){} public Array1to2_double          (){} public Array1to2_double          (params REAL[] items):base(){foreach (REAL e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420004,TableId:8,LayerId:32)] public partial class List3to4_int              :List3to4<int>{public List3to4_int              (List3to4<int> value):base(value){} public List3to4_int              (){} public List3to4_int              (params INTEGER[] items):base(){foreach (INTEGER e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420006,TableId:8,LayerId:32)] public partial class List2toUnbounded_PositiveInteger:List2toUnbounded<PositiveInteger>{public List2toUnbounded_PositiveInteger(List2toUnbounded<PositiveInteger> value):base(value){} public List2toUnbounded_PositiveInteger(){} public List2toUnbounded_PositiveInteger(params PositiveInteger[] items):base(){foreach (PositiveInteger e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420011,TableId:8,LayerId: 2)] public partial class Set1toUnbounded_PropertySetDefinition:Set1toUnbounded<PropertySetDefinition>{public Set1toUnbounded_PropertySetDefinition(Set1toUnbounded<PropertySetDefinition> value):base(value){} public Set1toUnbounded_PropertySetDefinition(){} public Set1toUnbounded_PropertySetDefinition(params PropertySetDefinition[] items):base(){foreach (PropertySetDefinition e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420012,TableId:8,LayerId:30)] public partial class List1toUnbounded_RepresentationMap:List1toUnbounded<RepresentationMap>{public List1toUnbounded_RepresentationMap(List1toUnbounded<RepresentationMap> value):base(value){} public List1toUnbounded_RepresentationMap(){} public List1toUnbounded_RepresentationMap(params RepresentationMap[] items):base(){foreach (RepresentationMap e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420013,TableId:8,LayerId:41)] public partial class Set1toUnbounded_ClosedShell:Set1toUnbounded<ClosedShell>{public Set1toUnbounded_ClosedShell(Set1toUnbounded<ClosedShell> value):base(value){} public Set1toUnbounded_ClosedShell(){} public Set1toUnbounded_ClosedShell(params ClosedShell[] items):base(){foreach (ClosedShell e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420014,TableId:8,LayerId:41)] public partial class Set1toUnbounded_FaceBound :Set1toUnbounded<FaceBound>{public Set1toUnbounded_FaceBound (Set1toUnbounded<FaceBound> value):base(value){} public Set1toUnbounded_FaceBound (){} public Set1toUnbounded_FaceBound (params FaceBound[] items):base(){foreach (FaceBound e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420015,TableId:8,LayerId:28)] public partial class List1toUnbounded_Alignment2DHorizontalSegment:List1toUnbounded<Alignment2DHorizontalSegment>{public List1toUnbounded_Alignment2DHorizontalSegment(List1toUnbounded<Alignment2DHorizontalSegment> value):base(value){} public List1toUnbounded_Alignment2DHorizontalSegment(){} public List1toUnbounded_Alignment2DHorizontalSegment(params Alignment2DHorizontalSegment[] items):base(){foreach (Alignment2DHorizontalSegment e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420016,TableId:8,LayerId:28)] public partial class List1toUnbounded_Alignment2DVerticalSegment:List1toUnbounded<Alignment2DVerticalSegment>{public List1toUnbounded_Alignment2DVerticalSegment(List1toUnbounded<Alignment2DVerticalSegment> value):base(value){} public List1toUnbounded_Alignment2DVerticalSegment(){} public List1toUnbounded_Alignment2DVerticalSegment(params Alignment2DVerticalSegment[] items):base(){foreach (Alignment2DVerticalSegment e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420017,TableId:8,LayerId:30)] public partial class Set1toUnbounded_Curve     :Set1toUnbounded<Curve>{public Set1toUnbounded_Curve     (Set1toUnbounded<Curve> value):base(value){} public Set1toUnbounded_Curve     (){} public Set1toUnbounded_Curve     (params Curve[] items):base(){foreach (Curve e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420018,TableId:8,LayerId:25)] public partial class List1toUnbounded_AppliedValue:List1toUnbounded<AppliedValue>{public List1toUnbounded_AppliedValue(List1toUnbounded<AppliedValue> value):base(value){} public List1toUnbounded_AppliedValue(){} public List1toUnbounded_AppliedValue(params AppliedValue[] items):base(){foreach (AppliedValue e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420019,TableId:8,LayerId:23)] public partial class Set1toUnbounded_Approval  :Set1toUnbounded<Approval>{public Set1toUnbounded_Approval  (Set1toUnbounded<Approval> value):base(value){} public Set1toUnbounded_Approval  (){} public Set1toUnbounded_Approval  (params Approval[] items):base(){foreach (Approval e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420020,TableId:8,LayerId:30)] public partial class List2toUnbounded_CartesianPoint:List2toUnbounded<CartesianPoint>{public List2toUnbounded_CartesianPoint(List2toUnbounded<CartesianPoint> value):base(value){} public List2toUnbounded_CartesianPoint(){} public List2toUnbounded_CartesianPoint(params CartesianPoint[] items):base(){foreach (CartesianPoint e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420021,TableId:8,LayerId:32)] public partial class List2toUnbounded_Integer  :List2toUnbounded<Integer>{public List2toUnbounded_Integer  (List2toUnbounded<Integer> value):base(value){} public List2toUnbounded_Integer  (){} public List2toUnbounded_Integer  (params Integer[] items):base(){foreach (Integer e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420022,TableId:8,LayerId:32)] public partial class List2toUnbounded_ParameterValue:List2toUnbounded<ParameterValue>{public List2toUnbounded_ParameterValue(List2toUnbounded<ParameterValue> value):base(value){} public List2toUnbounded_ParameterValue(){} public List2toUnbounded_ParameterValue(params ParameterValue[] items):base(){foreach (ParameterValue e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420024,TableId:8,LayerId:32)] public partial class List1toUnbounded_Identifier:List1toUnbounded<Identifier>{public List1toUnbounded_Identifier(List1toUnbounded<Identifier> value):base(value){} public List1toUnbounded_Identifier(){} public List1toUnbounded_Identifier(params Identifier[] items):base(){foreach (Identifier e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420025,TableId:8,LayerId:30)] public partial class List1toUnbounded_CompositeCurveSegment:List1toUnbounded<CompositeCurveSegment>{public List1toUnbounded_CompositeCurveSegment(List1toUnbounded<CompositeCurveSegment> value):base(value){} public List1toUnbounded_CompositeCurveSegment(){} public List1toUnbounded_CompositeCurveSegment(params CompositeCurveSegment[] items):base(){foreach (CompositeCurveSegment e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420026,TableId:8,LayerId:32)] public partial class List1to3_LengthMeasure    :List1to3<LengthMeasure>{public List1to3_LengthMeasure    (List1to3<LengthMeasure> value):base(value){} public List1to3_LengthMeasure    (){} public List1to3_LengthMeasure    (params LengthMeasure[] items):base(){foreach (LengthMeasure e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420028,TableId:8,LayerId:32)] public partial class List1toUnbounded_Label    :List1toUnbounded<Label>{public List1toUnbounded_Label    (List1toUnbounded<Label> value):base(value){} public List1toUnbounded_Label    (){} public List1toUnbounded_Label    (params Label[] items):base(){foreach (Label e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420030,TableId:8,LayerId:41)] public partial class Set1toUnbounded_Face      :Set1toUnbounded<Face>{public Set1toUnbounded_Face      (Set1toUnbounded<Face> value):base(value){} public Set1toUnbounded_Face      (){} public Set1toUnbounded_Face      (params Face[] items):base(){foreach (Face e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420032,TableId:8,LayerId:37)] public partial class Set1toUnbounded_Property  :Set1toUnbounded<Property>{public Set1toUnbounded_Property  (Set1toUnbounded<Property> value):base(value){} public Set1toUnbounded_Property  (){} public Set1toUnbounded_Property  (params Property[] items):base(){foreach (Property e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420033,TableId:8,LayerId: 2)] public partial class Set1toUnbounded_PropertyTemplate:Set1toUnbounded<PropertyTemplate>{public Set1toUnbounded_PropertyTemplate(Set1toUnbounded<PropertyTemplate> value):base(value){} public Set1toUnbounded_PropertyTemplate(){} public Set1toUnbounded_PropertyTemplate(params PropertyTemplate[] items):base(){foreach (PropertyTemplate e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420034,TableId:8,LayerId:36)] public partial class Set2toUnbounded_ProfileDef:Set2toUnbounded<ProfileDef>{public Set2toUnbounded_ProfileDef(Set2toUnbounded<ProfileDef> value):base(value){} public Set2toUnbounded_ProfileDef(){} public Set2toUnbounded_ProfileDef(params ProfileDef[] items):base(){foreach (ProfileDef e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420035,TableId:8,LayerId:39)] public partial class Set1toUnbounded_RepresentationContext:Set1toUnbounded<RepresentationContext>{public Set1toUnbounded_RepresentationContext(Set1toUnbounded<RepresentationContext> value):base(value){} public Set1toUnbounded_RepresentationContext(){} public Set1toUnbounded_RepresentationContext(params RepresentationContext[] items):base(){foreach (RepresentationContext e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420036,TableId:8,LayerId:25)] public partial class List1toUnbounded_CostValue:List1toUnbounded<CostValue>{public List1toUnbounded_CostValue(List1toUnbounded<CostValue> value):base(value){} public List1toUnbounded_CostValue(){} public List1toUnbounded_CostValue(params CostValue[] items):base(){foreach (CostValue e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420037,TableId:8,LayerId:38)] public partial class List1toUnbounded_PhysicalQuantity:List1toUnbounded<PhysicalQuantity>{public List1toUnbounded_PhysicalQuantity(List1toUnbounded<PhysicalQuantity> value):base(value){} public List1toUnbounded_PhysicalQuantity(){} public List1toUnbounded_PhysicalQuantity(params PhysicalQuantity[] items):base(){foreach (PhysicalQuantity e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420038,TableId:8,LayerId:30)] public partial class Set0toUnbounded_Curve     :Set0toUnbounded<Curve>{public Set0toUnbounded_Curve     (Set0toUnbounded<Curve> value):base(value){} public Set0toUnbounded_Curve     (){} public Set0toUnbounded_Curve     (params Curve[] items):base(){foreach (Curve e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420039,TableId:8,LayerId:30)] public partial class Set1toUnbounded_BoundaryCurve:Set1toUnbounded<BoundaryCurve>{public Set1toUnbounded_BoundaryCurve(Set1toUnbounded<BoundaryCurve> value):base(value){} public Set1toUnbounded_BoundaryCurve(){} public Set1toUnbounded_BoundaryCurve(params BoundaryCurve[] items):base(){foreach (BoundaryCurve e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420040,TableId:8,LayerId:33)] public partial class List1toUnbounded_CurveStyleFontPattern:List1toUnbounded<CurveStyleFontPattern>{public List1toUnbounded_CurveStyleFontPattern(List1toUnbounded<CurveStyleFontPattern> value):base(value){} public List1toUnbounded_CurveStyleFontPattern(){} public List1toUnbounded_CurveStyleFontPattern(params CurveStyleFontPattern[] items):base(){foreach (CurveStyleFontPattern e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420041,TableId:8,LayerId:32)] public partial class Set1toUnbounded_DerivedUnitElement:Set1toUnbounded<DerivedUnitElement>{public Set1toUnbounded_DerivedUnitElement(Set1toUnbounded<DerivedUnitElement> value):base(value){} public Set1toUnbounded_DerivedUnitElement(){} public Set1toUnbounded_DerivedUnitElement(params DerivedUnitElement[] items):base(){foreach (DerivedUnitElement e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420042,TableId:8,LayerId:32)] public partial class List2to3_Real             :List2to3<Real>{public List2to3_Real             (List2to3<Real> value):base(value){} public List2to3_Real             (){} public List2to3_Real             (params Real[] items):base(){foreach (Real e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420043,TableId:8,LayerId:22)] public partial class Set1toUnbounded_ActorSelect:Set1toUnbounded<ActorSelect>{public Set1toUnbounded_ActorSelect(Set1toUnbounded<ActorSelect> value):base(value){} public Set1toUnbounded_ActorSelect(){} public Set1toUnbounded_ActorSelect(params ActorSelect[] items):base(){foreach (ActorSelect e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420044,TableId:8,LayerId:27)] public partial class Set1toUnbounded_DocumentInformation:Set1toUnbounded<DocumentInformation>{public Set1toUnbounded_DocumentInformation(Set1toUnbounded<DocumentInformation> value):base(value){} public Set1toUnbounded_DocumentInformation(){} public Set1toUnbounded_DocumentInformation(params DocumentInformation[] items):base(){foreach (DocumentInformation e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420045,TableId:8,LayerId:41)] public partial class List1toUnbounded_OrientedEdge:List1toUnbounded<OrientedEdge>{public List1toUnbounded_OrientedEdge(List1toUnbounded<OrientedEdge> value):base(value){} public List1toUnbounded_OrientedEdge(){} public List1toUnbounded_OrientedEdge(params OrientedEdge[] items):base(){foreach (OrientedEdge e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420046,TableId:8,LayerId:38)] public partial class Set1toUnbounded_PhysicalQuantity:Set1toUnbounded<PhysicalQuantity>{public Set1toUnbounded_PhysicalQuantity(Set1toUnbounded<PhysicalQuantity> value):base(value){} public Set1toUnbounded_PhysicalQuantity(){} public Set1toUnbounded_PhysicalQuantity(params PhysicalQuantity[] items):base(){foreach (PhysicalQuantity e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420047,TableId:8,LayerId:27)] public partial class Set1toUnbounded_ResourceObjectSelect:Set1toUnbounded<ResourceObjectSelect>{public Set1toUnbounded_ResourceObjectSelect(Set1toUnbounded<ResourceObjectSelect> value):base(value){} public Set1toUnbounded_ResourceObjectSelect(){} public Set1toUnbounded_ResourceObjectSelect(params ResourceObjectSelect[] items):base(){foreach (ResourceObjectSelect e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420048,TableId:8,LayerId:41)] public partial class Set1toUnbounded_ConnectedFaceSet:Set1toUnbounded<ConnectedFaceSet>{public Set1toUnbounded_ConnectedFaceSet(Set1toUnbounded<ConnectedFaceSet> value):base(value){} public Set1toUnbounded_ConnectedFaceSet(){} public Set1toUnbounded_ConnectedFaceSet(params ConnectedFaceSet[] items):base(){foreach (ConnectedFaceSet e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420049,TableId:8,LayerId:33)] public partial class Set1toUnbounded_FillStyleSelect:Set1toUnbounded<FillStyleSelect>{public Set1toUnbounded_FillStyleSelect(Set1toUnbounded<FillStyleSelect> value):base(value){} public Set1toUnbounded_FillStyleSelect(){} public Set1toUnbounded_FillStyleSelect(params FillStyleSelect[] items):base(){foreach (FillStyleSelect e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420050,TableId:8,LayerId:30)] public partial class List2to2_Vector           :List2to2<Vector>{public List2to2_Vector           (List2to2<Vector> value):base(value){} public List2to2_Vector           (){} public List2to2_Vector           (params Vector[] items):base(){foreach (Vector e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420051,TableId:8,LayerId:33)] public partial class Set1toUnbounded_StyledItem:Set1toUnbounded<StyledItem>{public Set1toUnbounded_StyledItem(Set1toUnbounded<StyledItem> value):base(value){} public Set1toUnbounded_StyledItem(){} public Set1toUnbounded_StyledItem(params StyledItem[] items):base(){foreach (StyledItem e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420052,TableId:8,LayerId:29)] public partial class Set1toUnbounded_GeometricSetSelect:Set1toUnbounded<GeometricSetSelect>{public Set1toUnbounded_GeometricSetSelect(Set1toUnbounded<GeometricSetSelect> value):base(value){} public Set1toUnbounded_GeometricSetSelect(){} public Set1toUnbounded_GeometricSetSelect(params GeometricSetSelect[] items):base(){foreach (GeometricSetSelect e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420053,TableId:8,LayerId:28)] public partial class List1toUnbounded_GridAxis :List1toUnbounded<GridAxis>{public List1toUnbounded_GridAxis (List1toUnbounded<GridAxis> value):base(value){} public List1toUnbounded_GridAxis (){} public List1toUnbounded_GridAxis (params GridAxis[] items):base(){foreach (GridAxis e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420054,TableId:8,LayerId:32)] public partial class List1toUnbounded_PositiveInteger:List1toUnbounded<PositiveInteger>{public List1toUnbounded_PositiveInteger(List1toUnbounded<PositiveInteger> value):base(value){} public List1toUnbounded_PositiveInteger(){} public List1toUnbounded_PositiveInteger(params PositiveInteger[] items):base(){foreach (PositiveInteger e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420055,TableId:8,LayerId:30)] public partial class List1toUnbounded_SegmentIndexSelect:List1toUnbounded<SegmentIndexSelect>{public List1toUnbounded_SegmentIndexSelect(List1toUnbounded<SegmentIndexSelect> value):base(value){} public List1toUnbounded_SegmentIndexSelect(){} public List1toUnbounded_SegmentIndexSelect(params SegmentIndexSelect[] items):base(){foreach (SegmentIndexSelect e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420056,TableId:8,LayerId:32)] public partial class List3toUnbounded_PositiveInteger:List3toUnbounded<PositiveInteger>{public List3toUnbounded_PositiveInteger(List3toUnbounded<PositiveInteger> value):base(value){} public List3toUnbounded_PositiveInteger(){} public List3toUnbounded_PositiveInteger(params PositiveInteger[] items):base(){foreach (PositiveInteger e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420058,TableId:8,LayerId:33)] public partial class List1toUnbounded_SurfaceTexture:List1toUnbounded<SurfaceTexture>{public List1toUnbounded_SurfaceTexture(List1toUnbounded<SurfaceTexture> value):base(value){} public List1toUnbounded_SurfaceTexture(){} public List1toUnbounded_SurfaceTexture(params SurfaceTexture[] items):base(){foreach (SurfaceTexture e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420060,TableId:8,LayerId:30)] public partial class List1to2_Pcurve           :List1to2<Pcurve>{public List1to2_Pcurve           (List1to2<Pcurve> value):base(value){} public List1to2_Pcurve           (){} public List1to2_Pcurve           (params Pcurve[] items):base(){foreach (Pcurve e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420061,TableId:8,LayerId:22)] public partial class Set1toUnbounded_Person    :Set1toUnbounded<Person>{public Set1toUnbounded_Person    (Set1toUnbounded<Person> value):base(value){} public Set1toUnbounded_Person    (){} public Set1toUnbounded_Person    (params Person[] items):base(){foreach (Person e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420062,TableId:8,LayerId:-1)] public partial class List1toUnbounded_IrregularTimeSeriesValue:List1toUnbounded<IrregularTimeSeriesValue>{public List1toUnbounded_IrregularTimeSeriesValue(List1toUnbounded<IrregularTimeSeriesValue> value):base(value){} public List1toUnbounded_IrregularTimeSeriesValue(){} public List1toUnbounded_IrregularTimeSeriesValue(params IrregularTimeSeriesValue[] items):base(){foreach (IrregularTimeSeriesValue e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420063,TableId:8,LayerId:32)] public partial class List1toUnbounded_Value    :List1toUnbounded<Value>{public List1toUnbounded_Value    (List1toUnbounded<Value> value):base(value){} public List1toUnbounded_Value    (){} public List1toUnbounded_Value    (params Value[] items):base(){foreach (Value e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420064,TableId:8,LayerId:32)] public partial class List1toUnbounded_PlaneAngleMeasure:List1toUnbounded<PlaneAngleMeasure>{public List1toUnbounded_PlaneAngleMeasure(List1toUnbounded<PlaneAngleMeasure> value):base(value){} public List1toUnbounded_PlaneAngleMeasure(){} public List1toUnbounded_PlaneAngleMeasure(params PlaneAngleMeasure[] items):base(){foreach (PlaneAngleMeasure e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420065,TableId:8,LayerId:32)] public partial class List1toUnbounded_LuminousIntensityDistributionMeasure:List1toUnbounded<LuminousIntensityDistributionMeasure>{public List1toUnbounded_LuminousIntensityDistributionMeasure(List1toUnbounded<LuminousIntensityDistributionMeasure> value):base(value){} public List1toUnbounded_LuminousIntensityDistributionMeasure(){} public List1toUnbounded_LuminousIntensityDistributionMeasure(params LuminousIntensityDistributionMeasure[] items):base(){foreach (LuminousIntensityDistributionMeasure e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420066,TableId:8,LayerId:35)] public partial class List1toUnbounded_LightDistributionData:List1toUnbounded<LightDistributionData>{public List1toUnbounded_LightDistributionData(List1toUnbounded<LightDistributionData> value):base(value){} public List1toUnbounded_LightDistributionData(){} public List1toUnbounded_LightDistributionData(params LightDistributionData[] items):base(){foreach (LightDistributionData e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420067,TableId:8,LayerId:27)] public partial class Set1toUnbounded_ClassificationSelect:Set1toUnbounded<ClassificationSelect>{public Set1toUnbounded_ClassificationSelect(Set1toUnbounded<ClassificationSelect> value):base(value){} public Set1toUnbounded_ClassificationSelect(){} public Set1toUnbounded_ClassificationSelect(params ClassificationSelect[] items):base(){foreach (ClassificationSelect e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420068,TableId:8,LayerId:31)] public partial class Set1toUnbounded_MaterialConstituent:Set1toUnbounded<MaterialConstituent>{public Set1toUnbounded_MaterialConstituent(Set1toUnbounded<MaterialConstituent> value):base(value){} public Set1toUnbounded_MaterialConstituent(){} public Set1toUnbounded_MaterialConstituent(params MaterialConstituent[] items):base(){foreach (MaterialConstituent e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420069,TableId:8,LayerId:39)] public partial class List1toUnbounded_Representation:List1toUnbounded<Representation>{public List1toUnbounded_Representation(List1toUnbounded<Representation> value):base(value){} public List1toUnbounded_Representation(){} public List1toUnbounded_Representation(params Representation[] items):base(){foreach (Representation e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420070,TableId:8,LayerId:31)] public partial class List1toUnbounded_MaterialLayer:List1toUnbounded<MaterialLayer>{public List1toUnbounded_MaterialLayer(List1toUnbounded<MaterialLayer> value):base(value){} public List1toUnbounded_MaterialLayer(){} public List1toUnbounded_MaterialLayer(params MaterialLayer[] items):base(){foreach (MaterialLayer e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420071,TableId:8,LayerId:32)] public partial class Array1to2_LengthMeasure   :Array1to2<LengthMeasure>{public Array1to2_LengthMeasure   (Array1to2<LengthMeasure> value):base(value){} public Array1to2_LengthMeasure   (){} public Array1to2_LengthMeasure   (params LengthMeasure[] items):base(){foreach (LengthMeasure e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420072,TableId:8,LayerId:31)] public partial class List1toUnbounded_Material :List1toUnbounded<Material>{public List1toUnbounded_Material (List1toUnbounded<Material> value):base(value){} public List1toUnbounded_Material (){} public List1toUnbounded_Material (params Material[] items):base(){foreach (Material e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420073,TableId:8,LayerId:31)] public partial class List1toUnbounded_MaterialProfile:List1toUnbounded<MaterialProfile>{public List1toUnbounded_MaterialProfile(List1toUnbounded<MaterialProfile> value):base(value){} public List1toUnbounded_MaterialProfile(){} public List1toUnbounded_MaterialProfile(params MaterialProfile[] items):base(){foreach (MaterialProfile e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420074,TableId:8,LayerId:31)] public partial class Set1toUnbounded_Material  :Set1toUnbounded<Material>{public Set1toUnbounded_Material  (Set1toUnbounded<Material> value):base(value){} public Set1toUnbounded_Material  (){} public Set1toUnbounded_Material  (params Material[] items):base(){foreach (Material e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420075,TableId:8,LayerId:24)] public partial class List1toUnbounded_Constraint:List1toUnbounded<Constraint>{public List1toUnbounded_Constraint(List1toUnbounded<Constraint> value):base(value){} public List1toUnbounded_Constraint(){} public List1toUnbounded_Constraint(params Constraint[] items):base(){foreach (Constraint e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420076,TableId:8,LayerId:30)] public partial class List1toUnbounded_DistanceExpression:List1toUnbounded<DistanceExpression>{public List1toUnbounded_DistanceExpression(List1toUnbounded<DistanceExpression> value):base(value){} public List1toUnbounded_DistanceExpression(){} public List1toUnbounded_DistanceExpression(params DistanceExpression[] items):base(){foreach (DistanceExpression e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420077,TableId:8,LayerId:22)] public partial class List1toUnbounded_ActorRole:List1toUnbounded<ActorRole>{public List1toUnbounded_ActorRole(List1toUnbounded<ActorRole> value):base(value){} public List1toUnbounded_ActorRole(){} public List1toUnbounded_ActorRole(params ActorRole[] items):base(){foreach (ActorRole e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420078,TableId:8,LayerId:22)] public partial class List1toUnbounded_Address  :List1toUnbounded<Address>{public List1toUnbounded_Address  (List1toUnbounded<Address> value):base(value){} public List1toUnbounded_Address  (){} public List1toUnbounded_Address  (params Address[] items):base(){foreach (Address e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420079,TableId:8,LayerId:22)] public partial class Set1toUnbounded_Organization:Set1toUnbounded<Organization>{public Set1toUnbounded_Organization(Set1toUnbounded<Organization> value):base(value){} public Set1toUnbounded_Organization(){} public Set1toUnbounded_Organization(params Organization[] items):base(){foreach (Organization e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420080,TableId:8,LayerId:32)] public partial class List1toUnbounded_Binary   :List1toUnbounded<Binary>{public List1toUnbounded_Binary   (List1toUnbounded<Binary> value):base(value){} public List1toUnbounded_Binary   (){} public List1toUnbounded_Binary   (params Binary[] items):base(){foreach (Binary e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420081,TableId:8,LayerId:30)] public partial class List3toUnbounded_CartesianPoint:List3toUnbounded<CartesianPoint>{public List3toUnbounded_CartesianPoint(List3toUnbounded<CartesianPoint> value):base(value){} public List3toUnbounded_CartesianPoint(){} public List3toUnbounded_CartesianPoint(params CartesianPoint[] items):base(){foreach (CartesianPoint e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420082,TableId:8,LayerId:29)] public partial class List1toUnbounded_IndexedPolygonalFace:List1toUnbounded<IndexedPolygonalFace>{public List1toUnbounded_IndexedPolygonalFace(List1toUnbounded<IndexedPolygonalFace> value):base(value){} public List1toUnbounded_IndexedPolygonalFace(){} public List1toUnbounded_IndexedPolygonalFace(params IndexedPolygonalFace[] items):base(){foreach (IndexedPolygonalFace e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420083,TableId:8,LayerId:35)] public partial class Set1toUnbounded_LayeredItem:Set1toUnbounded<LayeredItem>{public Set1toUnbounded_LayeredItem(Set1toUnbounded<LayeredItem> value):base(value){} public Set1toUnbounded_LayeredItem(){} public Set1toUnbounded_LayeredItem(params LayeredItem[] items):base(){foreach (LayeredItem e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420084,TableId:8,LayerId:33)] public partial class Set0toUnbounded_PresentationStyle:Set0toUnbounded<PresentationStyle>{public Set0toUnbounded_PresentationStyle(Set0toUnbounded<PresentationStyle> value):base(value){} public Set0toUnbounded_PresentationStyle(){} public Set0toUnbounded_PresentationStyle(params PresentationStyle[] items):base(){foreach (PresentationStyle e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420085,TableId:8,LayerId:33)] public partial class Set1toUnbounded_PresentationStyleSelect:Set1toUnbounded<PresentationStyleSelect>{public Set1toUnbounded_PresentationStyleSelect(Set1toUnbounded<PresentationStyleSelect> value):base(value){} public Set1toUnbounded_PresentationStyleSelect(){} public Set1toUnbounded_PresentationStyleSelect(params PresentationStyleSelect[] items):base(){foreach (PresentationStyleSelect e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420086,TableId:8,LayerId:32)] public partial class List2toUnbounded_Real     :List2toUnbounded<Real>{public List2toUnbounded_Real     (List2toUnbounded<Real> value):base(value){} public List2toUnbounded_Real     (){} public List2toUnbounded_Real     (params Real[] items):base(){foreach (Real e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420088,TableId:8,LayerId:26)] public partial class Set1toUnbounded_DayInMonthNumber:Set1toUnbounded<DayInMonthNumber>{public Set1toUnbounded_DayInMonthNumber(Set1toUnbounded<DayInMonthNumber> value):base(value){} public Set1toUnbounded_DayInMonthNumber(){} public Set1toUnbounded_DayInMonthNumber(params DayInMonthNumber[] items):base(){foreach (DayInMonthNumber e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420089,TableId:8,LayerId:26)] public partial class Set1toUnbounded_DayInWeekNumber:Set1toUnbounded<DayInWeekNumber>{public Set1toUnbounded_DayInWeekNumber(Set1toUnbounded<DayInWeekNumber> value):base(value){} public Set1toUnbounded_DayInWeekNumber(){} public Set1toUnbounded_DayInWeekNumber(params DayInWeekNumber[] items):base(){foreach (DayInWeekNumber e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420090,TableId:8,LayerId:26)] public partial class Set1toUnbounded_MonthInYearNumber:Set1toUnbounded<MonthInYearNumber>{public Set1toUnbounded_MonthInYearNumber(Set1toUnbounded<MonthInYearNumber> value):base(value){} public Set1toUnbounded_MonthInYearNumber(){} public Set1toUnbounded_MonthInYearNumber(params MonthInYearNumber[] items):base(){foreach (MonthInYearNumber e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420091,TableId:8,LayerId:26)] public partial class List1toUnbounded_TimePeriod:List1toUnbounded<TimePeriod>{public List1toUnbounded_TimePeriod(List1toUnbounded<TimePeriod> value):base(value){} public List1toUnbounded_TimePeriod(){} public List1toUnbounded_TimePeriod(params TimePeriod[] items):base(){foreach (TimePeriod e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420092,TableId:8,LayerId:32)] public partial class List1toUnbounded_Integer  :List1toUnbounded<Integer>{public List1toUnbounded_Integer  (List1toUnbounded<Integer> value):base(value){} public List1toUnbounded_Integer  (){} public List1toUnbounded_Integer  (params Integer[] items):base(){foreach (Integer e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420093,TableId:8,LayerId:26)] public partial class List1toUnbounded_TimeSeriesValue:List1toUnbounded<TimeSeriesValue>{public List1toUnbounded_TimeSeriesValue(List1toUnbounded<TimeSeriesValue> value):base(value){} public List1toUnbounded_TimeSeriesValue(){} public List1toUnbounded_TimeSeriesValue(params TimeSeriesValue[] items):base(){foreach (TimeSeriesValue e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420094,TableId:8,LayerId:36)] public partial class List1toUnbounded_SectionReinforcementProperties:List1toUnbounded<SectionReinforcementProperties>{public List1toUnbounded_SectionReinforcementProperties(List1toUnbounded<SectionReinforcementProperties> value):base(value){} public List1toUnbounded_SectionReinforcementProperties(){} public List1toUnbounded_SectionReinforcementProperties(params SectionReinforcementProperties[] items):base(){foreach (SectionReinforcementProperties e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420095,TableId:8,LayerId:21)] public partial class List1toUnbounded_BendingParameterSelect:List1toUnbounded<BendingParameterSelect>{public List1toUnbounded_BendingParameterSelect(List1toUnbounded<BendingParameterSelect> value):base(value){} public List1toUnbounded_BendingParameterSelect(){} public List1toUnbounded_BendingParameterSelect(params BendingParameterSelect[] items):base(){foreach (BendingParameterSelect e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420096,TableId:8,LayerId: 2)] public partial class Set1toUnbounded_ObjectDefinition:Set1toUnbounded<ObjectDefinition>{public Set1toUnbounded_ObjectDefinition(Set1toUnbounded<ObjectDefinition> value):base(value){} public Set1toUnbounded_ObjectDefinition(){} public Set1toUnbounded_ObjectDefinition(params ObjectDefinition[] items):base(){foreach (ObjectDefinition e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420097,TableId:8,LayerId: 2)] public partial class Set1toUnbounded_DefinitionSelect:Set1toUnbounded<DefinitionSelect>{public Set1toUnbounded_DefinitionSelect(Set1toUnbounded<DefinitionSelect> value):base(value){} public Set1toUnbounded_DefinitionSelect(){} public Set1toUnbounded_DefinitionSelect(params DefinitionSelect[] items):base(){foreach (DefinitionSelect e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420098,TableId:8,LayerId:32)] public partial class List0toUnbounded_Integer  :List0toUnbounded<Integer>{public List0toUnbounded_Integer  (List0toUnbounded<Integer> value):base(value){} public List0toUnbounded_Integer  (){} public List0toUnbounded_Integer  (params Integer[] items):base(){foreach (Integer e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420099,TableId:8,LayerId: 4)] public partial class Set1toUnbounded_Element   :Set1toUnbounded<Element>{public Set1toUnbounded_Element   (Set1toUnbounded<Element> value):base(value){} public Set1toUnbounded_Element   (){} public Set1toUnbounded_Element   (params Element[] items):base(){foreach (Element e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420100,TableId:8,LayerId: 2)] public partial class Set1toUnbounded_Product   :Set1toUnbounded<Product>{public Set1toUnbounded_Product   (Set1toUnbounded<Product> value):base(value){} public Set1toUnbounded_Product   (){} public Set1toUnbounded_Product   (params Product[] items):base(){foreach (Product e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420101,TableId:8,LayerId: 5)] public partial class Set1toUnbounded_Covering  :Set1toUnbounded<Covering>{public Set1toUnbounded_Covering  (Set1toUnbounded<Covering> value):base(value){} public Set1toUnbounded_Covering  (){} public Set1toUnbounded_Covering  (params Covering[] items):base(){foreach (Covering e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420102,TableId:8,LayerId: 2)] public partial class Set1toUnbounded_Object    :Set1toUnbounded<Object>{public Set1toUnbounded_Object    (Set1toUnbounded<Object> value):base(value){} public Set1toUnbounded_Object    (){} public Set1toUnbounded_Object    (params Object[] items):base(){foreach (Object e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420103,TableId:8,LayerId: 6)] public partial class Set1toUnbounded_DistributionControlElement:Set1toUnbounded<DistributionControlElement>{public Set1toUnbounded_DistributionControlElement(Set1toUnbounded<DistributionControlElement> value):base(value){} public Set1toUnbounded_DistributionControlElement(){} public Set1toUnbounded_DistributionControlElement(params DistributionControlElement[] items):base(){foreach (DistributionControlElement e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420104,TableId:8,LayerId: 2)] public partial class List1toUnbounded_ObjectDefinition:List1toUnbounded<ObjectDefinition>{public List1toUnbounded_ObjectDefinition(List1toUnbounded<ObjectDefinition> value):base(value){} public List1toUnbounded_ObjectDefinition(){} public List1toUnbounded_ObjectDefinition(params ObjectDefinition[] items):base(){foreach (ObjectDefinition e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420105,TableId:8,LayerId: 4)] public partial class Set1toUnbounded_SpatialElement:Set1toUnbounded<SpatialElement>{public Set1toUnbounded_SpatialElement(Set1toUnbounded<SpatialElement> value):base(value){} public Set1toUnbounded_SpatialElement(){} public Set1toUnbounded_SpatialElement(params SpatialElement[] items):base(){foreach (SpatialElement e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420106,TableId:8,LayerId:30)] public partial class Set1toUnbounded_RepresentationItem:Set1toUnbounded<RepresentationItem>{public Set1toUnbounded_RepresentationItem(Set1toUnbounded<RepresentationItem> value):base(value){} public Set1toUnbounded_RepresentationItem(){} public Set1toUnbounded_RepresentationItem(params RepresentationItem[] items):base(){foreach (RepresentationItem e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420107,TableId:8,LayerId:36)] public partial class Set1toUnbounded_ReinforcementBarProperties:Set1toUnbounded<ReinforcementBarProperties>{public Set1toUnbounded_ReinforcementBarProperties(Set1toUnbounded<ReinforcementBarProperties> value):base(value){} public Set1toUnbounded_ReinforcementBarProperties(){} public Set1toUnbounded_ReinforcementBarProperties(params ReinforcementBarProperties[] items):base(){foreach (ReinforcementBarProperties e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420108,TableId:8,LayerId:36)] public partial class List2toUnbounded_ProfileDef:List2toUnbounded<ProfileDef>{public List2toUnbounded_ProfileDef(List2toUnbounded<ProfileDef> value):base(value){} public List2toUnbounded_ProfileDef(){} public List2toUnbounded_ProfileDef(params ProfileDef[] items):base(){foreach (ProfileDef e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420109,TableId:8,LayerId:30)] public partial class List2toUnbounded_DistanceExpression:List2toUnbounded<DistanceExpression>{public List2toUnbounded_DistanceExpression(List2toUnbounded<DistanceExpression> value):base(value){} public List2toUnbounded_DistanceExpression(){} public List2toUnbounded_DistanceExpression(params DistanceExpression[] items):base(){foreach (DistanceExpression e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420110,TableId:8,LayerId:30)] public partial class List2toUnbounded_Axis2Placement3D:List2toUnbounded<Axis2Placement3D>{public List2toUnbounded_Axis2Placement3D(List2toUnbounded<Axis2Placement3D> value):base(value){} public List2toUnbounded_Axis2Placement3D(){} public List2toUnbounded_Axis2Placement3D(params Axis2Placement3D[] items):base(){foreach (Axis2Placement3D e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420111,TableId:8,LayerId:39)] public partial class List1toUnbounded_ShapeModel:List1toUnbounded<ShapeModel>{public List1toUnbounded_ShapeModel(List1toUnbounded<ShapeModel> value):base(value){} public List1toUnbounded_ShapeModel(){} public List1toUnbounded_ShapeModel(params ShapeModel[] items):base(){foreach (ShapeModel e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420112,TableId:8,LayerId:41)] public partial class Set1toUnbounded_Shell     :Set1toUnbounded<Shell>{public Set1toUnbounded_Shell     (Set1toUnbounded<Shell> value):base(value){} public Set1toUnbounded_Shell     (){} public Set1toUnbounded_Shell     (params Shell[] items):base(){foreach (Shell e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420113,TableId:8,LayerId:20)] public partial class Set1toUnbounded_StructuralLoadGroup:Set1toUnbounded<StructuralLoadGroup>{public Set1toUnbounded_StructuralLoadGroup(Set1toUnbounded<StructuralLoadGroup> value):base(value){} public Set1toUnbounded_StructuralLoadGroup(){} public Set1toUnbounded_StructuralLoadGroup(params StructuralLoadGroup[] items):base(){foreach (StructuralLoadGroup e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420114,TableId:8,LayerId:20)] public partial class Set1toUnbounded_StructuralResultGroup:Set1toUnbounded<StructuralResultGroup>{public Set1toUnbounded_StructuralResultGroup(Set1toUnbounded<StructuralResultGroup> value):base(value){} public Set1toUnbounded_StructuralResultGroup(){} public Set1toUnbounded_StructuralResultGroup(params StructuralResultGroup[] items):base(){foreach (StructuralResultGroup e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420115,TableId:8,LayerId:32)] public partial class List3to3_RatioMeasure     :List3to3<RatioMeasure>{public List3to3_RatioMeasure     (List3to3<RatioMeasure> value):base(value){} public List3to3_RatioMeasure     (){} public List3to3_RatioMeasure     (params RatioMeasure[] items):base(){foreach (RatioMeasure e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420116,TableId:8,LayerId:40)] public partial class List1toUnbounded_StructuralLoadOrResult:List1toUnbounded<StructuralLoadOrResult>{public List1toUnbounded_StructuralLoadOrResult(List1toUnbounded<StructuralLoadOrResult> value):base(value){} public List1toUnbounded_StructuralLoadOrResult(){} public List1toUnbounded_StructuralLoadOrResult(params StructuralLoadOrResult[] items):base(){foreach (StructuralLoadOrResult e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420118,TableId:8,LayerId:33)] public partial class Set1toUnbounded_StyleAssignmentSelect:Set1toUnbounded<StyleAssignmentSelect>{public Set1toUnbounded_StyleAssignmentSelect(Set1toUnbounded<StyleAssignmentSelect> value):base(value){} public Set1toUnbounded_StyleAssignmentSelect(){} public Set1toUnbounded_StyleAssignmentSelect(params StyleAssignmentSelect[] items):base(){foreach (StyleAssignmentSelect e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420119,TableId:8,LayerId:32)] public partial class List2to3_LengthMeasure    :List2to3<LengthMeasure>{public List2to3_LengthMeasure    (List2to3<LengthMeasure> value):base(value){} public List2to3_LengthMeasure    (){} public List2to3_LengthMeasure    (params LengthMeasure[] items):base(){foreach (LengthMeasure e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420120,TableId:8,LayerId:33)] public partial class Set1to5_SurfaceStyleElementSelect:Set1to5<SurfaceStyleElementSelect>{public Set1to5_SurfaceStyleElementSelect(Set1to5<SurfaceStyleElementSelect> value):base(value){} public Set1to5_SurfaceStyleElementSelect(){} public Set1to5_SurfaceStyleElementSelect(params SurfaceStyleElementSelect[] items):base(){foreach (SurfaceStyleElementSelect e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420121,TableId:8,LayerId:42)] public partial class List1toUnbounded_TableRow :List1toUnbounded<TableRow>{public List1toUnbounded_TableRow (List1toUnbounded<TableRow> value):base(value){} public List1toUnbounded_TableRow (){} public List1toUnbounded_TableRow (params TableRow[] items):base(){foreach (TableRow e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420122,TableId:8,LayerId:42)] public partial class List1toUnbounded_TableColumn:List1toUnbounded<TableColumn>{public List1toUnbounded_TableColumn(List1toUnbounded<TableColumn> value):base(value){} public List1toUnbounded_TableColumn(){} public List1toUnbounded_TableColumn(params TableColumn[] items):base(){foreach (TableColumn e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420123,TableId:8,LayerId:27)] public partial class List1toUnbounded_URIReference:List1toUnbounded<URIReference>{public List1toUnbounded_URIReference(List1toUnbounded<URIReference> value):base(value){} public List1toUnbounded_URIReference(){} public List1toUnbounded_URIReference(params URIReference[] items):base(){foreach (URIReference e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420124,TableId:8,LayerId:33)] public partial class List1toUnbounded_TextFontName:List1toUnbounded<TextFontName>{public List1toUnbounded_TextFontName(List1toUnbounded<TextFontName> value):base(value){} public List1toUnbounded_TextFontName(){} public List1toUnbounded_TextFontName(params TextFontName[] items):base(){foreach (TextFontName e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420125,TableId:8,LayerId:32)] public partial class List1toUnbounded_Real     :List1toUnbounded<Real>{public List1toUnbounded_Real     (List1toUnbounded<Real> value):base(value){} public List1toUnbounded_Real     (){} public List1toUnbounded_Real     (params Real[] items):base(){foreach (Real e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420126,TableId:8,LayerId:33)] public partial class List3toUnbounded_TextureVertex:List3toUnbounded<TextureVertex>{public List3toUnbounded_TextureVertex(List3toUnbounded<TextureVertex> value):base(value){} public List3toUnbounded_TextureVertex(){} public List3toUnbounded_TextureVertex(params TextureVertex[] items):base(){foreach (TextureVertex e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420127,TableId:8,LayerId:32)] public partial class List2to2_ParameterValue   :List2to2<ParameterValue>{public List2to2_ParameterValue   (List2to2<ParameterValue> value):base(value){} public List2to2_ParameterValue   (){} public List2to2_ParameterValue   (params ParameterValue[] items):base(){foreach (ParameterValue e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420130,TableId:8,LayerId:30)] public partial class Set1to2_TrimmingSelect    :Set1to2<TrimmingSelect>{public Set1to2_TrimmingSelect    (Set1to2<TrimmingSelect> value):base(value){} public Set1to2_TrimmingSelect    (){} public Set1to2_TrimmingSelect    (params TrimmingSelect[] items):base(){foreach (TrimmingSelect e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420131,TableId:8,LayerId:32)] public partial class Set1toUnbounded_Unit      :Set1toUnbounded<Unit>{public Set1toUnbounded_Unit      (Set1toUnbounded<Unit> value):base(value){} public Set1toUnbounded_Unit      (){} public Set1toUnbounded_Unit      (params Unit[] items):base(){foreach (Unit e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420132,TableId:8,LayerId:28)] public partial class List2to2_GridAxis         :List2to2<GridAxis>{public List2to2_GridAxis         (List2to2<GridAxis> value):base(value){} public List2to2_GridAxis         (){} public List2to2_GridAxis         (params GridAxis[] items):base(){foreach (GridAxis e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:420133,TableId:8,LayerId:26)] public partial class Set1toUnbounded_WorkTime  :Set1toUnbounded<WorkTime>{public Set1toUnbounded_WorkTime  (Set1toUnbounded<WorkTime> value):base(value){} public Set1toUnbounded_WorkTime  (){} public Set1toUnbounded_WorkTime  (params WorkTime[] items):base(){foreach (WorkTime e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }


//LISTTYPE2D:
[ifcSql(TypeGroupId:2,TypeId:420023,TableId:14,LayerId:30)] public partial class List2toUnbounded_List2toUnbounded_CartesianPoint:List2toUnbounded<ListElement_List2toUnbounded_CartesianPoint>{public List2toUnbounded_List2toUnbounded_CartesianPoint(List2toUnbounded<ListElement_List2toUnbounded_CartesianPoint> value):base(value){} public List2toUnbounded_List2toUnbounded_CartesianPoint(){} public List2toUnbounded_List2toUnbounded_CartesianPoint(params ListElement_List2toUnbounded_CartesianPoint[] items):base(){foreach (ListElement_List2toUnbounded_CartesianPoint e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:2,TypeId:420027,TableId:14,LayerId:32)] public partial class List1toUnbounded_List2to2_LengthMeasure:List1toUnbounded<ListElement_List2to2_LengthMeasure>{public List1toUnbounded_List2to2_LengthMeasure(List1toUnbounded<ListElement_List2to2_LengthMeasure> value):base(value){} public List1toUnbounded_List2to2_LengthMeasure(){} public List1toUnbounded_List2to2_LengthMeasure(params ListElement_List2to2_LengthMeasure[] items):base(){foreach (ListElement_List2to2_LengthMeasure e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:2,TypeId:420029,TableId:14,LayerId:32)] public partial class List1toUnbounded_List3to3_LengthMeasure:List1toUnbounded<ListElement_List3to3_LengthMeasure>{public List1toUnbounded_List3to3_LengthMeasure(List1toUnbounded<ListElement_List3to3_LengthMeasure> value):base(value){} public List1toUnbounded_List3to3_LengthMeasure(){} public List1toUnbounded_List3to3_LengthMeasure(params ListElement_List3to3_LengthMeasure[] items):base(){foreach (ListElement_List3to3_LengthMeasure e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:2,TypeId:420031,TableId:14,LayerId:32)] public partial class List1toUnbounded_List3to3_NormalisedRatioMeasure:List1toUnbounded<ListElement_List3to3_NormalisedRatioMeasure>{public List1toUnbounded_List3to3_NormalisedRatioMeasure(List1toUnbounded<ListElement_List3to3_NormalisedRatioMeasure> value):base(value){} public List1toUnbounded_List3to3_NormalisedRatioMeasure(){} public List1toUnbounded_List3to3_NormalisedRatioMeasure(params ListElement_List3to3_NormalisedRatioMeasure[] items):base(){foreach (ListElement_List3to3_NormalisedRatioMeasure e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:2,TypeId:420057,TableId:14,LayerId:32)] public partial class List1toUnbounded_List3toUnbounded_PositiveInteger:List1toUnbounded<ListElement_List3toUnbounded_PositiveInteger>{public List1toUnbounded_List3toUnbounded_PositiveInteger(List1toUnbounded<ListElement_List3toUnbounded_PositiveInteger> value):base(value){} public List1toUnbounded_List3toUnbounded_PositiveInteger(){} public List1toUnbounded_List3toUnbounded_PositiveInteger(params ListElement_List3toUnbounded_PositiveInteger[] items):base(){foreach (ListElement_List3toUnbounded_PositiveInteger e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:2,TypeId:420059,TableId:14,LayerId:32)] public partial class List1toUnbounded_List3to3_PositiveInteger:List1toUnbounded<ListElement_List3to3_PositiveInteger>{public List1toUnbounded_List3to3_PositiveInteger(List1toUnbounded<ListElement_List3to3_PositiveInteger> value):base(value){} public List1toUnbounded_List3to3_PositiveInteger(){} public List1toUnbounded_List3to3_PositiveInteger(params ListElement_List3to3_PositiveInteger[] items):base(){foreach (ListElement_List3to3_PositiveInteger e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:2,TypeId:420087,TableId:14,LayerId:32)] public partial class List2toUnbounded_List2toUnbounded_Real:List2toUnbounded<ListElement_List2toUnbounded_Real>{public List2toUnbounded_List2toUnbounded_Real(List2toUnbounded<ListElement_List2toUnbounded_Real> value):base(value){} public List2toUnbounded_List2toUnbounded_Real(){} public List2toUnbounded_List2toUnbounded_Real(params ListElement_List2toUnbounded_Real[] items):base(){foreach (ListElement_List2toUnbounded_Real e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:2,TypeId:420117,TableId:14,LayerId:32)] public partial class List1toUnbounded_List1to2_LengthMeasure:List1toUnbounded<ListElement_List1to2_LengthMeasure>{public List1toUnbounded_List1to2_LengthMeasure(List1toUnbounded<ListElement_List1to2_LengthMeasure> value):base(value){} public List1toUnbounded_List1to2_LengthMeasure(){} public List1toUnbounded_List1to2_LengthMeasure(params ListElement_List1to2_LengthMeasure[] items):base(){foreach (ListElement_List1to2_LengthMeasure e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:2,TypeId:420128,TableId:14,LayerId:32)] public partial class List1toUnbounded_List2to2_ParameterValue:List1toUnbounded<ListElement_List2to2_ParameterValue>{public List1toUnbounded_List2to2_ParameterValue(List1toUnbounded<ListElement_List2to2_ParameterValue> value):base(value){} public List1toUnbounded_List2to2_ParameterValue(){} public List1toUnbounded_List2to2_ParameterValue(params ListElement_List2to2_ParameterValue[] items):base(){foreach (ListElement_List2to2_ParameterValue e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:2,TypeId:420129,TableId:14,LayerId:32)] public partial class List1toUnbounded_List3to3_ParameterValue:List1toUnbounded<ListElement_List3to3_ParameterValue>{public List1toUnbounded_List3to3_ParameterValue(List1toUnbounded<ListElement_List3to3_ParameterValue> value):base(value){} public List1toUnbounded_List3to3_ParameterValue(){} public List1toUnbounded_List3to3_ParameterValue(params ListElement_List3to3_ParameterValue[] items):base(){foreach (ListElement_List3to3_ParameterValue e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }


//TYPES:
//documentation link see end of line
[ifcSql(TypeGroupId:3,TypeId:420002,TableId:7,LayerId:32)] public partial class Label                     :TYPE<string>    {public Label                     (string     value):base(value){}   public Label                     (){} public static implicit operator Label                     (string     value){return new Label                     { IsNull=false, TypeValue = value };}public static implicit operator string    (Label                      value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifclabel.htm
[ifcSql(TypeGroupId:3,TypeId:420005,TableId:7,LayerId:32)] public partial class Identifier                :TYPE<string>    {public Identifier                (string     value):base(value){}   public Identifier                (){} public static implicit operator Identifier                (string     value){return new Identifier                { IsNull=false, TypeValue = value };}public static implicit operator string    (Identifier                 value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcidentifier.htm
[ifcSql(TypeGroupId:3,TypeId:420007,TableId:5,LayerId:32)] public partial class LengthMeasure             :TYPE<double>    {public LengthMeasure             (double     value):base(value){}   public LengthMeasure             (){} public static implicit operator LengthMeasure             (double     value){return new LengthMeasure             { IsNull=false, TypeValue = value };}public static implicit operator double    (LengthMeasure              value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifclengthmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420008,TableId:5,LayerId:32)] public partial class RatioMeasure              :TYPE<double>    {public RatioMeasure              (double     value):base(value){}   public RatioMeasure              (){} public static implicit operator RatioMeasure              (double     value){return new RatioMeasure              { IsNull=false, TypeValue = value };}public static implicit operator double    (RatioMeasure               value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcratiomeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420009,TableId:6,LayerId:32)] public partial class Integer                   :TYPE<int>       {public Integer                   (int        value):base(value){}   public Integer                   (){} public static implicit operator Integer                   (int        value){return new Integer                   { IsNull=false, TypeValue = value };}public static implicit operator int       (Integer                    value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcinteger.htm
[ifcSql(TypeGroupId:3,TypeId:420010,TableId:5,LayerId:32)] public partial class PlaneAngleMeasure         :TYPE<double>    {public PlaneAngleMeasure         (double     value):base(value){}   public PlaneAngleMeasure         (){} public static implicit operator PlaneAngleMeasure         (double     value){return new PlaneAngleMeasure         { IsNull=false, TypeValue = value };}public static implicit operator double    (PlaneAngleMeasure          value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcplaneanglemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420144,TableId:5,LayerId:32)] public partial class AbsorbedDoseMeasure       :TYPE<double>    {public AbsorbedDoseMeasure       (double     value):base(value){}   public AbsorbedDoseMeasure       (){} public static implicit operator AbsorbedDoseMeasure       (double     value){return new AbsorbedDoseMeasure       { IsNull=false, TypeValue = value };}public static implicit operator double    (AbsorbedDoseMeasure        value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcabsorbeddosemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420145,TableId:5,LayerId:32)] public partial class AccelerationMeasure       :TYPE<double>    {public AccelerationMeasure       (double     value):base(value){}   public AccelerationMeasure       (){} public static implicit operator AccelerationMeasure       (double     value){return new AccelerationMeasure       { IsNull=false, TypeValue = value };}public static implicit operator double    (AccelerationMeasure        value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcaccelerationmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420146,TableId:5,LayerId:32)] public partial class AmountOfSubstanceMeasure  :TYPE<double>    {public AmountOfSubstanceMeasure  (double     value):base(value){}   public AmountOfSubstanceMeasure  (){} public static implicit operator AmountOfSubstanceMeasure  (double     value){return new AmountOfSubstanceMeasure  { IsNull=false, TypeValue = value };}public static implicit operator double    (AmountOfSubstanceMeasure   value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcamountofsubstancemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420147,TableId:5,LayerId:32)] public partial class AngularVelocityMeasure    :TYPE<double>    {public AngularVelocityMeasure    (double     value):base(value){}   public AngularVelocityMeasure    (){} public static implicit operator AngularVelocityMeasure    (double     value){return new AngularVelocityMeasure    { IsNull=false, TypeValue = value };}public static implicit operator double    (AngularVelocityMeasure     value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcangularvelocitymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420148,TableId:8,LayerId:30)] public partial class ArcIndex                  :TYPE<List3to3<PositiveInteger>>{public ArcIndex                  (List3to3<PositiveInteger> value):base(value){}   public ArcIndex                  (){} public static implicit operator ArcIndex                  (List3to3<PositiveInteger> value){return new ArcIndex                  { IsNull=false, TypeValue = value };}public static implicit operator List3to3<PositiveInteger>(ArcIndex                   value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcarcindex.htm
[ifcSql(TypeGroupId:3,TypeId:420149,TableId:5,LayerId:32)] public partial class AreaDensityMeasure        :TYPE<double>    {public AreaDensityMeasure        (double     value):base(value){}   public AreaDensityMeasure        (){} public static implicit operator AreaDensityMeasure        (double     value){return new AreaDensityMeasure        { IsNull=false, TypeValue = value };}public static implicit operator double    (AreaDensityMeasure         value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcareadensitymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420150,TableId:5,LayerId:32)] public partial class AreaMeasure               :TYPE<double>    {public AreaMeasure               (double     value):base(value){}   public AreaMeasure               (){} public static implicit operator AreaMeasure               (double     value){return new AreaMeasure               { IsNull=false, TypeValue = value };}public static implicit operator double    (AreaMeasure                value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcareameasure.htm
[ifcSql(TypeGroupId:3,TypeId:420151,TableId:1,LayerId:32)] public partial class Binary                    :TYPE<string>    {public Binary                    (string     value):base(value){}   public Binary                    (){} public static implicit operator Binary                    (string     value){return new Binary                    { IsNull=false, TypeValue = value };}public static implicit operator string    (Binary                     value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcbinary.htm
[ifcSql(TypeGroupId:3,TypeId:420152,TableId:2,LayerId:32)] public partial class Boolean                   :TYPE<bool>      {public Boolean                   (bool       value):base(value){}   public Boolean                   (){} public static implicit operator Boolean                   (bool       value){return new Boolean                   { IsNull=false, TypeValue = value };}public static implicit operator bool      (Boolean                    value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcboolean.htm
[ifcSql(TypeGroupId:3,TypeId:420153,TableId:7,LayerId:34)] public partial class BoxAlignment              :TYPE<string>    {public BoxAlignment              (string     value):base(value){}   public BoxAlignment              (){} public static implicit operator BoxAlignment              (string     value){return new BoxAlignment              { IsNull=false, TypeValue = value };}public static implicit operator string    (BoxAlignment               value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcboxalignment.htm
[ifcSql(TypeGroupId:3,TypeId:420154,TableId:6,LayerId:31)] public partial class CardinalPointReference    :TYPE<int>       {public CardinalPointReference    (int        value):base(value){}   public CardinalPointReference    (){} public static implicit operator CardinalPointReference    (int        value){return new CardinalPointReference    { IsNull=false, TypeValue = value };}public static implicit operator int       (CardinalPointReference     value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifccardinalpointreference.htm
[ifcSql(TypeGroupId:3,TypeId:420155,TableId:8,LayerId:32)] public partial class ComplexNumber             :TYPE<Array1to2<double>>{public ComplexNumber             (Array1to2<double> value):base(value){}   public ComplexNumber             (){} public static implicit operator ComplexNumber             (Array1to2<double> value){return new ComplexNumber             { IsNull=false, TypeValue = value };}public static implicit operator Array1to2<double>(ComplexNumber              value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifccomplexnumber.htm
[ifcSql(TypeGroupId:3,TypeId:420156,TableId:8,LayerId:32)] public partial class CompoundPlaneAngleMeasure :TYPE<List3to4<int>>{public CompoundPlaneAngleMeasure (List3to4<int> value):base(value){}   public CompoundPlaneAngleMeasure (){} public static implicit operator CompoundPlaneAngleMeasure (List3to4<int> value){return new CompoundPlaneAngleMeasure { IsNull=false, TypeValue = value };}public static implicit operator List3to4<int>(CompoundPlaneAngleMeasure  value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifccompoundplaneanglemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420157,TableId:5,LayerId:32)] public partial class ContextDependentMeasure   :TYPE<double>    {public ContextDependentMeasure   (double     value):base(value){}   public ContextDependentMeasure   (){} public static implicit operator ContextDependentMeasure   (double     value){return new ContextDependentMeasure   { IsNull=false, TypeValue = value };}public static implicit operator double    (ContextDependentMeasure    value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifccontextdependentmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420158,TableId:5,LayerId:32)] public partial class CountMeasure              :TYPE<double>    {public CountMeasure              (double     value):base(value){}   public CountMeasure              (){} public static implicit operator CountMeasure              (double     value){return new CountMeasure              { IsNull=false, TypeValue = value };}public static implicit operator double    (CountMeasure               value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifccountmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420159,TableId:5,LayerId:32)] public partial class CurvatureMeasure          :TYPE<double>    {public CurvatureMeasure          (double     value):base(value){}   public CurvatureMeasure          (){} public static implicit operator CurvatureMeasure          (double     value){return new CurvatureMeasure          { IsNull=false, TypeValue = value };}public static implicit operator double    (CurvatureMeasure           value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifccurvaturemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420160,TableId:7,LayerId:26)] public partial class Date                      :TYPE<string>    {public Date                      (string     value):base(value){}   public Date                      (){} public static implicit operator Date                      (string     value){return new Date                      { IsNull=false, TypeValue = value };}public static implicit operator string    (Date                       value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcdate.htm
[ifcSql(TypeGroupId:3,TypeId:420161,TableId:7,LayerId:26)] public partial class DateTime                  :TYPE<string>    {public DateTime                  (string     value):base(value){}   public DateTime                  (){} public static implicit operator DateTime                  (string     value){return new DateTime                  { IsNull=false, TypeValue = value };}public static implicit operator string    (DateTime                   value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcdatetime.htm
[ifcSql(TypeGroupId:3,TypeId:420162,TableId:6,LayerId:26)] public partial class DayInMonthNumber          :TYPE<int>       {public DayInMonthNumber          (int        value):base(value){}   public DayInMonthNumber          (){} public static implicit operator DayInMonthNumber          (int        value){return new DayInMonthNumber          { IsNull=false, TypeValue = value };}public static implicit operator int       (DayInMonthNumber           value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcdayinmonthnumber.htm
[ifcSql(TypeGroupId:3,TypeId:420163,TableId:6,LayerId:26)] public partial class DayInWeekNumber           :TYPE<int>       {public DayInWeekNumber           (int        value):base(value){}   public DayInWeekNumber           (){} public static implicit operator DayInWeekNumber           (int        value){return new DayInWeekNumber           { IsNull=false, TypeValue = value };}public static implicit operator int       (DayInWeekNumber            value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcdayinweeknumber.htm
[ifcSql(TypeGroupId:3,TypeId:420164,TableId:7,LayerId:32)] public partial class DescriptiveMeasure        :TYPE<string>    {public DescriptiveMeasure        (string     value):base(value){}   public DescriptiveMeasure        (){} public static implicit operator DescriptiveMeasure        (string     value){return new DescriptiveMeasure        { IsNull=false, TypeValue = value };}public static implicit operator string    (DescriptiveMeasure         value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcdescriptivemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420165,TableId:6,LayerId:30)] public partial class DimensionCount            :TYPE<int>       {public DimensionCount            (int        value):base(value){}   public DimensionCount            (){} public static implicit operator DimensionCount            (int        value){return new DimensionCount            { IsNull=false, TypeValue = value };}public static implicit operator int       (DimensionCount             value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcdimensioncount.htm
[ifcSql(TypeGroupId:3,TypeId:420166,TableId:5,LayerId:32)] public partial class DoseEquivalentMeasure     :TYPE<double>    {public DoseEquivalentMeasure     (double     value):base(value){}   public DoseEquivalentMeasure     (){} public static implicit operator DoseEquivalentMeasure     (double     value){return new DoseEquivalentMeasure     { IsNull=false, TypeValue = value };}public static implicit operator double    (DoseEquivalentMeasure      value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcdoseequivalentmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420167,TableId:7,LayerId:26)] public partial class Duration                  :TYPE<string>    {public Duration                  (string     value):base(value){}   public Duration                  (){} public static implicit operator Duration                  (string     value){return new Duration                  { IsNull=false, TypeValue = value };}public static implicit operator string    (Duration                   value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcduration.htm
[ifcSql(TypeGroupId:3,TypeId:420168,TableId:5,LayerId:32)] public partial class DynamicViscosityMeasure   :TYPE<double>    {public DynamicViscosityMeasure   (double     value):base(value){}   public DynamicViscosityMeasure   (){} public static implicit operator DynamicViscosityMeasure   (double     value){return new DynamicViscosityMeasure   { IsNull=false, TypeValue = value };}public static implicit operator double    (DynamicViscosityMeasure    value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcdynamicviscositymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420169,TableId:5,LayerId:32)] public partial class ElectricCapacitanceMeasure:TYPE<double>    {public ElectricCapacitanceMeasure(double     value):base(value){}   public ElectricCapacitanceMeasure(){} public static implicit operator ElectricCapacitanceMeasure(double     value){return new ElectricCapacitanceMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (ElectricCapacitanceMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcelectriccapacitancemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420170,TableId:5,LayerId:32)] public partial class ElectricChargeMeasure     :TYPE<double>    {public ElectricChargeMeasure     (double     value):base(value){}   public ElectricChargeMeasure     (){} public static implicit operator ElectricChargeMeasure     (double     value){return new ElectricChargeMeasure     { IsNull=false, TypeValue = value };}public static implicit operator double    (ElectricChargeMeasure      value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcelectricchargemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420171,TableId:5,LayerId:32)] public partial class ElectricConductanceMeasure:TYPE<double>    {public ElectricConductanceMeasure(double     value):base(value){}   public ElectricConductanceMeasure(){} public static implicit operator ElectricConductanceMeasure(double     value){return new ElectricConductanceMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (ElectricConductanceMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcelectricconductancemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420172,TableId:5,LayerId:32)] public partial class ElectricCurrentMeasure    :TYPE<double>    {public ElectricCurrentMeasure    (double     value):base(value){}   public ElectricCurrentMeasure    (){} public static implicit operator ElectricCurrentMeasure    (double     value){return new ElectricCurrentMeasure    { IsNull=false, TypeValue = value };}public static implicit operator double    (ElectricCurrentMeasure     value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcelectriccurrentmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420173,TableId:5,LayerId:32)] public partial class ElectricResistanceMeasure :TYPE<double>    {public ElectricResistanceMeasure (double     value):base(value){}   public ElectricResistanceMeasure (){} public static implicit operator ElectricResistanceMeasure (double     value){return new ElectricResistanceMeasure { IsNull=false, TypeValue = value };}public static implicit operator double    (ElectricResistanceMeasure  value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcelectricresistancemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420174,TableId:5,LayerId:32)] public partial class ElectricVoltageMeasure    :TYPE<double>    {public ElectricVoltageMeasure    (double     value):base(value){}   public ElectricVoltageMeasure    (){} public static implicit operator ElectricVoltageMeasure    (double     value){return new ElectricVoltageMeasure    { IsNull=false, TypeValue = value };}public static implicit operator double    (ElectricVoltageMeasure     value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcelectricvoltagemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420175,TableId:5,LayerId:32)] public partial class EnergyMeasure             :TYPE<double>    {public EnergyMeasure             (double     value):base(value){}   public EnergyMeasure             (){} public static implicit operator EnergyMeasure             (double     value){return new EnergyMeasure             { IsNull=false, TypeValue = value };}public static implicit operator double    (EnergyMeasure              value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcenergymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420176,TableId:7,LayerId:33)] public partial class FontStyle                 :TYPE<string>    {public FontStyle                 (string     value):base(value){}   public FontStyle                 (){} public static implicit operator FontStyle                 (string     value){return new FontStyle                 { IsNull=false, TypeValue = value };}public static implicit operator string    (FontStyle                  value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcfontstyle.htm
[ifcSql(TypeGroupId:3,TypeId:420177,TableId:7,LayerId:33)] public partial class FontVariant               :TYPE<string>    {public FontVariant               (string     value):base(value){}   public FontVariant               (){} public static implicit operator FontVariant               (string     value){return new FontVariant               { IsNull=false, TypeValue = value };}public static implicit operator string    (FontVariant                value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcfontvariant.htm
[ifcSql(TypeGroupId:3,TypeId:420178,TableId:7,LayerId:33)] public partial class FontWeight                :TYPE<string>    {public FontWeight                (string     value):base(value){}   public FontWeight                (){} public static implicit operator FontWeight                (string     value){return new FontWeight                { IsNull=false, TypeValue = value };}public static implicit operator string    (FontWeight                 value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcfontweight.htm
[ifcSql(TypeGroupId:3,TypeId:420179,TableId:5,LayerId:32)] public partial class ForceMeasure              :TYPE<double>    {public ForceMeasure              (double     value):base(value){}   public ForceMeasure              (){} public static implicit operator ForceMeasure              (double     value){return new ForceMeasure              { IsNull=false, TypeValue = value };}public static implicit operator double    (ForceMeasure               value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcforcemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420180,TableId:5,LayerId:32)] public partial class FrequencyMeasure          :TYPE<double>    {public FrequencyMeasure          (double     value):base(value){}   public FrequencyMeasure          (){} public static implicit operator FrequencyMeasure          (double     value){return new FrequencyMeasure          { IsNull=false, TypeValue = value };}public static implicit operator double    (FrequencyMeasure           value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcfrequencymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420181,TableId:7,LayerId:42)] public partial class GloballyUniqueId          :TYPE<string>    {public GloballyUniqueId          (string     value):base(value){}   public GloballyUniqueId          (){} public static implicit operator GloballyUniqueId          (string     value){return new GloballyUniqueId          { IsNull=false, TypeValue = value };}public static implicit operator string    (GloballyUniqueId           value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcgloballyuniqueid.htm
[ifcSql(TypeGroupId:3,TypeId:420182,TableId:5,LayerId:32)] public partial class HeatFluxDensityMeasure    :TYPE<double>    {public HeatFluxDensityMeasure    (double     value):base(value){}   public HeatFluxDensityMeasure    (){} public static implicit operator HeatFluxDensityMeasure    (double     value){return new HeatFluxDensityMeasure    { IsNull=false, TypeValue = value };}public static implicit operator double    (HeatFluxDensityMeasure     value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcheatfluxdensitymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420183,TableId:5,LayerId:32)] public partial class HeatingValueMeasure       :TYPE<double>    {public HeatingValueMeasure       (double     value):base(value){}   public HeatingValueMeasure       (){} public static implicit operator HeatingValueMeasure       (double     value){return new HeatingValueMeasure       { IsNull=false, TypeValue = value };}public static implicit operator double    (HeatingValueMeasure        value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcheatingvaluemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420184,TableId:5,LayerId:32)] public partial class IlluminanceMeasure        :TYPE<double>    {public IlluminanceMeasure        (double     value):base(value){}   public IlluminanceMeasure        (){} public static implicit operator IlluminanceMeasure        (double     value){return new IlluminanceMeasure        { IsNull=false, TypeValue = value };}public static implicit operator double    (IlluminanceMeasure         value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcilluminancemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420185,TableId:5,LayerId:32)] public partial class InductanceMeasure         :TYPE<double>    {public InductanceMeasure         (double     value):base(value){}   public InductanceMeasure         (){} public static implicit operator InductanceMeasure         (double     value){return new InductanceMeasure         { IsNull=false, TypeValue = value };}public static implicit operator double    (InductanceMeasure          value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcinductancemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420186,TableId:6,LayerId:32)] public partial class IntegerCountRateMeasure   :TYPE<int>       {public IntegerCountRateMeasure   (int        value):base(value){}   public IntegerCountRateMeasure   (){} public static implicit operator IntegerCountRateMeasure   (int        value){return new IntegerCountRateMeasure   { IsNull=false, TypeValue = value };}public static implicit operator int       (IntegerCountRateMeasure    value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcintegercountratemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420187,TableId:5,LayerId:32)] public partial class IonConcentrationMeasure   :TYPE<double>    {public IonConcentrationMeasure   (double     value):base(value){}   public IonConcentrationMeasure   (){} public static implicit operator IonConcentrationMeasure   (double     value){return new IonConcentrationMeasure   { IsNull=false, TypeValue = value };}public static implicit operator double    (IonConcentrationMeasure    value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcionconcentrationmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420188,TableId:5,LayerId:32)] public partial class IsothermalMoistureCapacityMeasure:TYPE<double>    {public IsothermalMoistureCapacityMeasure(double     value):base(value){}   public IsothermalMoistureCapacityMeasure(){} public static implicit operator IsothermalMoistureCapacityMeasure(double     value){return new IsothermalMoistureCapacityMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (IsothermalMoistureCapacityMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcisothermalmoisturecapacitymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420189,TableId:5,LayerId:32)] public partial class KinematicViscosityMeasure :TYPE<double>    {public KinematicViscosityMeasure (double     value):base(value){}   public KinematicViscosityMeasure (){} public static implicit operator KinematicViscosityMeasure (double     value){return new KinematicViscosityMeasure { IsNull=false, TypeValue = value };}public static implicit operator double    (KinematicViscosityMeasure  value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifckinematicviscositymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420190,TableId:7,LayerId:27)] public partial class LanguageId                :TYPE<string>    {public LanguageId                (string     value):base(value){}   public LanguageId                (){} public static implicit operator LanguageId                (string     value){return new LanguageId                { IsNull=false, TypeValue = value };}public static implicit operator string    (LanguageId                 value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifclanguageid.htm
[ifcSql(TypeGroupId:3,TypeId:420191,TableId:8,LayerId:30)] public partial class LineIndex                 :TYPE<List2toUnbounded<PositiveInteger>>{public LineIndex                 (List2toUnbounded<PositiveInteger> value):base(value){}   public LineIndex                 (){} public static implicit operator LineIndex                 (List2toUnbounded<PositiveInteger> value){return new LineIndex                 { IsNull=false, TypeValue = value };}public static implicit operator List2toUnbounded<PositiveInteger>(LineIndex                  value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifclineindex.htm
[ifcSql(TypeGroupId:3,TypeId:420192,TableId:5,LayerId:32)] public partial class LinearForceMeasure        :TYPE<double>    {public LinearForceMeasure        (double     value):base(value){}   public LinearForceMeasure        (){} public static implicit operator LinearForceMeasure        (double     value){return new LinearForceMeasure        { IsNull=false, TypeValue = value };}public static implicit operator double    (LinearForceMeasure         value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifclinearforcemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420193,TableId:5,LayerId:32)] public partial class LinearMomentMeasure       :TYPE<double>    {public LinearMomentMeasure       (double     value):base(value){}   public LinearMomentMeasure       (){} public static implicit operator LinearMomentMeasure       (double     value){return new LinearMomentMeasure       { IsNull=false, TypeValue = value };}public static implicit operator double    (LinearMomentMeasure        value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifclinearmomentmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420194,TableId:5,LayerId:32)] public partial class LinearStiffnessMeasure    :TYPE<double>    {public LinearStiffnessMeasure    (double     value):base(value){}   public LinearStiffnessMeasure    (){} public static implicit operator LinearStiffnessMeasure    (double     value){return new LinearStiffnessMeasure    { IsNull=false, TypeValue = value };}public static implicit operator double    (LinearStiffnessMeasure     value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifclinearstiffnessmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420195,TableId:5,LayerId:32)] public partial class LinearVelocityMeasure     :TYPE<double>    {public LinearVelocityMeasure     (double     value):base(value){}   public LinearVelocityMeasure     (){} public static implicit operator LinearVelocityMeasure     (double     value){return new LinearVelocityMeasure     { IsNull=false, TypeValue = value };}public static implicit operator double    (LinearVelocityMeasure      value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifclinearvelocitymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420196,TableId:2,LayerId:32)] public partial class Logical                   :TYPE<bool>      {public Logical                   (bool       value):base(value){}   public Logical                   (){} public static implicit operator Logical                   (bool       value){return new Logical                   { IsNull=false, TypeValue = value };}public static implicit operator bool      (Logical                    value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifclogical.htm
[ifcSql(TypeGroupId:3,TypeId:420197,TableId:5,LayerId:32)] public partial class LuminousFluxMeasure       :TYPE<double>    {public LuminousFluxMeasure       (double     value):base(value){}   public LuminousFluxMeasure       (){} public static implicit operator LuminousFluxMeasure       (double     value){return new LuminousFluxMeasure       { IsNull=false, TypeValue = value };}public static implicit operator double    (LuminousFluxMeasure        value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcluminousfluxmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420198,TableId:5,LayerId:32)] public partial class LuminousIntensityDistributionMeasure:TYPE<double>    {public LuminousIntensityDistributionMeasure(double     value):base(value){}   public LuminousIntensityDistributionMeasure(){} public static implicit operator LuminousIntensityDistributionMeasure(double     value){return new LuminousIntensityDistributionMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (LuminousIntensityDistributionMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcluminousintensitydistributionmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420199,TableId:5,LayerId:32)] public partial class LuminousIntensityMeasure  :TYPE<double>    {public LuminousIntensityMeasure  (double     value):base(value){}   public LuminousIntensityMeasure  (){} public static implicit operator LuminousIntensityMeasure  (double     value){return new LuminousIntensityMeasure  { IsNull=false, TypeValue = value };}public static implicit operator double    (LuminousIntensityMeasure   value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcluminousintensitymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420200,TableId:5,LayerId:32)] public partial class MagneticFluxDensityMeasure:TYPE<double>    {public MagneticFluxDensityMeasure(double     value):base(value){}   public MagneticFluxDensityMeasure(){} public static implicit operator MagneticFluxDensityMeasure(double     value){return new MagneticFluxDensityMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (MagneticFluxDensityMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcmagneticfluxdensitymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420201,TableId:5,LayerId:32)] public partial class MagneticFluxMeasure       :TYPE<double>    {public MagneticFluxMeasure       (double     value):base(value){}   public MagneticFluxMeasure       (){} public static implicit operator MagneticFluxMeasure       (double     value){return new MagneticFluxMeasure       { IsNull=false, TypeValue = value };}public static implicit operator double    (MagneticFluxMeasure        value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcmagneticfluxmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420202,TableId:5,LayerId:32)] public partial class MassDensityMeasure        :TYPE<double>    {public MassDensityMeasure        (double     value):base(value){}   public MassDensityMeasure        (){} public static implicit operator MassDensityMeasure        (double     value){return new MassDensityMeasure        { IsNull=false, TypeValue = value };}public static implicit operator double    (MassDensityMeasure         value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcmassdensitymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420203,TableId:5,LayerId:32)] public partial class MassFlowRateMeasure       :TYPE<double>    {public MassFlowRateMeasure       (double     value):base(value){}   public MassFlowRateMeasure       (){} public static implicit operator MassFlowRateMeasure       (double     value){return new MassFlowRateMeasure       { IsNull=false, TypeValue = value };}public static implicit operator double    (MassFlowRateMeasure        value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcmassflowratemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420204,TableId:5,LayerId:32)] public partial class MassMeasure               :TYPE<double>    {public MassMeasure               (double     value):base(value){}   public MassMeasure               (){} public static implicit operator MassMeasure               (double     value){return new MassMeasure               { IsNull=false, TypeValue = value };}public static implicit operator double    (MassMeasure                value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcmassmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420205,TableId:5,LayerId:32)] public partial class MassPerLengthMeasure      :TYPE<double>    {public MassPerLengthMeasure      (double     value):base(value){}   public MassPerLengthMeasure      (){} public static implicit operator MassPerLengthMeasure      (double     value){return new MassPerLengthMeasure      { IsNull=false, TypeValue = value };}public static implicit operator double    (MassPerLengthMeasure       value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcmassperlengthmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420206,TableId:5,LayerId:32)] public partial class ModulusOfElasticityMeasure:TYPE<double>    {public ModulusOfElasticityMeasure(double     value):base(value){}   public ModulusOfElasticityMeasure(){} public static implicit operator ModulusOfElasticityMeasure(double     value){return new ModulusOfElasticityMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (ModulusOfElasticityMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcmodulusofelasticitymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420207,TableId:5,LayerId:32)] public partial class ModulusOfLinearSubgradeReactionMeasure:TYPE<double>    {public ModulusOfLinearSubgradeReactionMeasure(double     value):base(value){}   public ModulusOfLinearSubgradeReactionMeasure(){} public static implicit operator ModulusOfLinearSubgradeReactionMeasure(double     value){return new ModulusOfLinearSubgradeReactionMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (ModulusOfLinearSubgradeReactionMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcmodulusoflinearsubgradereactionmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420208,TableId:5,LayerId:32)] public partial class ModulusOfRotationalSubgradeReactionMeasure:TYPE<double>    {public ModulusOfRotationalSubgradeReactionMeasure(double     value):base(value){}   public ModulusOfRotationalSubgradeReactionMeasure(){} public static implicit operator ModulusOfRotationalSubgradeReactionMeasure(double     value){return new ModulusOfRotationalSubgradeReactionMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (ModulusOfRotationalSubgradeReactionMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcmodulusofrotationalsubgradereactionmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420209,TableId:5,LayerId:32)] public partial class ModulusOfSubgradeReactionMeasure:TYPE<double>    {public ModulusOfSubgradeReactionMeasure(double     value):base(value){}   public ModulusOfSubgradeReactionMeasure(){} public static implicit operator ModulusOfSubgradeReactionMeasure(double     value){return new ModulusOfSubgradeReactionMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (ModulusOfSubgradeReactionMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcmodulusofsubgradereactionmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420210,TableId:5,LayerId:32)] public partial class MoistureDiffusivityMeasure:TYPE<double>    {public MoistureDiffusivityMeasure(double     value):base(value){}   public MoistureDiffusivityMeasure(){} public static implicit operator MoistureDiffusivityMeasure(double     value){return new MoistureDiffusivityMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (MoistureDiffusivityMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcmoisturediffusivitymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420211,TableId:5,LayerId:32)] public partial class MolecularWeightMeasure    :TYPE<double>    {public MolecularWeightMeasure    (double     value):base(value){}   public MolecularWeightMeasure    (){} public static implicit operator MolecularWeightMeasure    (double     value){return new MolecularWeightMeasure    { IsNull=false, TypeValue = value };}public static implicit operator double    (MolecularWeightMeasure     value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcmolecularweightmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420212,TableId:5,LayerId:32)] public partial class MomentOfInertiaMeasure    :TYPE<double>    {public MomentOfInertiaMeasure    (double     value):base(value){}   public MomentOfInertiaMeasure    (){} public static implicit operator MomentOfInertiaMeasure    (double     value){return new MomentOfInertiaMeasure    { IsNull=false, TypeValue = value };}public static implicit operator double    (MomentOfInertiaMeasure     value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcmomentofinertiameasure.htm
[ifcSql(TypeGroupId:3,TypeId:420213,TableId:5,LayerId:32)] public partial class MonetaryMeasure           :TYPE<double>    {public MonetaryMeasure           (double     value):base(value){}   public MonetaryMeasure           (){} public static implicit operator MonetaryMeasure           (double     value){return new MonetaryMeasure           { IsNull=false, TypeValue = value };}public static implicit operator double    (MonetaryMeasure            value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcmonetarymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420214,TableId:6,LayerId:26)] public partial class MonthInYearNumber         :TYPE<int>       {public MonthInYearNumber         (int        value):base(value){}   public MonthInYearNumber         (){} public static implicit operator MonthInYearNumber         (int        value){return new MonthInYearNumber         { IsNull=false, TypeValue = value };}public static implicit operator int       (MonthInYearNumber          value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcmonthinyearnumber.htm
[ifcSql(TypeGroupId:3,TypeId:420215,TableId:5,LayerId:32)] public partial class NonNegativeLengthMeasure  :TYPE<double>    {public NonNegativeLengthMeasure  (double     value):base(value){}   public NonNegativeLengthMeasure  (){} public static implicit operator NonNegativeLengthMeasure  (double     value){return new NonNegativeLengthMeasure  { IsNull=false, TypeValue = value };}public static implicit operator double    (NonNegativeLengthMeasure   value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcnonnegativelengthmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420216,TableId:5,LayerId:32)] public partial class NormalisedRatioMeasure    :TYPE<double>    {public NormalisedRatioMeasure    (double     value):base(value){}   public NormalisedRatioMeasure    (){} public static implicit operator NormalisedRatioMeasure    (double     value){return new NormalisedRatioMeasure    { IsNull=false, TypeValue = value };}public static implicit operator double    (NormalisedRatioMeasure     value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcnormalisedratiomeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420217,TableId:5,LayerId:32)] public partial class NumericMeasure            :TYPE<double>    {public NumericMeasure            (double     value):base(value){}   public NumericMeasure            (){} public static implicit operator NumericMeasure            (double     value){return new NumericMeasure            { IsNull=false, TypeValue = value };}public static implicit operator double    (NumericMeasure             value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcnumericmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420218,TableId:5,LayerId:32)] public partial class PHMeasure                 :TYPE<double>    {public PHMeasure                 (double     value):base(value){}   public PHMeasure                 (){} public static implicit operator PHMeasure                 (double     value){return new PHMeasure                 { IsNull=false, TypeValue = value };}public static implicit operator double    (PHMeasure                  value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcphmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420219,TableId:5,LayerId:32)] public partial class ParameterValue            :TYPE<double>    {public ParameterValue            (double     value):base(value){}   public ParameterValue            (){} public static implicit operator ParameterValue            (double     value){return new ParameterValue            { IsNull=false, TypeValue = value };}public static implicit operator double    (ParameterValue             value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcparametervalue.htm
[ifcSql(TypeGroupId:3,TypeId:420220,TableId:5,LayerId:32)] public partial class PlanarForceMeasure        :TYPE<double>    {public PlanarForceMeasure        (double     value):base(value){}   public PlanarForceMeasure        (){} public static implicit operator PlanarForceMeasure        (double     value){return new PlanarForceMeasure        { IsNull=false, TypeValue = value };}public static implicit operator double    (PlanarForceMeasure         value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcplanarforcemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420221,TableId:6,LayerId:32)] public partial class PositiveInteger           :TYPE<int>       {public PositiveInteger           (int        value):base(value){}   public PositiveInteger           (){} public static implicit operator PositiveInteger           (int        value){return new PositiveInteger           { IsNull=false, TypeValue = value };}public static implicit operator int       (PositiveInteger            value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcpositiveinteger.htm
[ifcSql(TypeGroupId:3,TypeId:420222,TableId:5,LayerId:32)] public partial class PositiveLengthMeasure     :TYPE<double>    {public PositiveLengthMeasure     (double     value):base(value){}   public PositiveLengthMeasure     (){} public static implicit operator PositiveLengthMeasure     (double     value){return new PositiveLengthMeasure     { IsNull=false, TypeValue = value };}public static implicit operator double    (PositiveLengthMeasure      value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcpositivelengthmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420223,TableId:5,LayerId:32)] public partial class PositivePlaneAngleMeasure :TYPE<double>    {public PositivePlaneAngleMeasure (double     value):base(value){}   public PositivePlaneAngleMeasure (){} public static implicit operator PositivePlaneAngleMeasure (double     value){return new PositivePlaneAngleMeasure { IsNull=false, TypeValue = value };}public static implicit operator double    (PositivePlaneAngleMeasure  value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcpositiveplaneanglemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420224,TableId:5,LayerId:32)] public partial class PositiveRatioMeasure      :TYPE<double>    {public PositiveRatioMeasure      (double     value):base(value){}   public PositiveRatioMeasure      (){} public static implicit operator PositiveRatioMeasure      (double     value){return new PositiveRatioMeasure      { IsNull=false, TypeValue = value };}public static implicit operator double    (PositiveRatioMeasure       value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcpositiveratiomeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420225,TableId:5,LayerId:32)] public partial class PowerMeasure              :TYPE<double>    {public PowerMeasure              (double     value):base(value){}   public PowerMeasure              (){} public static implicit operator PowerMeasure              (double     value){return new PowerMeasure              { IsNull=false, TypeValue = value };}public static implicit operator double    (PowerMeasure               value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcpowermeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420226,TableId:7,LayerId:33)] public partial class PresentableText           :TYPE<string>    {public PresentableText           (string     value):base(value){}   public PresentableText           (){} public static implicit operator PresentableText           (string     value){return new PresentableText           { IsNull=false, TypeValue = value };}public static implicit operator string    (PresentableText            value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcpresentabletext.htm
[ifcSql(TypeGroupId:3,TypeId:420227,TableId:5,LayerId:32)] public partial class PressureMeasure           :TYPE<double>    {public PressureMeasure           (double     value):base(value){}   public PressureMeasure           (){} public static implicit operator PressureMeasure           (double     value){return new PressureMeasure           { IsNull=false, TypeValue = value };}public static implicit operator double    (PressureMeasure            value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcpressuremeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420228,TableId:8,LayerId: 2)] public partial class PropertySetDefinitionSet  :TYPE<Set1toUnbounded<PropertySetDefinition>>{public PropertySetDefinitionSet  (Set1toUnbounded<PropertySetDefinition> value):base(value){}   public PropertySetDefinitionSet  (){} public static implicit operator PropertySetDefinitionSet  (Set1toUnbounded<PropertySetDefinition> value){return new PropertySetDefinitionSet  { IsNull=false, TypeValue = value };}public static implicit operator Set1toUnbounded<PropertySetDefinition>(PropertySetDefinitionSet   value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcpropertysetdefinitionset.htm
[ifcSql(TypeGroupId:3,TypeId:420229,TableId:5,LayerId:32)] public partial class RadioActivityMeasure      :TYPE<double>    {public RadioActivityMeasure      (double     value):base(value){}   public RadioActivityMeasure      (){} public static implicit operator RadioActivityMeasure      (double     value){return new RadioActivityMeasure      { IsNull=false, TypeValue = value };}public static implicit operator double    (RadioActivityMeasure       value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcradioactivitymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420230,TableId:5,LayerId:32)] public partial class Real                      :TYPE<double>    {public Real                      (double     value):base(value){}   public Real                      (){} public static implicit operator Real                      (double     value){return new Real                      { IsNull=false, TypeValue = value };}public static implicit operator double    (Real                       value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcreal.htm
[ifcSql(TypeGroupId:3,TypeId:420231,TableId:5,LayerId:32)] public partial class RotationalFrequencyMeasure:TYPE<double>    {public RotationalFrequencyMeasure(double     value):base(value){}   public RotationalFrequencyMeasure(){} public static implicit operator RotationalFrequencyMeasure(double     value){return new RotationalFrequencyMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (RotationalFrequencyMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcrotationalfrequencymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420232,TableId:5,LayerId:32)] public partial class RotationalMassMeasure     :TYPE<double>    {public RotationalMassMeasure     (double     value):base(value){}   public RotationalMassMeasure     (){} public static implicit operator RotationalMassMeasure     (double     value){return new RotationalMassMeasure     { IsNull=false, TypeValue = value };}public static implicit operator double    (RotationalMassMeasure      value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcrotationalmassmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420233,TableId:5,LayerId:32)] public partial class RotationalStiffnessMeasure:TYPE<double>    {public RotationalStiffnessMeasure(double     value):base(value){}   public RotationalStiffnessMeasure(){} public static implicit operator RotationalStiffnessMeasure(double     value){return new RotationalStiffnessMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (RotationalStiffnessMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcrotationalstiffnessmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420234,TableId:5,LayerId:32)] public partial class SectionModulusMeasure     :TYPE<double>    {public SectionModulusMeasure     (double     value):base(value){}   public SectionModulusMeasure     (){} public static implicit operator SectionModulusMeasure     (double     value){return new SectionModulusMeasure     { IsNull=false, TypeValue = value };}public static implicit operator double    (SectionModulusMeasure      value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcsectionmodulusmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420235,TableId:5,LayerId:32)] public partial class SectionalAreaIntegralMeasure:TYPE<double>    {public SectionalAreaIntegralMeasure(double     value):base(value){}   public SectionalAreaIntegralMeasure(){} public static implicit operator SectionalAreaIntegralMeasure(double     value){return new SectionalAreaIntegralMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (SectionalAreaIntegralMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcsectionalareaintegralmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420236,TableId:5,LayerId:32)] public partial class ShearModulusMeasure       :TYPE<double>    {public ShearModulusMeasure       (double     value):base(value){}   public ShearModulusMeasure       (){} public static implicit operator ShearModulusMeasure       (double     value){return new ShearModulusMeasure       { IsNull=false, TypeValue = value };}public static implicit operator double    (ShearModulusMeasure        value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcshearmodulusmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420237,TableId:5,LayerId:32)] public partial class SolidAngleMeasure         :TYPE<double>    {public SolidAngleMeasure         (double     value):base(value){}   public SolidAngleMeasure         (){} public static implicit operator SolidAngleMeasure         (double     value){return new SolidAngleMeasure         { IsNull=false, TypeValue = value };}public static implicit operator double    (SolidAngleMeasure          value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcsolidanglemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420238,TableId:5,LayerId:32)] public partial class SoundPowerLevelMeasure    :TYPE<double>    {public SoundPowerLevelMeasure    (double     value):base(value){}   public SoundPowerLevelMeasure    (){} public static implicit operator SoundPowerLevelMeasure    (double     value){return new SoundPowerLevelMeasure    { IsNull=false, TypeValue = value };}public static implicit operator double    (SoundPowerLevelMeasure     value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcsoundpowerlevelmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420239,TableId:5,LayerId:32)] public partial class SoundPowerMeasure         :TYPE<double>    {public SoundPowerMeasure         (double     value):base(value){}   public SoundPowerMeasure         (){} public static implicit operator SoundPowerMeasure         (double     value){return new SoundPowerMeasure         { IsNull=false, TypeValue = value };}public static implicit operator double    (SoundPowerMeasure          value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcsoundpowermeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420240,TableId:5,LayerId:32)] public partial class SoundPressureLevelMeasure :TYPE<double>    {public SoundPressureLevelMeasure (double     value):base(value){}   public SoundPressureLevelMeasure (){} public static implicit operator SoundPressureLevelMeasure (double     value){return new SoundPressureLevelMeasure { IsNull=false, TypeValue = value };}public static implicit operator double    (SoundPressureLevelMeasure  value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcsoundpressurelevelmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420241,TableId:5,LayerId:32)] public partial class SoundPressureMeasure      :TYPE<double>    {public SoundPressureMeasure      (double     value):base(value){}   public SoundPressureMeasure      (){} public static implicit operator SoundPressureMeasure      (double     value){return new SoundPressureMeasure      { IsNull=false, TypeValue = value };}public static implicit operator double    (SoundPressureMeasure       value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcsoundpressuremeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420242,TableId:5,LayerId:32)] public partial class SpecificHeatCapacityMeasure:TYPE<double>    {public SpecificHeatCapacityMeasure(double     value):base(value){}   public SpecificHeatCapacityMeasure(){} public static implicit operator SpecificHeatCapacityMeasure(double     value){return new SpecificHeatCapacityMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (SpecificHeatCapacityMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcspecificheatcapacitymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420243,TableId:5,LayerId:33)] public partial class SpecularExponent          :TYPE<double>    {public SpecularExponent          (double     value):base(value){}   public SpecularExponent          (){} public static implicit operator SpecularExponent          (double     value){return new SpecularExponent          { IsNull=false, TypeValue = value };}public static implicit operator double    (SpecularExponent           value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcspecularexponent.htm
[ifcSql(TypeGroupId:3,TypeId:420244,TableId:5,LayerId:33)] public partial class SpecularRoughness         :TYPE<double>    {public SpecularRoughness         (double     value):base(value){}   public SpecularRoughness         (){} public static implicit operator SpecularRoughness         (double     value){return new SpecularRoughness         { IsNull=false, TypeValue = value };}public static implicit operator double    (SpecularRoughness          value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcspecularroughness.htm
[ifcSql(TypeGroupId:3,TypeId:420245,TableId:5,LayerId:32)] public partial class TemperatureGradientMeasure:TYPE<double>    {public TemperatureGradientMeasure(double     value):base(value){}   public TemperatureGradientMeasure(){} public static implicit operator TemperatureGradientMeasure(double     value){return new TemperatureGradientMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (TemperatureGradientMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifctemperaturegradientmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420246,TableId:5,LayerId:32)] public partial class TemperatureRateOfChangeMeasure:TYPE<double>    {public TemperatureRateOfChangeMeasure(double     value):base(value){}   public TemperatureRateOfChangeMeasure(){} public static implicit operator TemperatureRateOfChangeMeasure(double     value){return new TemperatureRateOfChangeMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (TemperatureRateOfChangeMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifctemperaturerateofchangemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420247,TableId:7,LayerId:32)] public partial class Text                      :TYPE<string>    {public Text                      (string     value):base(value){}   public Text                      (){} public static implicit operator Text                      (string     value){return new Text                      { IsNull=false, TypeValue = value };}public static implicit operator string    (Text                       value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifctext.htm
[ifcSql(TypeGroupId:3,TypeId:420248,TableId:7,LayerId:33)] public partial class TextAlignment             :TYPE<string>    {public TextAlignment             (string     value):base(value){}   public TextAlignment             (){} public static implicit operator TextAlignment             (string     value){return new TextAlignment             { IsNull=false, TypeValue = value };}public static implicit operator string    (TextAlignment              value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifctextalignment.htm
[ifcSql(TypeGroupId:3,TypeId:420249,TableId:7,LayerId:33)] public partial class TextDecoration            :TYPE<string>    {public TextDecoration            (string     value):base(value){}   public TextDecoration            (){} public static implicit operator TextDecoration            (string     value){return new TextDecoration            { IsNull=false, TypeValue = value };}public static implicit operator string    (TextDecoration             value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifctextdecoration.htm
[ifcSql(TypeGroupId:3,TypeId:420250,TableId:7,LayerId:33)] public partial class TextFontName              :TYPE<string>    {public TextFontName              (string     value):base(value){}   public TextFontName              (){} public static implicit operator TextFontName              (string     value){return new TextFontName              { IsNull=false, TypeValue = value };}public static implicit operator string    (TextFontName               value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifctextfontname.htm
[ifcSql(TypeGroupId:3,TypeId:420251,TableId:7,LayerId:33)] public partial class TextTransformation        :TYPE<string>    {public TextTransformation        (string     value):base(value){}   public TextTransformation        (){} public static implicit operator TextTransformation        (string     value){return new TextTransformation        { IsNull=false, TypeValue = value };}public static implicit operator string    (TextTransformation         value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifctexttransformation.htm
[ifcSql(TypeGroupId:3,TypeId:420252,TableId:5,LayerId:32)] public partial class ThermalAdmittanceMeasure  :TYPE<double>    {public ThermalAdmittanceMeasure  (double     value):base(value){}   public ThermalAdmittanceMeasure  (){} public static implicit operator ThermalAdmittanceMeasure  (double     value){return new ThermalAdmittanceMeasure  { IsNull=false, TypeValue = value };}public static implicit operator double    (ThermalAdmittanceMeasure   value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcthermaladmittancemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420253,TableId:5,LayerId:32)] public partial class ThermalConductivityMeasure:TYPE<double>    {public ThermalConductivityMeasure(double     value):base(value){}   public ThermalConductivityMeasure(){} public static implicit operator ThermalConductivityMeasure(double     value){return new ThermalConductivityMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (ThermalConductivityMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcthermalconductivitymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420254,TableId:5,LayerId:32)] public partial class ThermalExpansionCoefficientMeasure:TYPE<double>    {public ThermalExpansionCoefficientMeasure(double     value):base(value){}   public ThermalExpansionCoefficientMeasure(){} public static implicit operator ThermalExpansionCoefficientMeasure(double     value){return new ThermalExpansionCoefficientMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (ThermalExpansionCoefficientMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcthermalexpansioncoefficientmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420255,TableId:5,LayerId:32)] public partial class ThermalResistanceMeasure  :TYPE<double>    {public ThermalResistanceMeasure  (double     value):base(value){}   public ThermalResistanceMeasure  (){} public static implicit operator ThermalResistanceMeasure  (double     value){return new ThermalResistanceMeasure  { IsNull=false, TypeValue = value };}public static implicit operator double    (ThermalResistanceMeasure   value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcthermalresistancemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420256,TableId:5,LayerId:32)] public partial class ThermalTransmittanceMeasure:TYPE<double>    {public ThermalTransmittanceMeasure(double     value):base(value){}   public ThermalTransmittanceMeasure(){} public static implicit operator ThermalTransmittanceMeasure(double     value){return new ThermalTransmittanceMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (ThermalTransmittanceMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcthermaltransmittancemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420257,TableId:5,LayerId:32)] public partial class ThermodynamicTemperatureMeasure:TYPE<double>    {public ThermodynamicTemperatureMeasure(double     value):base(value){}   public ThermodynamicTemperatureMeasure(){} public static implicit operator ThermodynamicTemperatureMeasure(double     value){return new ThermodynamicTemperatureMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (ThermodynamicTemperatureMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcthermodynamictemperaturemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420258,TableId:7,LayerId:26)] public partial class Time                      :TYPE<string>    {public Time                      (string     value):base(value){}   public Time                      (){} public static implicit operator Time                      (string     value){return new Time                      { IsNull=false, TypeValue = value };}public static implicit operator string    (Time                       value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifctime.htm
[ifcSql(TypeGroupId:3,TypeId:420259,TableId:5,LayerId:32)] public partial class TimeMeasure               :TYPE<double>    {public TimeMeasure               (double     value):base(value){}   public TimeMeasure               (){} public static implicit operator TimeMeasure               (double     value){return new TimeMeasure               { IsNull=false, TypeValue = value };}public static implicit operator double    (TimeMeasure                value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifctimemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420260,TableId:6,LayerId:26)] public partial class TimeStamp                 :TYPE<int>       {public TimeStamp                 (int        value):base(value){}   public TimeStamp                 (){} public static implicit operator TimeStamp                 (int        value){return new TimeStamp                 { IsNull=false, TypeValue = value };}public static implicit operator int       (TimeStamp                  value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifctimestamp.htm
[ifcSql(TypeGroupId:3,TypeId:420261,TableId:5,LayerId:32)] public partial class TorqueMeasure             :TYPE<double>    {public TorqueMeasure             (double     value):base(value){}   public TorqueMeasure             (){} public static implicit operator TorqueMeasure             (double     value){return new TorqueMeasure             { IsNull=false, TypeValue = value };}public static implicit operator double    (TorqueMeasure              value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifctorquemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420262,TableId:7,LayerId:27)] public partial class URIReference              :TYPE<string>    {public URIReference              (string     value):base(value){}   public URIReference              (){} public static implicit operator URIReference              (string     value){return new URIReference              { IsNull=false, TypeValue = value };}public static implicit operator string    (URIReference               value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcurireference.htm
[ifcSql(TypeGroupId:3,TypeId:420263,TableId:5,LayerId:32)] public partial class VaporPermeabilityMeasure  :TYPE<double>    {public VaporPermeabilityMeasure  (double     value):base(value){}   public VaporPermeabilityMeasure  (){} public static implicit operator VaporPermeabilityMeasure  (double     value){return new VaporPermeabilityMeasure  { IsNull=false, TypeValue = value };}public static implicit operator double    (VaporPermeabilityMeasure   value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcvaporpermeabilitymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420264,TableId:5,LayerId:32)] public partial class VolumeMeasure             :TYPE<double>    {public VolumeMeasure             (double     value):base(value){}   public VolumeMeasure             (){} public static implicit operator VolumeMeasure             (double     value){return new VolumeMeasure             { IsNull=false, TypeValue = value };}public static implicit operator double    (VolumeMeasure              value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcvolumemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420265,TableId:5,LayerId:32)] public partial class VolumetricFlowRateMeasure :TYPE<double>    {public VolumetricFlowRateMeasure (double     value):base(value){}   public VolumetricFlowRateMeasure (){} public static implicit operator VolumetricFlowRateMeasure (double     value){return new VolumetricFlowRateMeasure { IsNull=false, TypeValue = value };}public static implicit operator double    (VolumetricFlowRateMeasure  value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcvolumetricflowratemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420266,TableId:5,LayerId:32)] public partial class WarpingConstantMeasure    :TYPE<double>    {public WarpingConstantMeasure    (double     value):base(value){}   public WarpingConstantMeasure    (){} public static implicit operator WarpingConstantMeasure    (double     value){return new WarpingConstantMeasure    { IsNull=false, TypeValue = value };}public static implicit operator double    (WarpingConstantMeasure     value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcwarpingconstantmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:420267,TableId:5,LayerId:32)] public partial class WarpingMomentMeasure      :TYPE<double>    {public WarpingMomentMeasure      (double     value):base(value){}   public WarpingMomentMeasure      (){} public static implicit operator WarpingMomentMeasure      (double     value){return new WarpingMomentMeasure      { IsNull=false, TypeValue = value };}public static implicit operator double    (WarpingMomentMeasure       value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/link/ifcwarpingmomentmeasure.htm


//LISTTYPE1DOF2D:
[ifcSql(TypeGroupId:7,TypeId:420134,TableId:0,LayerId:30)] public partial class ListElement_List2toUnbounded_CartesianPoint:List2toUnbounded<CartesianPoint>{public ListElement_List2toUnbounded_CartesianPoint(List2toUnbounded<CartesianPoint> value):base(value){} public ListElement_List2toUnbounded_CartesianPoint(){} public ListElement_List2toUnbounded_CartesianPoint(params CartesianPoint[] items):base(){foreach (CartesianPoint e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:7,TypeId:420135,TableId:0,LayerId:32)] public partial class ListElement_List2to2_LengthMeasure:List2to2<LengthMeasure>{public ListElement_List2to2_LengthMeasure(List2to2<LengthMeasure> value):base(value){} public ListElement_List2to2_LengthMeasure(){} public ListElement_List2to2_LengthMeasure(params LengthMeasure[] items):base(){foreach (LengthMeasure e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:7,TypeId:420136,TableId:0,LayerId:32)] public partial class ListElement_List3to3_LengthMeasure:List3to3<LengthMeasure>{public ListElement_List3to3_LengthMeasure(List3to3<LengthMeasure> value):base(value){} public ListElement_List3to3_LengthMeasure(){} public ListElement_List3to3_LengthMeasure(params LengthMeasure[] items):base(){foreach (LengthMeasure e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:7,TypeId:420137,TableId:0,LayerId:32)] public partial class ListElement_List3to3_NormalisedRatioMeasure:List3to3<NormalisedRatioMeasure>{public ListElement_List3to3_NormalisedRatioMeasure(List3to3<NormalisedRatioMeasure> value):base(value){} public ListElement_List3to3_NormalisedRatioMeasure(){} public ListElement_List3to3_NormalisedRatioMeasure(params NormalisedRatioMeasure[] items):base(){foreach (NormalisedRatioMeasure e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:7,TypeId:420138,TableId:0,LayerId:32)] public partial class ListElement_List3toUnbounded_PositiveInteger:List3toUnbounded<PositiveInteger>{public ListElement_List3toUnbounded_PositiveInteger(List3toUnbounded<PositiveInteger> value):base(value){} public ListElement_List3toUnbounded_PositiveInteger(){} public ListElement_List3toUnbounded_PositiveInteger(params PositiveInteger[] items):base(){foreach (PositiveInteger e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:7,TypeId:420139,TableId:0,LayerId:32)] public partial class ListElement_List3to3_PositiveInteger:List3to3<PositiveInteger>{public ListElement_List3to3_PositiveInteger(List3to3<PositiveInteger> value):base(value){} public ListElement_List3to3_PositiveInteger(){} public ListElement_List3to3_PositiveInteger(params PositiveInteger[] items):base(){foreach (PositiveInteger e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:7,TypeId:420140,TableId:0,LayerId:32)] public partial class ListElement_List2toUnbounded_Real:List2toUnbounded<Real>{public ListElement_List2toUnbounded_Real(List2toUnbounded<Real> value):base(value){} public ListElement_List2toUnbounded_Real(){} public ListElement_List2toUnbounded_Real(params Real[] items):base(){foreach (Real e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:7,TypeId:420141,TableId:0,LayerId:32)] public partial class ListElement_List1to2_LengthMeasure:List1to2<LengthMeasure>{public ListElement_List1to2_LengthMeasure(List1to2<LengthMeasure> value):base(value){} public ListElement_List1to2_LengthMeasure(){} public ListElement_List1to2_LengthMeasure(params LengthMeasure[] items):base(){foreach (LengthMeasure e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:7,TypeId:420142,TableId:0,LayerId:32)] public partial class ListElement_List2to2_ParameterValue:List2to2<ParameterValue>{public ListElement_List2to2_ParameterValue(List2to2<ParameterValue> value):base(value){} public ListElement_List2to2_ParameterValue(){} public ListElement_List2to2_ParameterValue(params ParameterValue[] items):base(){foreach (ParameterValue e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:7,TypeId:420143,TableId:0,LayerId:32)] public partial class ListElement_List3to3_ParameterValue:List3to3<ParameterValue>{public ListElement_List3to3_ParameterValue(List3to3<ParameterValue> value):base(value){} public ListElement_List3to3_ParameterValue(){} public ListElement_List3to3_ParameterValue(params ParameterValue[] items):base(){foreach (ParameterValue e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }

}// of ifc #############################################################################################################
