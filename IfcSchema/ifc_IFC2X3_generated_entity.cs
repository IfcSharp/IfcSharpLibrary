// ifc_IFC2X3_generated_entity.cs Copyright (c) 2020, Bernhard Simon Bock, Friedrich Eder, MIT License (see https://github.com/IfcSharp/IfcSharpLibrary/tree/master/Licence)
// ported from IFC-Model by buildingSMART International Ltd (see https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1\EXPRESS\IFC2X3_TC1.exp)

// CAUTION! THIS IS GENERATED CODE! DON'T MODIFY THIS FILE. THIS FILE WILL BE UPDATED WITH NEW VERSIONS.
using System;
using System.Collections.Generic;
namespace ifc{//########################################################################################################

public sealed class Specification{ public const string SchemaName="IFC2X3";}

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedmgmtelements/lexical/ifcactionrequest.htm
[ifcSql(TypeGroupId:5,TypeId: 470,TableId:3)] public partial class ActionRequest:Control{//===========================================================================
public               ActionRequest():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Identification">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>ActionRequestTypeEnum</para></param>
/// <param name="Status">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="LongDescription">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ActionRequest(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,Identifier Identification=null,ActionRequestTypeEnum? PredefinedType=null,Label Status=null,Text LongDescription=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.Identification=Identification;this.PredefinedType=PredefinedType;this.Status=Status;this.LongDescription=LongDescription;this.EndOfLineComment=EndOfLineComment;}
[ifc(7,optional=true)] public ActionRequestTypeEnum? PredefinedType; //ENUM
[ifc(8,optional=true)] public Label Status; //TYPE
[ifc(9,optional=true)] public Text LongDescription; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.Occupant(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifckernel/lexical/ifcactor.htm
[ifcSql(TypeGroupId:5,TypeId: 471,TableId:3)] public partial class Actor:Object{//====================================================================================
public               Actor():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="TheActor"><para>new ifc.ActorSelect(new Organization(...))...</para><para>new ifc.ActorSelect(new Person(...))...</para><para>new ifc.ActorSelect(new PersonAndOrganization(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Actor(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Label ObjectType,ActorSelect TheActor,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.TheActor=TheActor;this.EndOfLineComment=EndOfLineComment;}
public               Actor(ActorSelect TheActor,string EndOfLineComment=null):base(){AddNext();this.TheActor=TheActor;this.EndOfLineComment=EndOfLineComment;}
[ifc(6)] public ActorSelect TheActor; //SELECT
/// <summary>INVERSE: IsActingUpon of RelAssignsToActor for RelatingActor</summary>
[ifcInverse(For:"RelatingActor")] public LIST<RelAssignsToActor> IsActingUpon;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcactorresource/lexical/ifcactorrole.htm
[ifcSql(TypeGroupId:5,TypeId: 472,TableId:3)] public partial class ActorRole:ENTITY{//================================================================================
public               ActorRole():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Role"><para>RoleEnum</para></param>
/// <param name="UserDefinedRole">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ActorRole(RoleEnum Role,Label UserDefinedRole=null,Text Description=null,string EndOfLineComment=null):base(){AddNext();this.Role=Role;this.UserDefinedRole=UserDefinedRole;this.Description=Description;this.EndOfLineComment=EndOfLineComment;}
public               ActorRole(RoleEnum Role,string EndOfLineComment=null):base(){AddNext();this.Role=Role;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public RoleEnum Role; //ENUM
[ifc(2,optional=true)] public Label UserDefinedRole; //TYPE
[ifc(3,optional=true)] public Text Description; //TYPE
/// <summary>INVERSE: HasExternalReference of ExternalReferenceRelationship for RelatedResourceObjects</summary>
[ifcInverse(For:"RelatedResourceObjects")] public LIST<ExternalReferenceRelationship> HasExternalReference;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcbuildingcontrolsdomain/lexical/ifcactuatortype.htm
[ifcSql(TypeGroupId:5,TypeId: 474,TableId:3)] public partial class ActuatorType:DistributionControlElementType{//=====================================================
public               ActuatorType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>ActuatorTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ActuatorType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,ActuatorTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               ActuatorType(ActuatorTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public ActuatorTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.PostalAddress(...)</para><para>new ifc.TelecomAddress(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 475,TableId:3)] public partial class Address:ENTITY{//==================================================================================
public               Address():base(){}// abstract
[ifc(1,optional=true)] public AddressTypeEnum? Purpose; //ENUM
[ifc(2,optional=true)] public Text Description; //TYPE
[ifc(3,optional=true)] public Label UserDefinedPurpose; //TYPE
/// <summary>INVERSE: OfOrganization of Organization for Addresses</summary>
[ifcInverse(For:"Addresses")] public LIST<Organization> OfOrganization;
/// <summary>INVERSE: OfPerson of Person for Addresses</summary>
[ifcInverse(For:"Addresses")] public LIST<Person> OfPerson;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifcairterminalboxtype.htm
[ifcSql(TypeGroupId:5,TypeId: 481,TableId:3)] public partial class AirTerminalBoxType:FlowControllerType{//===========================================================
public               AirTerminalBoxType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>AirTerminalBoxTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               AirTerminalBoxType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,AirTerminalBoxTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               AirTerminalBoxType(AirTerminalBoxTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public AirTerminalBoxTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifcairterminaltype.htm
[ifcSql(TypeGroupId:5,TypeId: 482,TableId:3)] public partial class AirTerminalType:FlowTerminalType{//================================================================
public               AirTerminalType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>AirTerminalTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               AirTerminalType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,AirTerminalTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               AirTerminalType(AirTerminalTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public AirTerminalTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifcairtoairheatrecoverytype.htm
[ifcSql(TypeGroupId:5,TypeId: 484,TableId:3)] public partial class AirToAirHeatRecoveryType:EnergyConversionDeviceType{//=============================================
public               AirToAirHeatRecoveryType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>AirToAirHeatRecoveryTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               AirToAirHeatRecoveryType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,AirToAirHeatRecoveryTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               AirToAirHeatRecoveryType(AirToAirHeatRecoveryTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public AirToAirHeatRecoveryTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcbuildingcontrolsdomain/lexical/ifcalarmtype.htm
[ifcSql(TypeGroupId:5,TypeId: 486,TableId:3)] public partial class AlarmType:DistributionControlElementType{//========================================================
public               AlarmType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>AlarmTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               AlarmType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,AlarmTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               AlarmType(AlarmTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public AlarmTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcalignment.htm
[ifcSql(TypeGroupId:5,TypeId: 487,TableId:3)] public partial class Alignment:PositioningElement{//====================================================================
public               Alignment():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="PredefinedType">[optional]<para>AlignmentTypeEnum</para></param>
/// <param name="Horizontal">[optional]<para>new ifc.Alignment2DHorizontal(...)</para></param>
/// <param name="Vertical">[optional]<para>new ifc.Alignment2DVertical(...)</para></param>
/// <param name="LinearRefMethod">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Alignment(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,AlignmentTypeEnum? PredefinedType=null,Alignment2DHorizontal Horizontal=null,Alignment2DVertical Vertical=null,Label LinearRefMethod=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.PredefinedType=PredefinedType;this.Horizontal=Horizontal;this.Vertical=Vertical;this.LinearRefMethod=LinearRefMethod;this.EndOfLineComment=EndOfLineComment;}
[ifc(8,optional=true)] public AlignmentTypeEnum? PredefinedType; //ENUM
[ifc(9,optional=true)] public Alignment2DHorizontal Horizontal; //ENTITY
[ifc(10,optional=true)] public Alignment2DVertical Vertical; //ENTITY
[ifc(11,optional=true)] public Label LinearRefMethod; //TYPE
/// <summary>INVERSE: ContainedInStructure of RelContainedInSpatialStructure for RelatedElements</summary>
[ifcInverse(For:"RelatedElements")] public RelContainedInSpatialStructure ContainedInStructure;
public override void AssignInverseElements(){if (Horizontal!=null) {if (Horizontal.ToAlignment==null) Horizontal.ToAlignment=new LIST<Alignment>();Horizontal.ToAlignment.Add(this);}
                                             if (Vertical!=null) Vertical.ToAlignment=this;
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcalignment2dhorizontal.htm
[ifcSql(TypeGroupId:5,TypeId: 488,TableId:3)] public partial class Alignment2DHorizontal:ENTITY{//====================================================================
public               Alignment2DHorizontal():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="StartDistAlong">[optional]<para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="Segments"><para>List1toUnboundedUnique_Alignment2DHorizontalSegment</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Alignment2DHorizontal(LengthMeasure StartDistAlong,List1toUnboundedUnique_Alignment2DHorizontalSegment Segments,string EndOfLineComment=null):base(){AddNext();this.StartDistAlong=StartDistAlong;this.Segments=Segments;this.EndOfLineComment=EndOfLineComment;}
public               Alignment2DHorizontal(List1toUnboundedUnique_Alignment2DHorizontalSegment Segments):base(){AddNext();this.Segments=Segments;}
[ifc(1,optional=true)] public LengthMeasure StartDistAlong; //TYPE
[ifc(2)] public List1toUnboundedUnique_Alignment2DHorizontalSegment Segments; //ListType1d
/// <summary>INVERSE: ToAlignment of Alignment for Horizontal</summary>
[ifcInverse(For:"Horizontal")] public LIST<Alignment> ToAlignment;
public override void AssignInverseElements(){if (Segments!=null) foreach (Alignment2DHorizontalSegment __Alignment2DHorizontalSegment in Segments) if (__Alignment2DHorizontalSegment is Alignment2DHorizontalSegment) ((Alignment2DHorizontalSegment)__Alignment2DHorizontalSegment).ToHorizontal=this;
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcalignment2dhorizontalsegment.htm
[ifcSql(TypeGroupId:5,TypeId: 489,TableId:3)] public partial class Alignment2DHorizontalSegment:Alignment2DSegment{//=================================================
public               Alignment2DHorizontalSegment():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="TangentialContinuity">[optional]<para>cast to (ifc.Boolean)...</para></param>
/// <param name="StartTag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndTag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="CurveGeometry"></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Alignment2DHorizontalSegment(Boolean TangentialContinuity,Label StartTag,Label EndTag,CurveSegment2D CurveGeometry,string EndOfLineComment=null):base(){AddNext();this.TangentialContinuity=TangentialContinuity;this.StartTag=StartTag;this.EndTag=EndTag;this.CurveGeometry=CurveGeometry;this.EndOfLineComment=EndOfLineComment;}
public               Alignment2DHorizontalSegment(CurveSegment2D CurveGeometry,string EndOfLineComment=null):base(){AddNext();this.CurveGeometry=CurveGeometry;this.EndOfLineComment=EndOfLineComment;}
[ifc(4)] public CurveSegment2D CurveGeometry; //ENTITY
/// <summary>INVERSE: ToHorizontal of Alignment2DHorizontal for Segments</summary>
[ifcInverse(For:"Segments")] public Alignment2DHorizontal ToHorizontal;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.Alignment2DHorizontalSegment(...)</para><para>new ifc.Alignment2DVerticalSegment(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 490,TableId:3)] public partial class Alignment2DSegment:ENTITY{//=======================================================================
public               Alignment2DSegment():base(){}// abstract
[ifc(1,optional=true)] public Boolean TangentialContinuity; //TYPE
[ifc(2,optional=true)] public Label StartTag; //TYPE
[ifc(3,optional=true)] public Label EndTag; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcalignment2dversegline.htm
[ifcSql(TypeGroupId:5,TypeId: 492,TableId:3)] public partial class Alignment2DVerSegLine:Alignment2DVerticalSegment{//================================================
public               Alignment2DVerSegLine():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="TangentialContinuity">[optional]<para>cast to (ifc.Boolean)...</para></param>
/// <param name="StartTag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndTag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="StartDistAlong"><para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="HorizontalLength"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="StartHeight"><para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="StartGradient"><para>cast to (ifc.RatioMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Alignment2DVerSegLine(Boolean TangentialContinuity,Label StartTag,Label EndTag,LengthMeasure StartDistAlong,PositiveLengthMeasure HorizontalLength,LengthMeasure StartHeight,RatioMeasure StartGradient,string EndOfLineComment=null):base(){AddNext();this.TangentialContinuity=TangentialContinuity;this.StartTag=StartTag;this.EndTag=EndTag;this.StartDistAlong=StartDistAlong;this.HorizontalLength=HorizontalLength;this.StartHeight=StartHeight;this.StartGradient=StartGradient;this.EndOfLineComment=EndOfLineComment;}
public               Alignment2DVerSegLine(LengthMeasure StartDistAlong,PositiveLengthMeasure HorizontalLength,LengthMeasure StartHeight,RatioMeasure StartGradient,string EndOfLineComment=null):base(){AddNext();this.StartDistAlong=StartDistAlong;this.HorizontalLength=HorizontalLength;this.StartHeight=StartHeight;this.StartGradient=StartGradient;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcalignment2dvertical.htm
[ifcSql(TypeGroupId:5,TypeId: 494,TableId:3)] public partial class Alignment2DVertical:ENTITY{//======================================================================
public               Alignment2DVertical():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Segments"><para>List1toUnboundedUnique_Alignment2DVerticalSegment</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Alignment2DVertical(List1toUnboundedUnique_Alignment2DVerticalSegment Segments,string EndOfLineComment=null):base(){AddNext();this.Segments=Segments;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public List1toUnboundedUnique_Alignment2DVerticalSegment Segments; //ListType1d
/// <summary>INVERSE: ToAlignment of Alignment for Vertical</summary>
[ifcInverse(For:"Vertical")] public Alignment ToAlignment;
public override void AssignInverseElements(){if (Segments!=null) foreach (Alignment2DVerticalSegment __Alignment2DVerticalSegment in Segments) if (__Alignment2DVerticalSegment is Alignment2DVerticalSegment) ((Alignment2DVerticalSegment)__Alignment2DVerticalSegment).ToVertical=this;
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.Alignment2DVerSegLine(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 495,TableId:3)] public partial class Alignment2DVerticalSegment:Alignment2DSegment{//===================================================
public               Alignment2DVerticalSegment():base(){}// abstract
[ifc(4)] public LengthMeasure StartDistAlong; //TYPE
[ifc(5)] public PositiveLengthMeasure HorizontalLength; //TYPE
[ifc(6)] public LengthMeasure StartHeight; //TYPE
[ifc(7)] public RatioMeasure StartGradient; //TYPE
/// <summary>INVERSE: ToVertical of Alignment2DVertical for Segments</summary>
[ifcInverse(For:"Segments")] public Alignment2DVertical ToVertical;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifcannotation.htm
[ifcSql(TypeGroupId:5,TypeId: 496,TableId:3)] public partial class Annotation:Product{//==============================================================================
public               Annotation():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Annotation(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.EndOfLineComment=EndOfLineComment;}
/// <summary>INVERSE: ContainedInStructure of RelContainedInSpatialStructure for RelatedElements</summary>
[ifcInverse(For:"RelatedElements")] public RelContainedInSpatialStructure ContainedInStructure;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationdefinitionresource/lexical/ifcannotationfillarea.htm
[ifcSql(TypeGroupId:5,TypeId: 497,TableId:3)] public partial class AnnotationFillArea:GeometricRepresentationItem{//==================================================
public               AnnotationFillArea():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="OuterBoundary"><para>new ifc.BezierCurve(...)</para><para>new ifc.CompositeCurve(...)</para><para>new ifc.CompositeCurveOnSurface(...)</para><para>new ifc.BoundaryCurve(...)</para><para>new ifc.2DCompositeCurve(...)</para><para>new ifc.Polyline(...)</para><para>new ifc.TrimmedCurve(...)</para><para>new ifc.Circle(...)</para><para>new ifc.Ellipse(...)</para><para>new ifc.Line(...)</para><para>new ifc.OffsetCurve2D(...)</para><para>new ifc.OffsetCurve3D(...)</para></param>
/// <param name="InnerBoundaries">[optional]<para>Set1toUnbounded_Curve</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               AnnotationFillArea(Curve OuterBoundary,Set1toUnbounded_Curve InnerBoundaries=null,string EndOfLineComment=null):base(){AddNext();this.OuterBoundary=OuterBoundary;this.InnerBoundaries=InnerBoundaries;this.EndOfLineComment=EndOfLineComment;}
public               AnnotationFillArea(Curve OuterBoundary):base(){AddNext();this.OuterBoundary=OuterBoundary;}
[ifc(1)] public Curve OuterBoundary; //ENTITY
[ifc(2,optional=true)] public Set1toUnbounded_Curve InnerBoundaries; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcutilityresource/lexical/ifcapplication.htm
[ifcSql(TypeGroupId:5,TypeId: 498,TableId:3)] public partial class Application:ENTITY{//==============================================================================
public               Application():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ApplicationDeveloper"><para>new ifc.Organization(...)</para></param>
/// <param name="Version"><para>cast to (ifc.Label)...</para></param>
/// <param name="ApplicationFullName"><para>cast to (ifc.Label)...</para></param>
/// <param name="ApplicationIdentifier"><para>cast to (ifc.Identifier)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Application(Organization ApplicationDeveloper,Label Version,Label ApplicationFullName,Identifier ApplicationIdentifier,string EndOfLineComment=null):base(){AddNext();this.ApplicationDeveloper=ApplicationDeveloper;this.Version=Version;this.ApplicationFullName=ApplicationFullName;this.ApplicationIdentifier=ApplicationIdentifier;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Organization ApplicationDeveloper; //ENTITY
[ifc(2)] public Label Version; //TYPE
[ifc(3)] public Label ApplicationFullName; //TYPE
[ifc(4)] public Identifier ApplicationIdentifier; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.CostValue(...)</para><para>new ifc.EnvironmentalImpactValue(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifccostresource/lexical/ifcappliedvalue.htm
[ifcSql(TypeGroupId:5,TypeId: 499,TableId:3)] public partial class AppliedValue:ENTITY{//=============================================================================
public               AppliedValue():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="_AppliedValue">[optional]<para>new ifc.AppliedValueSelect(new AbsorbedDoseMeasure(...))...</para><para>new ifc.AppliedValueSelect(new AccelerationMeasure(...))...</para><para>new ifc.AppliedValueSelect(new AmountOfSubstanceMeasure(...))...</para><para>new ifc.AppliedValueSelect(new AngularVelocityMeasure(...))...</para><para>new ifc.AppliedValueSelect(new AreaDensityMeasure(...))...</para><para>new ifc.AppliedValueSelect(new AreaMeasure(...))...</para><para>new ifc.AppliedValueSelect(new Boolean(...))...</para><para>new ifc.AppliedValueSelect(new ComplexNumber(...))...</para><para>new ifc.AppliedValueSelect(new CompoundPlaneAngleMeasure(...))...</para><para>new ifc.AppliedValueSelect(new ContextDependentMeasure(...))...</para><para>new ifc.AppliedValueSelect(new CountMeasure(...))...</para><para>new ifc.AppliedValueSelect(new CurvatureMeasure(...))...</para><para>new ifc.AppliedValueSelect(new Date(...))...</para><para>new ifc.AppliedValueSelect(new DateTime(...))...</para><para>new ifc.AppliedValueSelect(new DescriptiveMeasure(...))...</para><para>new ifc.AppliedValueSelect(new DoseEquivalentMeasure(...))...</para><para>new ifc.AppliedValueSelect(new Duration(...))...</para><para>new ifc.AppliedValueSelect(new DynamicViscosityMeasure(...))...</para><para>new ifc.AppliedValueSelect(new ElectricCapacitanceMeasure(...))...</para><para>... (and more [truncated]) ...</para></param>
/// <param name="UnitBasis">[optional]<para>new ifc.MeasureWithUnit(...)</para></param>
/// <param name="ApplicableDate">[optional]<para>cast to (ifc.Date)...</para></param>
/// <param name="FixedUntilDate">[optional]<para>cast to (ifc.Date)...</para></param>
/// <param name="Category">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_Condition">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="ArithmeticOperator">[optional]<para>ArithmeticOperatorEnum</para></param>
/// <param name="Components">[optional]<para>List1toUnbounded_AppliedValue</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               AppliedValue(Label Name=null,Text Description=null,AppliedValueSelect _AppliedValue=null,MeasureWithUnit UnitBasis=null,Date ApplicableDate=null,Date FixedUntilDate=null,Label Category=null,Label _Condition=null,ArithmeticOperatorEnum? ArithmeticOperator=null,List1toUnbounded_AppliedValue Components=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this._AppliedValue=_AppliedValue;this.UnitBasis=UnitBasis;this.ApplicableDate=ApplicableDate;this.FixedUntilDate=FixedUntilDate;this.Category=Category;this._Condition=_Condition;this.ArithmeticOperator=ArithmeticOperator;this.Components=Components;this.EndOfLineComment=EndOfLineComment;}
[ifc(1,optional=true)] public Label Name; //TYPE
[ifc(2,optional=true)] public Text Description; //TYPE
[ifc(3,optional=true)] public AppliedValueSelect _AppliedValue; //SELECT
[ifc(4,optional=true)] public MeasureWithUnit UnitBasis; //ENTITY
[ifc(5,optional=true)] public Date ApplicableDate; //TYPE
[ifc(6,optional=true)] public Date FixedUntilDate; //TYPE
[ifc(7,optional=true)] public Label Category; //TYPE
[ifc(8,optional=true)] public Label _Condition; //TYPE
[ifc(9,optional=true)] public ArithmeticOperatorEnum? ArithmeticOperator; //ENUM
[ifc(10,optional=true)] public List1toUnbounded_AppliedValue Components; //ListType1d
/// <summary>INVERSE: HasExternalReference of ExternalReferenceRelationship for RelatedResourceObjects</summary>
[ifcInverse(For:"RelatedResourceObjects")] public LIST<ExternalReferenceRelationship> HasExternalReference;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcapprovalresource/lexical/ifcapproval.htm
[ifcSql(TypeGroupId:5,TypeId: 500,TableId:3)] public partial class Approval:ENTITY{//=================================================================================
public               Approval():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Identifier">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="TimeOfApproval">[optional]<para>cast to (ifc.DateTime)...</para></param>
/// <param name="Status">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Level">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Qualifier">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RequestingApproval">[optional]<para>new ifc.ActorSelect(new Organization(...))...</para><para>new ifc.ActorSelect(new Person(...))...</para><para>new ifc.ActorSelect(new PersonAndOrganization(...))...</para></param>
/// <param name="GivingApproval">[optional]<para>new ifc.ActorSelect(new Organization(...))...</para><para>new ifc.ActorSelect(new Person(...))...</para><para>new ifc.ActorSelect(new PersonAndOrganization(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Approval(Identifier Identifier=null,Label Name=null,Text Description=null,DateTime TimeOfApproval=null,Label Status=null,Label Level=null,Text Qualifier=null,ActorSelect RequestingApproval=null,ActorSelect GivingApproval=null,string EndOfLineComment=null):base(){AddNext();this.Identifier=Identifier;this.Name=Name;this.Description=Description;this.TimeOfApproval=TimeOfApproval;this.Status=Status;this.Level=Level;this.Qualifier=Qualifier;this.RequestingApproval=RequestingApproval;this.GivingApproval=GivingApproval;this.EndOfLineComment=EndOfLineComment;}
[ifc(1,optional=true)] public Identifier Identifier; //TYPE
[ifc(2,optional=true)] public Label Name; //TYPE
[ifc(3,optional=true)] public Text Description; //TYPE
[ifc(4,optional=true)] public DateTime TimeOfApproval; //TYPE
[ifc(5,optional=true)] public Label Status; //TYPE
[ifc(6,optional=true)] public Label Level; //TYPE
[ifc(7,optional=true)] public Text Qualifier; //TYPE
[ifc(8,optional=true)] public ActorSelect RequestingApproval; //SELECT
[ifc(9,optional=true)] public ActorSelect GivingApproval; //SELECT
/// <summary>INVERSE: Relates of ApprovalRelationship for RelatingApproval</summary>
[ifcInverse(For:"RelatingApproval")] public LIST<ApprovalRelationship> Relates;
/// <summary>INVERSE: IsRelatedWith of ApprovalRelationship for RelatedApprovals</summary>
[ifcInverse(For:"RelatedApprovals")] public LIST<ApprovalRelationship> IsRelatedWith;
/// <summary>INVERSE: HasExternalReferences of ExternalReferenceRelationship for RelatedResourceObjects</summary>
[ifcInverse(For:"RelatedResourceObjects")] public LIST<ExternalReferenceRelationship> HasExternalReferences;
/// <summary>INVERSE: ApprovedObjects of RelAssociatesApproval for RelatingApproval</summary>
[ifcInverse(For:"RelatingApproval")] public LIST<RelAssociatesApproval> ApprovedObjects;
/// <summary>INVERSE: ApprovedResources of ResourceApprovalRelationship for RelatingApproval</summary>
[ifcInverse(For:"RelatingApproval")] public LIST<ResourceApprovalRelationship> ApprovedResources;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcapprovalresource/lexical/ifcapprovalrelationship.htm
[ifcSql(TypeGroupId:5,TypeId: 501,TableId:3)] public partial class ApprovalRelationship:ResourceLevelRelationship{//==================================================
public               ApprovalRelationship():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatingApproval"><para>new ifc.Approval(...)</para></param>
/// <param name="RelatedApprovals"><para>Set1toUnbounded_Approval</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ApprovalRelationship(Label Name,Text Description,Approval RelatingApproval,Set1toUnbounded_Approval RelatedApprovals,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.RelatingApproval=RelatingApproval;this.RelatedApprovals=RelatedApprovals;this.EndOfLineComment=EndOfLineComment;}
public               ApprovalRelationship(Approval RelatingApproval,Set1toUnbounded_Approval RelatedApprovals,string EndOfLineComment=null):base(){AddNext();this.RelatingApproval=RelatingApproval;this.RelatedApprovals=RelatedApprovals;this.EndOfLineComment=EndOfLineComment;}
[ifc(3)] public Approval RelatingApproval; //ENTITY
[ifc(4)] public Set1toUnbounded_Approval RelatedApprovals; //ListType1d
public override void AssignInverseElements(){if (RelatingApproval!=null) {if (RelatingApproval.Relates==null) RelatingApproval.Relates=new LIST<ApprovalRelationship>();RelatingApproval.Relates.Add(this);}
                                             if (RelatedApprovals!=null) foreach (Approval __Approval in RelatedApprovals) if (__Approval is Approval) {if (((Approval)__Approval).IsRelatedWith==null) ((Approval)__Approval).IsRelatedWith=new LIST<ApprovalRelationship>();((Approval)__Approval).IsRelatedWith.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ArbitraryProfileDefWithVoids(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcprofileresource/lexical/ifcarbitraryclosedprofiledef.htm
[ifcSql(TypeGroupId:5,TypeId: 502,TableId:3)] public partial class ArbitraryClosedProfileDef:ProfileDef{//============================================================
public               ArbitraryClosedProfileDef():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ProfileType"><para>ProfileTypeEnum</para></param>
/// <param name="ProfileName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="OuterCurve"><para>new ifc.BezierCurve(...)</para><para>new ifc.CompositeCurve(...)</para><para>new ifc.CompositeCurveOnSurface(...)</para><para>new ifc.BoundaryCurve(...)</para><para>new ifc.2DCompositeCurve(...)</para><para>new ifc.Polyline(...)</para><para>new ifc.TrimmedCurve(...)</para><para>new ifc.Circle(...)</para><para>new ifc.Ellipse(...)</para><para>new ifc.Line(...)</para><para>new ifc.OffsetCurve2D(...)</para><para>new ifc.OffsetCurve3D(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ArbitraryClosedProfileDef(ProfileTypeEnum ProfileType,Label ProfileName,Curve OuterCurve,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.ProfileName=ProfileName;this.OuterCurve=OuterCurve;this.EndOfLineComment=EndOfLineComment;}
public               ArbitraryClosedProfileDef(ProfileTypeEnum ProfileType,Curve OuterCurve):base(){AddNext();this.ProfileType=ProfileType;this.OuterCurve=OuterCurve;}
[ifc(3)] public Curve OuterCurve; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.CenterLineProfileDef(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcprofileresource/lexical/ifcarbitraryopenprofiledef.htm
[ifcSql(TypeGroupId:5,TypeId: 503,TableId:3)] public partial class ArbitraryOpenProfileDef:ProfileDef{//==============================================================
public               ArbitraryOpenProfileDef():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ProfileType"><para>ProfileTypeEnum</para></param>
/// <param name="ProfileName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_Curve"><para>new ifc.BezierCurve(...)</para><para>new ifc.CompositeCurve(...)</para><para>new ifc.Polyline(...)</para><para>new ifc.TrimmedCurve(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ArbitraryOpenProfileDef(ProfileTypeEnum ProfileType,Label ProfileName,BoundedCurve _Curve,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.ProfileName=ProfileName;this._Curve=_Curve;this.EndOfLineComment=EndOfLineComment;}
public               ArbitraryOpenProfileDef(ProfileTypeEnum ProfileType,BoundedCurve _Curve):base(){AddNext();this.ProfileType=ProfileType;this._Curve=_Curve;}
[ifc(3)] public BoundedCurve _Curve; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcprofileresource/lexical/ifcarbitraryprofiledefwithvoids.htm
[ifcSql(TypeGroupId:5,TypeId: 504,TableId:3)] public partial class ArbitraryProfileDefWithVoids:ArbitraryClosedProfileDef{//==========================================
public               ArbitraryProfileDefWithVoids():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ProfileType"><para>ProfileTypeEnum</para></param>
/// <param name="ProfileName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="OuterCurve"><para>new ifc.BezierCurve(...)</para><para>new ifc.CompositeCurve(...)</para><para>new ifc.CompositeCurveOnSurface(...)</para><para>new ifc.BoundaryCurve(...)</para><para>new ifc.2DCompositeCurve(...)</para><para>new ifc.Polyline(...)</para><para>new ifc.TrimmedCurve(...)</para><para>new ifc.Circle(...)</para><para>new ifc.Ellipse(...)</para><para>new ifc.Line(...)</para><para>new ifc.OffsetCurve2D(...)</para><para>new ifc.OffsetCurve3D(...)</para></param>
/// <param name="InnerCurves"><para>Set1toUnbounded_Curve</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ArbitraryProfileDefWithVoids(ProfileTypeEnum ProfileType,Label ProfileName,Curve OuterCurve,Set1toUnbounded_Curve InnerCurves,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.ProfileName=ProfileName;this.OuterCurve=OuterCurve;this.InnerCurves=InnerCurves;this.EndOfLineComment=EndOfLineComment;}
public               ArbitraryProfileDefWithVoids(ProfileTypeEnum ProfileType,Curve OuterCurve,Set1toUnbounded_Curve InnerCurves):base(){AddNext();this.ProfileType=ProfileType;this.OuterCurve=OuterCurve;this.InnerCurves=InnerCurves;}
[ifc(4)] public Set1toUnbounded_Curve InnerCurves; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedfacilitieselements/lexical/ifcasset.htm
[ifcSql(TypeGroupId:5,TypeId: 505,TableId:3)] public partial class Asset:Group{//=====================================================================================
public               Asset():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Identification">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="OriginalValue">[optional]<para>new ifc.CostValue(...)</para></param>
/// <param name="CurrentValue">[optional]<para>new ifc.CostValue(...)</para></param>
/// <param name="TotalReplacementCost">[optional]<para>new ifc.CostValue(...)</para></param>
/// <param name="Owner">[optional]<para>new ifc.ActorSelect(new Organization(...))...</para><para>new ifc.ActorSelect(new Person(...))...</para><para>new ifc.ActorSelect(new PersonAndOrganization(...))...</para></param>
/// <param name="User">[optional]<para>new ifc.ActorSelect(new Organization(...))...</para><para>new ifc.ActorSelect(new Person(...))...</para><para>new ifc.ActorSelect(new PersonAndOrganization(...))...</para></param>
/// <param name="ResponsiblePerson">[optional]<para>new ifc.Person(...)</para></param>
/// <param name="IncorporationDate">[optional]<para>cast to (ifc.Date)...</para></param>
/// <param name="DepreciatedValue">[optional]<para>new ifc.CostValue(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Asset(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,Identifier Identification=null,CostValue OriginalValue=null,CostValue CurrentValue=null,CostValue TotalReplacementCost=null,ActorSelect Owner=null,ActorSelect User=null,Person ResponsiblePerson=null,Date IncorporationDate=null,CostValue DepreciatedValue=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.Identification=Identification;this.OriginalValue=OriginalValue;this.CurrentValue=CurrentValue;this.TotalReplacementCost=TotalReplacementCost;this.Owner=Owner;this.User=User;this.ResponsiblePerson=ResponsiblePerson;this.IncorporationDate=IncorporationDate;this.DepreciatedValue=DepreciatedValue;this.EndOfLineComment=EndOfLineComment;}
[ifc(6,optional=true)] public Identifier Identification; //TYPE
[ifc(7,optional=true)] public CostValue OriginalValue; //ENTITY
[ifc(8,optional=true)] public CostValue CurrentValue; //ENTITY
[ifc(9,optional=true)] public CostValue TotalReplacementCost; //ENTITY
[ifc(10,optional=true)] public ActorSelect Owner; //SELECT
[ifc(11,optional=true)] public ActorSelect User; //SELECT
[ifc(12,optional=true)] public Person ResponsiblePerson; //ENTITY
[ifc(13,optional=true)] public Date IncorporationDate; //TYPE
[ifc(14,optional=true)] public CostValue DepreciatedValue; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcprofileresource/lexical/ifcasymmetricishapeprofiledef.htm
[ifcSql(TypeGroupId:5,TypeId: 506,TableId:3)] public partial class AsymmetricIShapeProfileDef:ParameterizedProfileDef{//==============================================
public               AsymmetricIShapeProfileDef():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ProfileType"><para>ProfileTypeEnum</para></param>
/// <param name="ProfileName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Position">[optional]<para>new ifc.Axis2Placement2D(...)</para></param>
/// <param name="BottomFlangeWidth"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="OverallDepth"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="WebThickness"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="BottomFlangeThickness"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="BottomFlangeFilletRadius">[optional]<para>cast to (ifc.NonNegativeLengthMeasure)...</para></param>
/// <param name="TopFlangeWidth"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="TopFlangeThickness">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="TopFlangeFilletRadius">[optional]<para>cast to (ifc.NonNegativeLengthMeasure)...</para></param>
/// <param name="BottomFlangeEdgeRadius">[optional]<para>cast to (ifc.NonNegativeLengthMeasure)...</para></param>
/// <param name="BottomFlangeSlope">[optional]<para>cast to (ifc.PlaneAngleMeasure)...</para></param>
/// <param name="TopFlangeEdgeRadius">[optional]<para>cast to (ifc.NonNegativeLengthMeasure)...</para></param>
/// <param name="TopFlangeSlope">[optional]<para>cast to (ifc.PlaneAngleMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               AsymmetricIShapeProfileDef(ProfileTypeEnum ProfileType,Label ProfileName,Axis2Placement2D Position,PositiveLengthMeasure BottomFlangeWidth,PositiveLengthMeasure OverallDepth,PositiveLengthMeasure WebThickness,PositiveLengthMeasure BottomFlangeThickness,NonNegativeLengthMeasure BottomFlangeFilletRadius,PositiveLengthMeasure TopFlangeWidth,PositiveLengthMeasure TopFlangeThickness=null,NonNegativeLengthMeasure TopFlangeFilletRadius=null,NonNegativeLengthMeasure BottomFlangeEdgeRadius=null,PlaneAngleMeasure BottomFlangeSlope=null,NonNegativeLengthMeasure TopFlangeEdgeRadius=null,PlaneAngleMeasure TopFlangeSlope=null,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.ProfileName=ProfileName;this.Position=Position;this.BottomFlangeWidth=BottomFlangeWidth;this.OverallDepth=OverallDepth;this.WebThickness=WebThickness;this.BottomFlangeThickness=BottomFlangeThickness;this.BottomFlangeFilletRadius=BottomFlangeFilletRadius;this.TopFlangeWidth=TopFlangeWidth;this.TopFlangeThickness=TopFlangeThickness;this.TopFlangeFilletRadius=TopFlangeFilletRadius;this.BottomFlangeEdgeRadius=BottomFlangeEdgeRadius;this.BottomFlangeSlope=BottomFlangeSlope;this.TopFlangeEdgeRadius=TopFlangeEdgeRadius;this.TopFlangeSlope=TopFlangeSlope;this.EndOfLineComment=EndOfLineComment;}
public               AsymmetricIShapeProfileDef(ProfileTypeEnum ProfileType,PositiveLengthMeasure BottomFlangeWidth,PositiveLengthMeasure OverallDepth,PositiveLengthMeasure WebThickness,PositiveLengthMeasure BottomFlangeThickness,PositiveLengthMeasure TopFlangeWidth,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.BottomFlangeWidth=BottomFlangeWidth;this.OverallDepth=OverallDepth;this.WebThickness=WebThickness;this.BottomFlangeThickness=BottomFlangeThickness;this.TopFlangeWidth=TopFlangeWidth;this.EndOfLineComment=EndOfLineComment;}
[ifc(4)] public PositiveLengthMeasure BottomFlangeWidth; //TYPE
[ifc(5)] public PositiveLengthMeasure OverallDepth; //TYPE
[ifc(6)] public PositiveLengthMeasure WebThickness; //TYPE
[ifc(7)] public PositiveLengthMeasure BottomFlangeThickness; //TYPE
[ifc(8,optional=true)] public NonNegativeLengthMeasure BottomFlangeFilletRadius; //TYPE
[ifc(9)] public PositiveLengthMeasure TopFlangeWidth; //TYPE
[ifc(10,optional=true)] public PositiveLengthMeasure TopFlangeThickness; //TYPE
[ifc(11,optional=true)] public NonNegativeLengthMeasure TopFlangeFilletRadius; //TYPE
[ifc(12,optional=true)] public NonNegativeLengthMeasure BottomFlangeEdgeRadius; //TYPE
[ifc(13,optional=true)] public PlaneAngleMeasure BottomFlangeSlope; //TYPE
[ifc(14,optional=true)] public NonNegativeLengthMeasure TopFlangeEdgeRadius; //TYPE
[ifc(15,optional=true)] public PlaneAngleMeasure TopFlangeSlope; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometryresource/lexical/ifcaxis1placement.htm
[ifcSql(TypeGroupId:5,TypeId: 509,TableId:3)] public partial class Axis1Placement:Placement{//========================================================================
public               Axis1Placement():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Location"><para>new ifc.CartesianPoint(...)</para></param>
/// <param name="Axis">[optional]<para>new ifc.Direction(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Axis1Placement(CartesianPoint Location,Direction Axis=null,string EndOfLineComment=null):base(){AddNext();this.Location=Location;this.Axis=Axis;this.EndOfLineComment=EndOfLineComment;}
public               Axis1Placement(CartesianPoint Location):base(){AddNext();this.Location=Location;}
[ifc(2,optional=true)] public Direction Axis; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometryresource/lexical/ifcaxis2placement2d.htm
[ifcSql(TypeGroupId:5,TypeId: 510,TableId:3)] public partial class Axis2Placement2D:Placement{//======================================================================
public               Axis2Placement2D():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Location"><para>new ifc.CartesianPoint(...)</para></param>
/// <param name="RefDirection">[optional]<para>new ifc.Direction(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Axis2Placement2D(CartesianPoint Location,Direction RefDirection=null,string EndOfLineComment=null):base(){AddNext();this.Location=Location;this.RefDirection=RefDirection;this.EndOfLineComment=EndOfLineComment;}
public               Axis2Placement2D(CartesianPoint Location):base(){AddNext();this.Location=Location;}
[ifc(2,optional=true)] public Direction RefDirection; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometryresource/lexical/ifcaxis2placement3d.htm
[ifcSql(TypeGroupId:5,TypeId: 511,TableId:3)] public partial class Axis2Placement3D:Placement{//======================================================================
public               Axis2Placement3D():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Location"><para>new ifc.CartesianPoint(...)</para></param>
/// <param name="Axis">[optional]<para>new ifc.Direction(...)</para></param>
/// <param name="RefDirection">[optional]<para>new ifc.Direction(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Axis2Placement3D(CartesianPoint Location,Direction Axis=null,Direction RefDirection=null,string EndOfLineComment=null):base(){AddNext();this.Location=Location;this.Axis=Axis;this.RefDirection=RefDirection;this.EndOfLineComment=EndOfLineComment;}
public               Axis2Placement3D(CartesianPoint Location,string EndOfLineComment=null):base(){AddNext();this.Location=Location;this.EndOfLineComment=EndOfLineComment;}
[ifc(2,optional=true)] public Direction Axis; //ENTITY
[ifc(3,optional=true)] public Direction RefDirection; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.BezierCurve(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 512,TableId:3)] public partial class BSplineCurve:BoundedCurve{//=======================================================================
public               BSplineCurve():base(){}// abstract
[ifc(1)] public Integer Degree; //TYPE
[ifc(2)] public List2toUnbounded_CartesianPoint ControlPointsList; //ListType1d
[ifc(3)] public BSplineCurveForm CurveForm; //ENUM
[ifc(4)] public Logical ClosedCurve; //TYPE
[ifc(5)] public Logical SelfIntersect; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifcbeam.htm
[ifcSql(TypeGroupId:5,TypeId: 516,TableId:3)] public partial class Beam:BuildingElement{//============================================================================
public               Beam():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>BeamTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Beam(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,BeamTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public BeamTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifcbeamtype.htm
[ifcSql(TypeGroupId:5,TypeId: 518,TableId:3)] public partial class BeamType:BuildingElementType{//====================================================================
public               BeamType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>BeamTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               BeamType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,BeamTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               BeamType(BeamTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public BeamTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifcblobtexture.htm
[ifcSql(TypeGroupId:5,TypeId: 519,TableId:3)] public partial class BlobTexture:SurfaceTexture{//======================================================================
public               BlobTexture():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="RepeatS"><para>cast to (ifc.Boolean)...</para></param>
/// <param name="RepeatT"><para>cast to (ifc.Boolean)...</para></param>
/// <param name="Mode">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="TextureTransform">[optional]<para>new ifc.CartesianTransformationOperator2D(...)</para><para>new ifc.CartesianTransformationOperator2DnonUniform(...)</para></param>
/// <param name="Parameter">[optional]<para>List1toUnbounded_Identifier</para></param>
/// <param name="RasterFormat"><para>cast to (ifc.Identifier)...</para></param>
/// <param name="RasterCode"><para>cast to (ifc.Binary)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               BlobTexture(Boolean RepeatS,Boolean RepeatT,Identifier Mode,CartesianTransformationOperator2D TextureTransform,List1toUnbounded_Identifier Parameter,Identifier RasterFormat,Binary RasterCode,string EndOfLineComment=null):base(){AddNext();this.RepeatS=RepeatS;this.RepeatT=RepeatT;this.Mode=Mode;this.TextureTransform=TextureTransform;this.Parameter=Parameter;this.RasterFormat=RasterFormat;this.RasterCode=RasterCode;this.EndOfLineComment=EndOfLineComment;}
public               BlobTexture(Boolean RepeatS,Boolean RepeatT,Identifier RasterFormat,Binary RasterCode,string EndOfLineComment=null):base(){AddNext();this.RepeatS=RepeatS;this.RepeatT=RepeatT;this.RasterFormat=RasterFormat;this.RasterCode=RasterCode;this.EndOfLineComment=EndOfLineComment;}
[ifc(6)] public Identifier RasterFormat; //TYPE
[ifc(7)] public Binary RasterCode; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricmodelresource/lexical/ifcblock.htm
[ifcSql(TypeGroupId:5,TypeId: 520,TableId:3)] public partial class Block:CsgPrimitive3D{//============================================================================
public               Block():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Position"><para>new ifc.Axis2Placement3D(...)</para></param>
/// <param name="XLength"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="YLength"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="ZLength"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Block(Axis2Placement3D Position,PositiveLengthMeasure XLength,PositiveLengthMeasure YLength,PositiveLengthMeasure ZLength,string EndOfLineComment=null):base(){AddNext();this.Position=Position;this.XLength=XLength;this.YLength=YLength;this.ZLength=ZLength;this.EndOfLineComment=EndOfLineComment;}
[ifc(2)] public PositiveLengthMeasure XLength; //TYPE
[ifc(3)] public PositiveLengthMeasure YLength; //TYPE
[ifc(4)] public PositiveLengthMeasure ZLength; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifcboilertype.htm
[ifcSql(TypeGroupId:5,TypeId: 522,TableId:3)] public partial class BoilerType:EnergyConversionDeviceType{//===========================================================
public               BoilerType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>BoilerTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               BoilerType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,BoilerTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               BoilerType(BoilerTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public BoilerTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricmodelresource/lexical/ifcbooleanclippingresult.htm
[ifcSql(TypeGroupId:5,TypeId: 523,TableId:3)] public partial class BooleanClippingResult:BooleanResult{//=============================================================
public               BooleanClippingResult():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Operator"><para>BooleanOperator</para></param>
/// <param name="FirstOperand"><para>new ifc.BooleanOperand(new BooleanResult(...))...</para><para>new ifc.BooleanOperand(new CsgPrimitive3D(...))...</para><para>new ifc.BooleanOperand(new HalfSpaceSolid(...))...</para><para>new ifc.BooleanOperand(new SolidModel(...))...</para></param>
/// <param name="SecondOperand"><para>new ifc.BooleanOperand(new BooleanResult(...))...</para><para>new ifc.BooleanOperand(new CsgPrimitive3D(...))...</para><para>new ifc.BooleanOperand(new HalfSpaceSolid(...))...</para><para>new ifc.BooleanOperand(new SolidModel(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               BooleanClippingResult(BooleanOperator Operator,BooleanOperand FirstOperand,BooleanOperand SecondOperand,string EndOfLineComment=null):base(){AddNext();this.Operator=Operator;this.FirstOperand=FirstOperand;this.SecondOperand=SecondOperand;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.BooleanClippingResult(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricmodelresource/lexical/ifcbooleanresult.htm
[ifcSql(TypeGroupId:5,TypeId: 524,TableId:3)] public partial class BooleanResult:GeometricRepresentationItem{//=======================================================
public               BooleanResult():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Operator"><para>BooleanOperator</para></param>
/// <param name="FirstOperand"><para>new ifc.BooleanOperand(new BooleanResult(...))...</para><para>new ifc.BooleanOperand(new CsgPrimitive3D(...))...</para><para>new ifc.BooleanOperand(new HalfSpaceSolid(...))...</para><para>new ifc.BooleanOperand(new SolidModel(...))...</para></param>
/// <param name="SecondOperand"><para>new ifc.BooleanOperand(new BooleanResult(...))...</para><para>new ifc.BooleanOperand(new CsgPrimitive3D(...))...</para><para>new ifc.BooleanOperand(new HalfSpaceSolid(...))...</para><para>new ifc.BooleanOperand(new SolidModel(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               BooleanResult(BooleanOperator Operator,BooleanOperand FirstOperand,BooleanOperand SecondOperand,string EndOfLineComment=null):base(){AddNext();this.Operator=Operator;this.FirstOperand=FirstOperand;this.SecondOperand=SecondOperand;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public BooleanOperator Operator; //ENUM
[ifc(2)] public BooleanOperand FirstOperand; //SELECT
[ifc(3)] public BooleanOperand SecondOperand; //SELECT
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.BoundaryEdgeCondition(...)</para><para>new ifc.BoundaryFaceCondition(...)</para><para>new ifc.BoundaryNodeCondition(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 525,TableId:3)] public partial class BoundaryCondition:ENTITY{//========================================================================
public               BoundaryCondition():base(){}// abstract
[ifc(1,optional=true)] public Label Name; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometryresource/lexical/ifcboundarycurve.htm
[ifcSql(TypeGroupId:5,TypeId: 526,TableId:3)] public partial class BoundaryCurve:CompositeCurveOnSurface{//===========================================================
public               BoundaryCurve():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Segments"><para>List1toUnbounded_CompositeCurveSegment</para></param>
/// <param name="SelfIntersect"><para>cast to (ifc.Logical)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               BoundaryCurve(List1toUnbounded_CompositeCurveSegment Segments,Logical SelfIntersect,string EndOfLineComment=null):base(){AddNext();this.Segments=Segments;this.SelfIntersect=SelfIntersect;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralloadresource/lexical/ifcboundaryedgecondition.htm
[ifcSql(TypeGroupId:5,TypeId: 527,TableId:3)] public partial class BoundaryEdgeCondition:BoundaryCondition{//=========================================================
public               BoundaryEdgeCondition():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="TranslationalStiffnessByLengthX">[optional]<para>new ifc.ModulusOfTranslationalSubgradeReactionSelect(new Boolean(...))...</para><para>new ifc.ModulusOfTranslationalSubgradeReactionSelect(new ModulusOfLinearSubgradeReactionMeasure(...))...</para></param>
/// <param name="TranslationalStiffnessByLengthY">[optional]<para>new ifc.ModulusOfTranslationalSubgradeReactionSelect(new Boolean(...))...</para><para>new ifc.ModulusOfTranslationalSubgradeReactionSelect(new ModulusOfLinearSubgradeReactionMeasure(...))...</para></param>
/// <param name="TranslationalStiffnessByLengthZ">[optional]<para>new ifc.ModulusOfTranslationalSubgradeReactionSelect(new Boolean(...))...</para><para>new ifc.ModulusOfTranslationalSubgradeReactionSelect(new ModulusOfLinearSubgradeReactionMeasure(...))...</para></param>
/// <param name="RotationalStiffnessByLengthX">[optional]<para>new ifc.ModulusOfRotationalSubgradeReactionSelect(new Boolean(...))...</para><para>new ifc.ModulusOfRotationalSubgradeReactionSelect(new ModulusOfRotationalSubgradeReactionMeasure(...))...</para></param>
/// <param name="RotationalStiffnessByLengthY">[optional]<para>new ifc.ModulusOfRotationalSubgradeReactionSelect(new Boolean(...))...</para><para>new ifc.ModulusOfRotationalSubgradeReactionSelect(new ModulusOfRotationalSubgradeReactionMeasure(...))...</para></param>
/// <param name="RotationalStiffnessByLengthZ">[optional]<para>new ifc.ModulusOfRotationalSubgradeReactionSelect(new Boolean(...))...</para><para>new ifc.ModulusOfRotationalSubgradeReactionSelect(new ModulusOfRotationalSubgradeReactionMeasure(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               BoundaryEdgeCondition(Label Name=null,ModulusOfTranslationalSubgradeReactionSelect TranslationalStiffnessByLengthX=null,ModulusOfTranslationalSubgradeReactionSelect TranslationalStiffnessByLengthY=null,ModulusOfTranslationalSubgradeReactionSelect TranslationalStiffnessByLengthZ=null,ModulusOfRotationalSubgradeReactionSelect RotationalStiffnessByLengthX=null,ModulusOfRotationalSubgradeReactionSelect RotationalStiffnessByLengthY=null,ModulusOfRotationalSubgradeReactionSelect RotationalStiffnessByLengthZ=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.TranslationalStiffnessByLengthX=TranslationalStiffnessByLengthX;this.TranslationalStiffnessByLengthY=TranslationalStiffnessByLengthY;this.TranslationalStiffnessByLengthZ=TranslationalStiffnessByLengthZ;this.RotationalStiffnessByLengthX=RotationalStiffnessByLengthX;this.RotationalStiffnessByLengthY=RotationalStiffnessByLengthY;this.RotationalStiffnessByLengthZ=RotationalStiffnessByLengthZ;this.EndOfLineComment=EndOfLineComment;}
[ifc(2,optional=true)] public ModulusOfTranslationalSubgradeReactionSelect TranslationalStiffnessByLengthX; //SELECT
[ifc(3,optional=true)] public ModulusOfTranslationalSubgradeReactionSelect TranslationalStiffnessByLengthY; //SELECT
[ifc(4,optional=true)] public ModulusOfTranslationalSubgradeReactionSelect TranslationalStiffnessByLengthZ; //SELECT
[ifc(5,optional=true)] public ModulusOfRotationalSubgradeReactionSelect RotationalStiffnessByLengthX; //SELECT
[ifc(6,optional=true)] public ModulusOfRotationalSubgradeReactionSelect RotationalStiffnessByLengthY; //SELECT
[ifc(7,optional=true)] public ModulusOfRotationalSubgradeReactionSelect RotationalStiffnessByLengthZ; //SELECT
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralloadresource/lexical/ifcboundaryfacecondition.htm
[ifcSql(TypeGroupId:5,TypeId: 528,TableId:3)] public partial class BoundaryFaceCondition:BoundaryCondition{//=========================================================
public               BoundaryFaceCondition():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="TranslationalStiffnessByAreaX">[optional]<para>new ifc.ModulusOfSubgradeReactionSelect(new Boolean(...))...</para><para>new ifc.ModulusOfSubgradeReactionSelect(new ModulusOfSubgradeReactionMeasure(...))...</para></param>
/// <param name="TranslationalStiffnessByAreaY">[optional]<para>new ifc.ModulusOfSubgradeReactionSelect(new Boolean(...))...</para><para>new ifc.ModulusOfSubgradeReactionSelect(new ModulusOfSubgradeReactionMeasure(...))...</para></param>
/// <param name="TranslationalStiffnessByAreaZ">[optional]<para>new ifc.ModulusOfSubgradeReactionSelect(new Boolean(...))...</para><para>new ifc.ModulusOfSubgradeReactionSelect(new ModulusOfSubgradeReactionMeasure(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               BoundaryFaceCondition(Label Name=null,ModulusOfSubgradeReactionSelect TranslationalStiffnessByAreaX=null,ModulusOfSubgradeReactionSelect TranslationalStiffnessByAreaY=null,ModulusOfSubgradeReactionSelect TranslationalStiffnessByAreaZ=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.TranslationalStiffnessByAreaX=TranslationalStiffnessByAreaX;this.TranslationalStiffnessByAreaY=TranslationalStiffnessByAreaY;this.TranslationalStiffnessByAreaZ=TranslationalStiffnessByAreaZ;this.EndOfLineComment=EndOfLineComment;}
[ifc(2,optional=true)] public ModulusOfSubgradeReactionSelect TranslationalStiffnessByAreaX; //SELECT
[ifc(3,optional=true)] public ModulusOfSubgradeReactionSelect TranslationalStiffnessByAreaY; //SELECT
[ifc(4,optional=true)] public ModulusOfSubgradeReactionSelect TranslationalStiffnessByAreaZ; //SELECT
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.BoundaryNodeConditionWarping(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralloadresource/lexical/ifcboundarynodecondition.htm
[ifcSql(TypeGroupId:5,TypeId: 529,TableId:3)] public partial class BoundaryNodeCondition:BoundaryCondition{//=========================================================
public               BoundaryNodeCondition():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="TranslationalStiffnessX">[optional]<para>new ifc.TranslationalStiffnessSelect(new Boolean(...))...</para><para>new ifc.TranslationalStiffnessSelect(new LinearStiffnessMeasure(...))...</para></param>
/// <param name="TranslationalStiffnessY">[optional]<para>new ifc.TranslationalStiffnessSelect(new Boolean(...))...</para><para>new ifc.TranslationalStiffnessSelect(new LinearStiffnessMeasure(...))...</para></param>
/// <param name="TranslationalStiffnessZ">[optional]<para>new ifc.TranslationalStiffnessSelect(new Boolean(...))...</para><para>new ifc.TranslationalStiffnessSelect(new LinearStiffnessMeasure(...))...</para></param>
/// <param name="RotationalStiffnessX">[optional]<para>new ifc.RotationalStiffnessSelect(new Boolean(...))...</para><para>new ifc.RotationalStiffnessSelect(new RotationalStiffnessMeasure(...))...</para></param>
/// <param name="RotationalStiffnessY">[optional]<para>new ifc.RotationalStiffnessSelect(new Boolean(...))...</para><para>new ifc.RotationalStiffnessSelect(new RotationalStiffnessMeasure(...))...</para></param>
/// <param name="RotationalStiffnessZ">[optional]<para>new ifc.RotationalStiffnessSelect(new Boolean(...))...</para><para>new ifc.RotationalStiffnessSelect(new RotationalStiffnessMeasure(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               BoundaryNodeCondition(Label Name=null,TranslationalStiffnessSelect TranslationalStiffnessX=null,TranslationalStiffnessSelect TranslationalStiffnessY=null,TranslationalStiffnessSelect TranslationalStiffnessZ=null,RotationalStiffnessSelect RotationalStiffnessX=null,RotationalStiffnessSelect RotationalStiffnessY=null,RotationalStiffnessSelect RotationalStiffnessZ=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.TranslationalStiffnessX=TranslationalStiffnessX;this.TranslationalStiffnessY=TranslationalStiffnessY;this.TranslationalStiffnessZ=TranslationalStiffnessZ;this.RotationalStiffnessX=RotationalStiffnessX;this.RotationalStiffnessY=RotationalStiffnessY;this.RotationalStiffnessZ=RotationalStiffnessZ;this.EndOfLineComment=EndOfLineComment;}
[ifc(2,optional=true)] public TranslationalStiffnessSelect TranslationalStiffnessX; //SELECT
[ifc(3,optional=true)] public TranslationalStiffnessSelect TranslationalStiffnessY; //SELECT
[ifc(4,optional=true)] public TranslationalStiffnessSelect TranslationalStiffnessZ; //SELECT
[ifc(5,optional=true)] public RotationalStiffnessSelect RotationalStiffnessX; //SELECT
[ifc(6,optional=true)] public RotationalStiffnessSelect RotationalStiffnessY; //SELECT
[ifc(7,optional=true)] public RotationalStiffnessSelect RotationalStiffnessZ; //SELECT
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralloadresource/lexical/ifcboundarynodeconditionwarping.htm
[ifcSql(TypeGroupId:5,TypeId: 530,TableId:3)] public partial class BoundaryNodeConditionWarping:BoundaryNodeCondition{//==============================================
public               BoundaryNodeConditionWarping():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="TranslationalStiffnessX">[optional]<para>new ifc.TranslationalStiffnessSelect(new Boolean(...))...</para><para>new ifc.TranslationalStiffnessSelect(new LinearStiffnessMeasure(...))...</para></param>
/// <param name="TranslationalStiffnessY">[optional]<para>new ifc.TranslationalStiffnessSelect(new Boolean(...))...</para><para>new ifc.TranslationalStiffnessSelect(new LinearStiffnessMeasure(...))...</para></param>
/// <param name="TranslationalStiffnessZ">[optional]<para>new ifc.TranslationalStiffnessSelect(new Boolean(...))...</para><para>new ifc.TranslationalStiffnessSelect(new LinearStiffnessMeasure(...))...</para></param>
/// <param name="RotationalStiffnessX">[optional]<para>new ifc.RotationalStiffnessSelect(new Boolean(...))...</para><para>new ifc.RotationalStiffnessSelect(new RotationalStiffnessMeasure(...))...</para></param>
/// <param name="RotationalStiffnessY">[optional]<para>new ifc.RotationalStiffnessSelect(new Boolean(...))...</para><para>new ifc.RotationalStiffnessSelect(new RotationalStiffnessMeasure(...))...</para></param>
/// <param name="RotationalStiffnessZ">[optional]<para>new ifc.RotationalStiffnessSelect(new Boolean(...))...</para><para>new ifc.RotationalStiffnessSelect(new RotationalStiffnessMeasure(...))...</para></param>
/// <param name="WarpingStiffness">[optional]<para>new ifc.WarpingStiffnessSelect(new Boolean(...))...</para><para>new ifc.WarpingStiffnessSelect(new WarpingMomentMeasure(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               BoundaryNodeConditionWarping(Label Name=null,TranslationalStiffnessSelect TranslationalStiffnessX=null,TranslationalStiffnessSelect TranslationalStiffnessY=null,TranslationalStiffnessSelect TranslationalStiffnessZ=null,RotationalStiffnessSelect RotationalStiffnessX=null,RotationalStiffnessSelect RotationalStiffnessY=null,RotationalStiffnessSelect RotationalStiffnessZ=null,WarpingStiffnessSelect WarpingStiffness=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.TranslationalStiffnessX=TranslationalStiffnessX;this.TranslationalStiffnessY=TranslationalStiffnessY;this.TranslationalStiffnessZ=TranslationalStiffnessZ;this.RotationalStiffnessX=RotationalStiffnessX;this.RotationalStiffnessY=RotationalStiffnessY;this.RotationalStiffnessZ=RotationalStiffnessZ;this.WarpingStiffness=WarpingStiffness;this.EndOfLineComment=EndOfLineComment;}
[ifc(8,optional=true)] public WarpingStiffnessSelect WarpingStiffness; //SELECT
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.BSplineCurve(...)</para><para>new ifc.BezierCurve(...)</para><para>new ifc.CompositeCurve(...)</para><para>new ifc.CurveSegment2D(...)</para><para>new ifc.Polyline(...)</para><para>new ifc.TrimmedCurve(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 531,TableId:3)] public partial class BoundedCurve:Curve{//==============================================================================
public               BoundedCurve():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.CurveBoundedPlane(...)</para><para>new ifc.RectangularTrimmedSurface(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 532,TableId:3)] public partial class BoundedSurface:Surface{//==========================================================================
public               BoundedSurface():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricmodelresource/lexical/ifcboundingbox.htm
[ifcSql(TypeGroupId:5,TypeId: 533,TableId:3)] public partial class BoundingBox:GeometricRepresentationItem{//=========================================================
public               BoundingBox():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Corner"><para>new ifc.CartesianPoint(...)</para></param>
/// <param name="XDim"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="YDim"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="ZDim"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               BoundingBox(CartesianPoint Corner,PositiveLengthMeasure XDim,PositiveLengthMeasure YDim,PositiveLengthMeasure ZDim,string EndOfLineComment=null):base(){AddNext();this.Corner=Corner;this.XDim=XDim;this.YDim=YDim;this.ZDim=ZDim;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public CartesianPoint Corner; //ENTITY
[ifc(2)] public PositiveLengthMeasure XDim; //TYPE
[ifc(3)] public PositiveLengthMeasure YDim; //TYPE
[ifc(4)] public PositiveLengthMeasure ZDim; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricmodelresource/lexical/ifcboxedhalfspace.htm
[ifcSql(TypeGroupId:5,TypeId: 534,TableId:3)] public partial class BoxedHalfSpace:HalfSpaceSolid{//===================================================================
public               BoxedHalfSpace():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="BaseSurface"><para>new ifc.CurveBoundedPlane(...)</para><para>new ifc.RectangularTrimmedSurface(...)</para><para>new ifc.Plane(...)</para></param>
/// <param name="AgreementFlag"><para>cast to (ifc.Boolean)...</para></param>
/// <param name="Enclosure"><para>new ifc.BoundingBox(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               BoxedHalfSpace(Surface BaseSurface,Boolean AgreementFlag,BoundingBox Enclosure,string EndOfLineComment=null):base(){AddNext();this.BaseSurface=BaseSurface;this.AgreementFlag=AgreementFlag;this.Enclosure=Enclosure;this.EndOfLineComment=EndOfLineComment;}
[ifc(3)] public BoundingBox Enclosure; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifcbuilding.htm
[ifcSql(TypeGroupId:5,TypeId: 535,TableId:3)] public partial class Building:SpatialStructureElement{//================================================================
public               Building():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="LongName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="CompositionType">[optional]<para>ElementCompositionEnum</para></param>
/// <param name="ElevationOfRefHeight">[optional]<para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="ElevationOfTerrain">[optional]<para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="BuildingAddress">[optional]<para>new ifc.PostalAddress(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Building(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Label LongName=null,ElementCompositionEnum? CompositionType=null,LengthMeasure ElevationOfRefHeight=null,LengthMeasure ElevationOfTerrain=null,PostalAddress BuildingAddress=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.LongName=LongName;this.CompositionType=CompositionType;this.ElevationOfRefHeight=ElevationOfRefHeight;this.ElevationOfTerrain=ElevationOfTerrain;this.BuildingAddress=BuildingAddress;this.EndOfLineComment=EndOfLineComment;}
[ifc(10,optional=true)] public LengthMeasure ElevationOfRefHeight; //TYPE
[ifc(11,optional=true)] public LengthMeasure ElevationOfTerrain; //TYPE
[ifc(12,optional=true)] public PostalAddress BuildingAddress; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.Beam(...)</para><para>new ifc.BuildingElementProxy(...)</para><para>new ifc.Column(...)</para><para>new ifc.Covering(...)</para><para>new ifc.CurtainWall(...)</para><para>new ifc.Door(...)</para><para>new ifc.Footing(...)</para><para>new ifc.Member(...)</para><para>new ifc.Pile(...)</para><para>new ifc.Plate(...)</para><para>new ifc.Railing(...)</para><para>new ifc.Ramp(...)</para><para>new ifc.RampFlight(...)</para><para>new ifc.Roof(...)</para><para>new ifc.Slab(...)</para><para>new ifc.Stair(...)</para><para>new ifc.StairFlight(...)</para><para>new ifc.Wall(...)</para><para>new ifc.Window(...)</para><para>new ifc.BuildingElementComponent(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 536,TableId:3)] public partial class BuildingElement:Element{//=========================================================================
public               BuildingElement():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedcomponentelements/lexical/ifcbuildingelementpart.htm
[ifcSql(TypeGroupId:5,TypeId: 537,TableId:3)] public partial class BuildingElementPart:ElementComponent{//============================================================
public               BuildingElementPart():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>BuildingElementPartTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               BuildingElementPart(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,BuildingElementPartTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public BuildingElementPartTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifcbuildingelementproxy.htm
[ifcSql(TypeGroupId:5,TypeId: 539,TableId:3)] public partial class BuildingElementProxy:BuildingElement{//============================================================
public               BuildingElementProxy():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>BuildingElementProxyTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               BuildingElementProxy(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,BuildingElementProxyTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public BuildingElementProxyTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifcbuildingelementproxytype.htm
[ifcSql(TypeGroupId:5,TypeId: 540,TableId:3)] public partial class BuildingElementProxyType:BuildingElementType{//====================================================
public               BuildingElementProxyType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>BuildingElementProxyTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               BuildingElementProxyType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,BuildingElementProxyTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               BuildingElementProxyType(BuildingElementProxyTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public BuildingElementProxyTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.BeamType(...)</para><para>new ifc.BuildingElementProxyType(...)</para><para>new ifc.ColumnType(...)</para><para>new ifc.CoveringType(...)</para><para>new ifc.CurtainWallType(...)</para><para>new ifc.MemberType(...)</para><para>new ifc.PlateType(...)</para><para>new ifc.RailingType(...)</para><para>new ifc.RampFlightType(...)</para><para>new ifc.SlabType(...)</para><para>new ifc.StairFlightType(...)</para><para>new ifc.WallType(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 541,TableId:3)] public partial class BuildingElementType:ElementType{//=================================================================
public               BuildingElementType():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifcbuildingstorey.htm
[ifcSql(TypeGroupId:5,TypeId: 542,TableId:3)] public partial class BuildingStorey:SpatialStructureElement{//==========================================================
public               BuildingStorey():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="LongName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="CompositionType">[optional]<para>ElementCompositionEnum</para></param>
/// <param name="Elevation">[optional]<para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               BuildingStorey(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Label LongName=null,ElementCompositionEnum? CompositionType=null,LengthMeasure Elevation=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.LongName=LongName;this.CompositionType=CompositionType;this.Elevation=Elevation;this.EndOfLineComment=EndOfLineComment;}
[ifc(10,optional=true)] public LengthMeasure Elevation; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcprofileresource/lexical/ifccshapeprofiledef.htm
[ifcSql(TypeGroupId:5,TypeId: 546,TableId:3)] public partial class CShapeProfileDef:ParameterizedProfileDef{//========================================================
public               CShapeProfileDef():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ProfileType"><para>ProfileTypeEnum</para></param>
/// <param name="ProfileName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Position">[optional]<para>new ifc.Axis2Placement2D(...)</para></param>
/// <param name="Depth"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="Width"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="WallThickness"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="Girth"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="InternalFilletRadius">[optional]<para>cast to (ifc.NonNegativeLengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CShapeProfileDef(ProfileTypeEnum ProfileType,Label ProfileName,Axis2Placement2D Position,PositiveLengthMeasure Depth,PositiveLengthMeasure Width,PositiveLengthMeasure WallThickness,PositiveLengthMeasure Girth,NonNegativeLengthMeasure InternalFilletRadius=null,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.ProfileName=ProfileName;this.Position=Position;this.Depth=Depth;this.Width=Width;this.WallThickness=WallThickness;this.Girth=Girth;this.InternalFilletRadius=InternalFilletRadius;this.EndOfLineComment=EndOfLineComment;}
public               CShapeProfileDef(ProfileTypeEnum ProfileType,PositiveLengthMeasure Depth,PositiveLengthMeasure Width,PositiveLengthMeasure WallThickness,PositiveLengthMeasure Girth,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.Depth=Depth;this.Width=Width;this.WallThickness=WallThickness;this.Girth=Girth;this.EndOfLineComment=EndOfLineComment;}
[ifc(4)] public PositiveLengthMeasure Depth; //TYPE
[ifc(5)] public PositiveLengthMeasure Width; //TYPE
[ifc(6)] public PositiveLengthMeasure WallThickness; //TYPE
[ifc(7)] public PositiveLengthMeasure Girth; //TYPE
[ifc(8,optional=true)] public NonNegativeLengthMeasure InternalFilletRadius; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcelectricaldomain/lexical/ifccablecarrierfittingtype.htm
[ifcSql(TypeGroupId:5,TypeId: 548,TableId:3)] public partial class CableCarrierFittingType:FlowFittingType{//=========================================================
public               CableCarrierFittingType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>CableCarrierFittingTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CableCarrierFittingType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,CableCarrierFittingTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               CableCarrierFittingType(CableCarrierFittingTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public CableCarrierFittingTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcelectricaldomain/lexical/ifccablecarriersegmenttype.htm
[ifcSql(TypeGroupId:5,TypeId: 550,TableId:3)] public partial class CableCarrierSegmentType:FlowSegmentType{//=========================================================
public               CableCarrierSegmentType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>CableCarrierSegmentTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CableCarrierSegmentType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,CableCarrierSegmentTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               CableCarrierSegmentType(CableCarrierSegmentTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public CableCarrierSegmentTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcelectricaldomain/lexical/ifccablesegmenttype.htm
[ifcSql(TypeGroupId:5,TypeId: 554,TableId:3)] public partial class CableSegmentType:FlowSegmentType{//================================================================
public               CableSegmentType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>CableSegmentTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CableSegmentType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,CableSegmentTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               CableSegmentType(CableSegmentTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public CableSegmentTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometryresource/lexical/ifccartesianpoint.htm
[ifcSql(TypeGroupId:5,TypeId: 555,TableId:3)] public partial class CartesianPoint:Point{//============================================================================
public               CartesianPoint():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Coordinates"><para>List1to3_LengthMeasure</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CartesianPoint(List1to3_LengthMeasure Coordinates,string EndOfLineComment=null):base(){AddNext();this.Coordinates=Coordinates;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public List1to3_LengthMeasure Coordinates; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.CartesianPointList3D(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 556,TableId:3)] public partial class CartesianPointList:GeometricRepresentationItem{//==================================================
public               CartesianPointList():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricmodelresource/lexical/ifccartesianpointlist3d.htm
[ifcSql(TypeGroupId:5,TypeId: 558,TableId:3)] public partial class CartesianPointList3D:CartesianPointList{//=========================================================
public               CartesianPointList3D():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="CoordList"><para>List1toUnbounded_List3to3_LengthMeasure</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CartesianPointList3D(List1toUnbounded_List3to3_LengthMeasure CoordList,string EndOfLineComment=null):base(){AddNext();this.CoordList=CoordList;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public List1toUnbounded_List3to3_LengthMeasure CoordList; //ListType2d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.CartesianTransformationOperator2D(...)</para><para>new ifc.CartesianTransformationOperator3D(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 559,TableId:3)] public partial class CartesianTransformationOperator:GeometricRepresentationItem{//=====================================
public               CartesianTransformationOperator():base(){}// abstract
[ifc(1,optional=true)] public Direction Axis1; //ENTITY
[ifc(2,optional=true)] public Direction Axis2; //ENTITY
[ifc(3)] public CartesianPoint LocalOrigin; //ENTITY
[ifc(4,optional=true)] public Real Scale; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.CartesianTransformationOperator2DnonUniform(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometryresource/lexical/ifccartesiantransformationoperator2d.htm
[ifcSql(TypeGroupId:5,TypeId: 560,TableId:3)] public partial class CartesianTransformationOperator2D:CartesianTransformationOperator{//===============================
public               CartesianTransformationOperator2D():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Axis1">[optional]<para>new ifc.Direction(...)</para></param>
/// <param name="Axis2">[optional]<para>new ifc.Direction(...)</para></param>
/// <param name="LocalOrigin"><para>new ifc.CartesianPoint(...)</para></param>
/// <param name="Scale">[optional]<para>cast to (ifc.Real)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CartesianTransformationOperator2D(Direction Axis1,Direction Axis2,CartesianPoint LocalOrigin,Real Scale=null,string EndOfLineComment=null):base(){AddNext();this.Axis1=Axis1;this.Axis2=Axis2;this.LocalOrigin=LocalOrigin;this.Scale=Scale;this.EndOfLineComment=EndOfLineComment;}
public               CartesianTransformationOperator2D(CartesianPoint LocalOrigin,string EndOfLineComment=null):base(){AddNext();this.LocalOrigin=LocalOrigin;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometryresource/lexical/ifccartesiantransformationoperator2dnonuniform.htm
[ifcSql(TypeGroupId:5,TypeId: 561,TableId:3)] public partial class CartesianTransformationOperator2DnonUniform:CartesianTransformationOperator2D{//===================
public               CartesianTransformationOperator2DnonUniform():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Axis1">[optional]<para>new ifc.Direction(...)</para></param>
/// <param name="Axis2">[optional]<para>new ifc.Direction(...)</para></param>
/// <param name="LocalOrigin"><para>new ifc.CartesianPoint(...)</para></param>
/// <param name="Scale">[optional]<para>cast to (ifc.Real)...</para></param>
/// <param name="Scale2">[optional]<para>cast to (ifc.Real)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CartesianTransformationOperator2DnonUniform(Direction Axis1,Direction Axis2,CartesianPoint LocalOrigin,Real Scale=null,Real Scale2=null,string EndOfLineComment=null):base(){AddNext();this.Axis1=Axis1;this.Axis2=Axis2;this.LocalOrigin=LocalOrigin;this.Scale=Scale;this.Scale2=Scale2;this.EndOfLineComment=EndOfLineComment;}
public               CartesianTransformationOperator2DnonUniform(CartesianPoint LocalOrigin,string EndOfLineComment=null):base(){AddNext();this.LocalOrigin=LocalOrigin;this.EndOfLineComment=EndOfLineComment;}
[ifc(5,optional=true)] public Real Scale2; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.CartesianTransformationOperator3DnonUniform(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometryresource/lexical/ifccartesiantransformationoperator3d.htm
[ifcSql(TypeGroupId:5,TypeId: 562,TableId:3)] public partial class CartesianTransformationOperator3D:CartesianTransformationOperator{//===============================
public               CartesianTransformationOperator3D():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Axis1">[optional]<para>new ifc.Direction(...)</para></param>
/// <param name="Axis2">[optional]<para>new ifc.Direction(...)</para></param>
/// <param name="LocalOrigin"><para>new ifc.CartesianPoint(...)</para></param>
/// <param name="Scale">[optional]<para>cast to (ifc.Real)...</para></param>
/// <param name="Axis3">[optional]<para>new ifc.Direction(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CartesianTransformationOperator3D(Direction Axis1,Direction Axis2,CartesianPoint LocalOrigin,Real Scale=null,Direction Axis3=null,string EndOfLineComment=null):base(){AddNext();this.Axis1=Axis1;this.Axis2=Axis2;this.LocalOrigin=LocalOrigin;this.Scale=Scale;this.Axis3=Axis3;this.EndOfLineComment=EndOfLineComment;}
public               CartesianTransformationOperator3D(CartesianPoint LocalOrigin,string EndOfLineComment=null):base(){AddNext();this.LocalOrigin=LocalOrigin;this.EndOfLineComment=EndOfLineComment;}
[ifc(5,optional=true)] public Direction Axis3; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometryresource/lexical/ifccartesiantransformationoperator3dnonuniform.htm
[ifcSql(TypeGroupId:5,TypeId: 563,TableId:3)] public partial class CartesianTransformationOperator3DnonUniform:CartesianTransformationOperator3D{//===================
public               CartesianTransformationOperator3DnonUniform():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Axis1">[optional]<para>new ifc.Direction(...)</para></param>
/// <param name="Axis2">[optional]<para>new ifc.Direction(...)</para></param>
/// <param name="LocalOrigin"><para>new ifc.CartesianPoint(...)</para></param>
/// <param name="Scale">[optional]<para>cast to (ifc.Real)...</para></param>
/// <param name="Axis3">[optional]<para>new ifc.Direction(...)</para></param>
/// <param name="Scale2">[optional]<para>cast to (ifc.Real)...</para></param>
/// <param name="Scale3">[optional]<para>cast to (ifc.Real)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CartesianTransformationOperator3DnonUniform(Direction Axis1,Direction Axis2,CartesianPoint LocalOrigin,Real Scale=null,Direction Axis3=null,Real Scale2=null,Real Scale3=null,string EndOfLineComment=null):base(){AddNext();this.Axis1=Axis1;this.Axis2=Axis2;this.LocalOrigin=LocalOrigin;this.Scale=Scale;this.Axis3=Axis3;this.Scale2=Scale2;this.Scale3=Scale3;this.EndOfLineComment=EndOfLineComment;}
public               CartesianTransformationOperator3DnonUniform(CartesianPoint LocalOrigin,string EndOfLineComment=null):base(){AddNext();this.LocalOrigin=LocalOrigin;this.EndOfLineComment=EndOfLineComment;}
[ifc(6,optional=true)] public Real Scale2; //TYPE
[ifc(7,optional=true)] public Real Scale3; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcprofileresource/lexical/ifccenterlineprofiledef.htm
[ifcSql(TypeGroupId:5,TypeId: 564,TableId:3)] public partial class CenterLineProfileDef:ArbitraryOpenProfileDef{//====================================================
public               CenterLineProfileDef():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ProfileType"><para>ProfileTypeEnum</para></param>
/// <param name="ProfileName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_Curve"><para>new ifc.BezierCurve(...)</para><para>new ifc.CompositeCurve(...)</para><para>new ifc.Polyline(...)</para><para>new ifc.TrimmedCurve(...)</para></param>
/// <param name="Thickness"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CenterLineProfileDef(ProfileTypeEnum ProfileType,Label ProfileName,BoundedCurve _Curve,PositiveLengthMeasure Thickness,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.ProfileName=ProfileName;this._Curve=_Curve;this.Thickness=Thickness;this.EndOfLineComment=EndOfLineComment;}
public               CenterLineProfileDef(ProfileTypeEnum ProfileType,BoundedCurve _Curve,PositiveLengthMeasure Thickness):base(){AddNext();this.ProfileType=ProfileType;this._Curve=_Curve;this.Thickness=Thickness;}
[ifc(4)] public PositiveLengthMeasure Thickness; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifcchillertype.htm
[ifcSql(TypeGroupId:5,TypeId: 566,TableId:3)] public partial class ChillerType:EnergyConversionDeviceType{//==========================================================
public               ChillerType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>ChillerTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ChillerType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,ChillerTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               ChillerType(ChillerTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public ChillerTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometryresource/lexical/ifccircle.htm
[ifcSql(TypeGroupId:5,TypeId: 569,TableId:3)] public partial class Circle:Conic{//====================================================================================
public               Circle():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Position"><para>new ifc.Axis2Placement(new Axis2Placement2D(...))...</para><para>new ifc.Axis2Placement(new Axis2Placement3D(...))...</para></param>
/// <param name="Radius"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Circle(Axis2Placement Position,PositiveLengthMeasure Radius,string EndOfLineComment=null):base(){AddNext();this.Position=Position;this.Radius=Radius;this.EndOfLineComment=EndOfLineComment;}
[ifc(2)] public PositiveLengthMeasure Radius; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcprofileresource/lexical/ifccirclehollowprofiledef.htm
[ifcSql(TypeGroupId:5,TypeId: 570,TableId:3)] public partial class CircleHollowProfileDef:CircleProfileDef{//=========================================================
public               CircleHollowProfileDef():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ProfileType"><para>ProfileTypeEnum</para></param>
/// <param name="ProfileName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Position">[optional]<para>new ifc.Axis2Placement2D(...)</para></param>
/// <param name="Radius"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="WallThickness"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CircleHollowProfileDef(ProfileTypeEnum ProfileType,Label ProfileName,Axis2Placement2D Position,PositiveLengthMeasure Radius,PositiveLengthMeasure WallThickness,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.ProfileName=ProfileName;this.Position=Position;this.Radius=Radius;this.WallThickness=WallThickness;this.EndOfLineComment=EndOfLineComment;}
public               CircleHollowProfileDef(ProfileTypeEnum ProfileType,PositiveLengthMeasure Radius,PositiveLengthMeasure WallThickness,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.Radius=Radius;this.WallThickness=WallThickness;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public PositiveLengthMeasure WallThickness; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.CircleHollowProfileDef(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcprofileresource/lexical/ifccircleprofiledef.htm
[ifcSql(TypeGroupId:5,TypeId: 571,TableId:3)] public partial class CircleProfileDef:ParameterizedProfileDef{//========================================================
public               CircleProfileDef():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ProfileType"><para>ProfileTypeEnum</para></param>
/// <param name="ProfileName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Position">[optional]<para>new ifc.Axis2Placement2D(...)</para></param>
/// <param name="Radius"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CircleProfileDef(ProfileTypeEnum ProfileType,Label ProfileName,Axis2Placement2D Position,PositiveLengthMeasure Radius,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.ProfileName=ProfileName;this.Position=Position;this.Radius=Radius;this.EndOfLineComment=EndOfLineComment;}
public               CircleProfileDef(ProfileTypeEnum ProfileType,PositiveLengthMeasure Radius,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.Radius=Radius;this.EndOfLineComment=EndOfLineComment;}
[ifc(4)] public PositiveLengthMeasure Radius; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcexternalreferenceresource/lexical/ifcclassification.htm
[ifcSql(TypeGroupId:5,TypeId: 575,TableId:3)] public partial class Classification:ExternalInformation{//==============================================================
public               Classification():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Source">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Edition">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EditionDate">[optional]<para>cast to (ifc.Date)...</para></param>
/// <param name="Name"><para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="Location">[optional]<para>cast to (ifc.URIReference)...</para></param>
/// <param name="ReferenceTokens">[optional]<para>List1toUnbounded_Identifier</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Classification(Label Source,Label Edition,Date EditionDate,Label Name,Text Description=null,URIReference Location=null,List1toUnbounded_Identifier ReferenceTokens=null,string EndOfLineComment=null):base(){AddNext();this.Source=Source;this.Edition=Edition;this.EditionDate=EditionDate;this.Name=Name;this.Description=Description;this.Location=Location;this.ReferenceTokens=ReferenceTokens;this.EndOfLineComment=EndOfLineComment;}
public               Classification(Label Name,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.EndOfLineComment=EndOfLineComment;}
[ifc(1,optional=true)] public Label Source; //TYPE
[ifc(2,optional=true)] public Label Edition; //TYPE
[ifc(3,optional=true)] public Date EditionDate; //TYPE
[ifc(4)] public Label Name; //TYPE
[ifc(5,optional=true)] public Text Description; //TYPE
[ifc(6,optional=true)] public URIReference Location; //TYPE
[ifc(7,optional=true)] public List1toUnbounded_Identifier ReferenceTokens; //ListType1d
/// <summary>INVERSE: HasReferences of ClassificationReference for ReferencedSource</summary>
[ifcInverse(For:"ReferencedSource")] public LIST<ClassificationReference> HasReferences;
/// <summary>INVERSE: ClassificationForObjects of RelAssociatesClassification for RelatingClassification</summary>
[ifcInverse(For:"RelatingClassification")] public LIST<RelAssociatesClassification> ClassificationForObjects;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcexternalreferenceresource/lexical/ifcclassificationreference.htm
[ifcSql(TypeGroupId:5,TypeId: 576,TableId:3)] public partial class ClassificationReference:ExternalReference{//=======================================================
public               ClassificationReference():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Location">[optional]<para>cast to (ifc.URIReference)...</para></param>
/// <param name="Identification">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="ReferencedSource">[optional]<para>new ifc.ClassificationReferenceSelect(new Classification(...))...</para><para>new ifc.ClassificationReferenceSelect(new ClassificationReference(...))...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="Sort">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ClassificationReference(URIReference Location=null,Identifier Identification=null,Label Name=null,ClassificationReferenceSelect ReferencedSource=null,Text Description=null,Identifier Sort=null,string EndOfLineComment=null):base(){AddNext();this.Location=Location;this.Identification=Identification;this.Name=Name;this.ReferencedSource=ReferencedSource;this.Description=Description;this.Sort=Sort;this.EndOfLineComment=EndOfLineComment;}
[ifc(4,optional=true)] public ClassificationReferenceSelect ReferencedSource; //SELECT
[ifc(5,optional=true)] public Text Description; //TYPE
[ifc(6,optional=true)] public Identifier Sort; //TYPE
/// <summary>INVERSE: HasReferences of ClassificationReference for ReferencedSource</summary>
[ifcInverse(For:"ReferencedSource")] public LIST<ClassificationReference> HasReferences;
/// <summary>INVERSE: ClassificationRefForObjects of RelAssociatesClassification for RelatingClassification</summary>
[ifcInverse(For:"RelatingClassification")] public LIST<RelAssociatesClassification> ClassificationRefForObjects;
public override void AssignInverseElements(){if (ReferencedSource!=null) if (ReferencedSource.SelectType()==typeof(Classification))  {if (((Classification)ReferencedSource).HasReferences==null) ((Classification)ReferencedSource).HasReferences=new LIST<ClassificationReference>();((Classification)ReferencedSource).HasReferences.Add(this);}
                                             if (ReferencedSource!=null) if (ReferencedSource.SelectType()==typeof(ClassificationReference))  {if (((ClassificationReference)ReferencedSource).HasReferences==null) ((ClassificationReference)ReferencedSource).HasReferences=new LIST<ClassificationReference>();((ClassificationReference)ReferencedSource).HasReferences.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifctopologyresource/lexical/ifcclosedshell.htm
[ifcSql(TypeGroupId:5,TypeId: 577,TableId:3)] public partial class ClosedShell:ConnectedFaceSet{//====================================================================
public               ClosedShell():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="CfsFaces"><para>Set1toUnbounded_Face</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ClosedShell(Set1toUnbounded_Face CfsFaces,string EndOfLineComment=null):base(){AddNext();this.CfsFaces=CfsFaces;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifccoiltype.htm
[ifcSql(TypeGroupId:5,TypeId: 580,TableId:3)] public partial class CoilType:EnergyConversionDeviceType{//=============================================================
public               CoilType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>CoilTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CoilType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,CoilTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               CoilType(CoilTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public CoilTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifccolourrgb.htm
[ifcSql(TypeGroupId:5,TypeId: 581,TableId:3)] public partial class ColourRgb:ColourSpecification{//===================================================================
public               ColourRgb():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Red"><para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="Green"><para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="Blue"><para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ColourRgb(Label Name,NormalisedRatioMeasure Red,NormalisedRatioMeasure Green,NormalisedRatioMeasure Blue,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Red=Red;this.Green=Green;this.Blue=Blue;this.EndOfLineComment=EndOfLineComment;}
public               ColourRgb(NormalisedRatioMeasure Red,NormalisedRatioMeasure Green,NormalisedRatioMeasure Blue):base(){AddNext();this.Red=Red;this.Green=Green;this.Blue=Blue;}
[ifc(2)] public NormalisedRatioMeasure Red; //TYPE
[ifc(3)] public NormalisedRatioMeasure Green; //TYPE
[ifc(4)] public NormalisedRatioMeasure Blue; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifccolourrgblist.htm
[ifcSql(TypeGroupId:5,TypeId: 582,TableId:3)] public partial class ColourRgbList:PresentationItem{//==================================================================
public               ColourRgbList():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ColourList"><para>List1toUnbounded_List3to3_NormalisedRatioMeasure</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ColourRgbList(List1toUnbounded_List3to3_NormalisedRatioMeasure ColourList,string EndOfLineComment=null):base(){AddNext();this.ColourList=ColourList;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public List1toUnbounded_List3to3_NormalisedRatioMeasure ColourList; //ListType2d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ColourRgb(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 583,TableId:3)] public partial class ColourSpecification:PresentationItem{//============================================================
public               ColourSpecification():base(){}// abstract
[ifc(1,optional=true)] public Label Name; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifccolumn.htm
[ifcSql(TypeGroupId:5,TypeId: 584,TableId:3)] public partial class Column:BuildingElement{//==========================================================================
public               Column():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>ColumnTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Column(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,ColumnTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public ColumnTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifccolumntype.htm
[ifcSql(TypeGroupId:5,TypeId: 586,TableId:3)] public partial class ColumnType:BuildingElementType{//==================================================================
public               ColumnType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>ColumnTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ColumnType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,ColumnTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               ColumnType(ColumnTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public ColumnTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpropertyresource/lexical/ifccomplexproperty.htm
[ifcSql(TypeGroupId:5,TypeId: 589,TableId:3)] public partial class ComplexProperty:Property{//========================================================================
public               ComplexProperty():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name"><para>cast to (ifc.Identifier)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="UsageName"><para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasProperties"><para>Set1toUnbounded_Property</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ComplexProperty(Identifier Name,Text Description,Identifier UsageName,Set1toUnbounded_Property HasProperties,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.UsageName=UsageName;this.HasProperties=HasProperties;this.EndOfLineComment=EndOfLineComment;}
public               ComplexProperty(Identifier Name,Identifier UsageName,Set1toUnbounded_Property HasProperties):base(){AddNext();this.Name=Name;this.UsageName=UsageName;this.HasProperties=HasProperties;}
[ifc(3)] public Identifier UsageName; //TYPE
[ifc(4)] public Set1toUnbounded_Property HasProperties; //ListType1d
public override void AssignInverseElements(){if (HasProperties!=null) foreach (Property __Property in HasProperties) if (__Property is Property) {if (((Property)__Property).PartOfComplex==null) ((Property)__Property).PartOfComplex=new LIST<ComplexProperty>();((Property)__Property).PartOfComplex.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifckernel/lexical/ifccomplexpropertytemplate.htm
[ifcSql(TypeGroupId:5,TypeId: 590,TableId:3)] public partial class ComplexPropertyTemplate:PropertyTemplate{//========================================================
public               ComplexPropertyTemplate():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="UsageName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="TemplateType">[optional]<para>ComplexPropertyTemplateTypeEnum</para></param>
/// <param name="HasPropertyTemplates">[optional]<para>Set1toUnbounded_PropertyTemplate</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ComplexPropertyTemplate(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label UsageName=null,ComplexPropertyTemplateTypeEnum? TemplateType=null,Set1toUnbounded_PropertyTemplate HasPropertyTemplates=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.UsageName=UsageName;this.TemplateType=TemplateType;this.HasPropertyTemplates=HasPropertyTemplates;this.EndOfLineComment=EndOfLineComment;}
[ifc(5,optional=true)] public Label UsageName; //TYPE
[ifc(6,optional=true)] public ComplexPropertyTemplateTypeEnum? TemplateType; //ENUM
[ifc(7,optional=true)] public Set1toUnbounded_PropertyTemplate HasPropertyTemplates; //ListType1d
public override void AssignInverseElements(){if (HasPropertyTemplates!=null) foreach (PropertyTemplate __PropertyTemplate in HasPropertyTemplates) if (__PropertyTemplate is PropertyTemplate) {if (((PropertyTemplate)__PropertyTemplate).PartOfComplexTemplate==null) ((PropertyTemplate)__PropertyTemplate).PartOfComplexTemplate=new LIST<ComplexPropertyTemplate>();((PropertyTemplate)__PropertyTemplate).PartOfComplexTemplate.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.CompositeCurveOnSurface(...)</para><para>new ifc.2DCompositeCurve(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometryresource/lexical/ifccompositecurve.htm
[ifcSql(TypeGroupId:5,TypeId: 591,TableId:3)] public partial class CompositeCurve:BoundedCurve{//=====================================================================
public               CompositeCurve():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Segments"><para>List1toUnbounded_CompositeCurveSegment</para></param>
/// <param name="SelfIntersect"><para>cast to (ifc.Logical)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CompositeCurve(List1toUnbounded_CompositeCurveSegment Segments,Logical SelfIntersect,string EndOfLineComment=null):base(){AddNext();this.Segments=Segments;this.SelfIntersect=SelfIntersect;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public List1toUnbounded_CompositeCurveSegment Segments; //ListType1d
[ifc(2)] public Logical SelfIntersect; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.BoundaryCurve(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometryresource/lexical/ifccompositecurveonsurface.htm
[ifcSql(TypeGroupId:5,TypeId: 592,TableId:3)] public partial class CompositeCurveOnSurface:CompositeCurve{//==========================================================
public               CompositeCurveOnSurface():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Segments"><para>List1toUnbounded_CompositeCurveSegment</para></param>
/// <param name="SelfIntersect"><para>cast to (ifc.Logical)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CompositeCurveOnSurface(List1toUnbounded_CompositeCurveSegment Segments,Logical SelfIntersect,string EndOfLineComment=null):base(){AddNext();this.Segments=Segments;this.SelfIntersect=SelfIntersect;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometryresource/lexical/ifccompositecurvesegment.htm
[ifcSql(TypeGroupId:5,TypeId: 593,TableId:3)] public partial class CompositeCurveSegment:GeometricRepresentationItem{//===============================================
public               CompositeCurveSegment():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Transition"><para>TransitionCode</para></param>
/// <param name="SameSense"><para>cast to (ifc.Boolean)...</para></param>
/// <param name="ParentCurve"><para>new ifc.BezierCurve(...)</para><para>new ifc.CompositeCurve(...)</para><para>new ifc.CompositeCurveOnSurface(...)</para><para>new ifc.BoundaryCurve(...)</para><para>new ifc.2DCompositeCurve(...)</para><para>new ifc.Polyline(...)</para><para>new ifc.TrimmedCurve(...)</para><para>new ifc.Circle(...)</para><para>new ifc.Ellipse(...)</para><para>new ifc.Line(...)</para><para>new ifc.OffsetCurve2D(...)</para><para>new ifc.OffsetCurve3D(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CompositeCurveSegment(TransitionCode Transition,Boolean SameSense,Curve ParentCurve,string EndOfLineComment=null):base(){AddNext();this.Transition=Transition;this.SameSense=SameSense;this.ParentCurve=ParentCurve;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public TransitionCode Transition; //ENUM
[ifc(2)] public Boolean SameSense; //TYPE
[ifc(3)] public Curve ParentCurve; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcprofileresource/lexical/ifccompositeprofiledef.htm
[ifcSql(TypeGroupId:5,TypeId: 594,TableId:3)] public partial class CompositeProfileDef:ProfileDef{//==================================================================
public               CompositeProfileDef():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ProfileType"><para>ProfileTypeEnum</para></param>
/// <param name="ProfileName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Profiles"><para>Set2toUnbounded_ProfileDef</para></param>
/// <param name="Label">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CompositeProfileDef(ProfileTypeEnum ProfileType,Label ProfileName,Set2toUnbounded_ProfileDef Profiles,Label Label=null,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.ProfileName=ProfileName;this.Profiles=Profiles;this.Label=Label;this.EndOfLineComment=EndOfLineComment;}
public               CompositeProfileDef(ProfileTypeEnum ProfileType,Set2toUnbounded_ProfileDef Profiles,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.Profiles=Profiles;this.EndOfLineComment=EndOfLineComment;}
[ifc(3)] public Set2toUnbounded_ProfileDef Profiles; //ListType1d
[ifc(4,optional=true)] public Label Label; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifccompressortype.htm
[ifcSql(TypeGroupId:5,TypeId: 596,TableId:3)] public partial class CompressorType:FlowMovingDeviceType{//=============================================================
public               CompressorType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>CompressorTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CompressorType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,CompressorTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               CompressorType(CompressorTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public CompressorTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifccondensertype.htm
[ifcSql(TypeGroupId:5,TypeId: 598,TableId:3)] public partial class CondenserType:EnergyConversionDeviceType{//========================================================
public               CondenserType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>CondenserTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CondenserType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,CondenserTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               CondenserType(CondenserTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public CondenserTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.Circle(...)</para><para>new ifc.Ellipse(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 599,TableId:3)] public partial class Conic:Curve{//=====================================================================================
public               Conic():base(){}// abstract
[ifc(1)] public Axis2Placement Position; //SELECT
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ClosedShell(...)</para><para>new ifc.OpenShell(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifctopologyresource/lexical/ifcconnectedfaceset.htm
[ifcSql(TypeGroupId:5,TypeId: 600,TableId:3)] public partial class ConnectedFaceSet:TopologicalRepresentationItem{//==================================================
public               ConnectedFaceSet():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="CfsFaces"><para>Set1toUnbounded_Face</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ConnectedFaceSet(Set1toUnbounded_Face CfsFaces,string EndOfLineComment=null):base(){AddNext();this.CfsFaces=CfsFaces;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Set1toUnbounded_Face CfsFaces; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricconstraintresource/lexical/ifcconnectioncurvegeometry.htm
[ifcSql(TypeGroupId:5,TypeId: 601,TableId:3)] public partial class ConnectionCurveGeometry:ConnectionGeometry{//======================================================
public               ConnectionCurveGeometry():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="CurveOnRelatingElement"><para>new ifc.CurveOrEdgeCurve(new BoundedCurve(...))...</para><para>new ifc.CurveOrEdgeCurve(new EdgeCurve(...))...</para></param>
/// <param name="CurveOnRelatedElement">[optional]<para>new ifc.CurveOrEdgeCurve(new BoundedCurve(...))...</para><para>new ifc.CurveOrEdgeCurve(new EdgeCurve(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ConnectionCurveGeometry(CurveOrEdgeCurve CurveOnRelatingElement,CurveOrEdgeCurve CurveOnRelatedElement=null,string EndOfLineComment=null):base(){AddNext();this.CurveOnRelatingElement=CurveOnRelatingElement;this.CurveOnRelatedElement=CurveOnRelatedElement;this.EndOfLineComment=EndOfLineComment;}
public               ConnectionCurveGeometry(CurveOrEdgeCurve CurveOnRelatingElement):base(){AddNext();this.CurveOnRelatingElement=CurveOnRelatingElement;}
[ifc(1)] public CurveOrEdgeCurve CurveOnRelatingElement; //SELECT
[ifc(2,optional=true)] public CurveOrEdgeCurve CurveOnRelatedElement; //SELECT
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ConnectionCurveGeometry(...)</para><para>new ifc.ConnectionPointGeometry(...)</para><para>new ifc.ConnectionSurfaceGeometry(...)</para><para>new ifc.ConnectionPortGeometry(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 602,TableId:3)] public partial class ConnectionGeometry:ENTITY{//=======================================================================
public               ConnectionGeometry():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricconstraintresource/lexical/ifcconnectionpointeccentricity.htm
[ifcSql(TypeGroupId:5,TypeId: 603,TableId:3)] public partial class ConnectionPointEccentricity:ConnectionPointGeometry{//=============================================
public               ConnectionPointEccentricity():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="PointOnRelatingElement"><para>new ifc.PointOrVertexPoint(new Point(...))...</para><para>new ifc.PointOrVertexPoint(new VertexPoint(...))...</para></param>
/// <param name="PointOnRelatedElement">[optional]<para>new ifc.PointOrVertexPoint(new Point(...))...</para><para>new ifc.PointOrVertexPoint(new VertexPoint(...))...</para></param>
/// <param name="EccentricityInX">[optional]<para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="EccentricityInY">[optional]<para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="EccentricityInZ">[optional]<para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ConnectionPointEccentricity(PointOrVertexPoint PointOnRelatingElement,PointOrVertexPoint PointOnRelatedElement=null,LengthMeasure EccentricityInX=null,LengthMeasure EccentricityInY=null,LengthMeasure EccentricityInZ=null,string EndOfLineComment=null):base(){AddNext();this.PointOnRelatingElement=PointOnRelatingElement;this.PointOnRelatedElement=PointOnRelatedElement;this.EccentricityInX=EccentricityInX;this.EccentricityInY=EccentricityInY;this.EccentricityInZ=EccentricityInZ;this.EndOfLineComment=EndOfLineComment;}
public               ConnectionPointEccentricity(PointOrVertexPoint PointOnRelatingElement,string EndOfLineComment=null):base(){AddNext();this.PointOnRelatingElement=PointOnRelatingElement;this.EndOfLineComment=EndOfLineComment;}
[ifc(3,optional=true)] public LengthMeasure EccentricityInX; //TYPE
[ifc(4,optional=true)] public LengthMeasure EccentricityInY; //TYPE
[ifc(5,optional=true)] public LengthMeasure EccentricityInZ; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ConnectionPointEccentricity(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricconstraintresource/lexical/ifcconnectionpointgeometry.htm
[ifcSql(TypeGroupId:5,TypeId: 604,TableId:3)] public partial class ConnectionPointGeometry:ConnectionGeometry{//======================================================
public               ConnectionPointGeometry():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="PointOnRelatingElement"><para>new ifc.PointOrVertexPoint(new Point(...))...</para><para>new ifc.PointOrVertexPoint(new VertexPoint(...))...</para></param>
/// <param name="PointOnRelatedElement">[optional]<para>new ifc.PointOrVertexPoint(new Point(...))...</para><para>new ifc.PointOrVertexPoint(new VertexPoint(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ConnectionPointGeometry(PointOrVertexPoint PointOnRelatingElement,PointOrVertexPoint PointOnRelatedElement=null,string EndOfLineComment=null):base(){AddNext();this.PointOnRelatingElement=PointOnRelatingElement;this.PointOnRelatedElement=PointOnRelatedElement;this.EndOfLineComment=EndOfLineComment;}
public               ConnectionPointGeometry(PointOrVertexPoint PointOnRelatingElement):base(){AddNext();this.PointOnRelatingElement=PointOnRelatingElement;}
[ifc(1)] public PointOrVertexPoint PointOnRelatingElement; //SELECT
[ifc(2,optional=true)] public PointOrVertexPoint PointOnRelatedElement; //SELECT
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricconstraintresource/lexical/ifcconnectionsurfacegeometry.htm
[ifcSql(TypeGroupId:5,TypeId: 605,TableId:3)] public partial class ConnectionSurfaceGeometry:ConnectionGeometry{//====================================================
public               ConnectionSurfaceGeometry():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="SurfaceOnRelatingElement"><para>new ifc.SurfaceOrFaceSurface(new FaceBasedSurfaceModel(...))...</para><para>new ifc.SurfaceOrFaceSurface(new FaceSurface(...))...</para><para>new ifc.SurfaceOrFaceSurface(new Surface(...))...</para></param>
/// <param name="SurfaceOnRelatedElement">[optional]<para>new ifc.SurfaceOrFaceSurface(new FaceBasedSurfaceModel(...))...</para><para>new ifc.SurfaceOrFaceSurface(new FaceSurface(...))...</para><para>new ifc.SurfaceOrFaceSurface(new Surface(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ConnectionSurfaceGeometry(SurfaceOrFaceSurface SurfaceOnRelatingElement,SurfaceOrFaceSurface SurfaceOnRelatedElement=null,string EndOfLineComment=null):base(){AddNext();this.SurfaceOnRelatingElement=SurfaceOnRelatingElement;this.SurfaceOnRelatedElement=SurfaceOnRelatedElement;this.EndOfLineComment=EndOfLineComment;}
public               ConnectionSurfaceGeometry(SurfaceOrFaceSurface SurfaceOnRelatingElement):base(){AddNext();this.SurfaceOnRelatingElement=SurfaceOnRelatingElement;}
[ifc(1)] public SurfaceOrFaceSurface SurfaceOnRelatingElement; //SELECT
[ifc(2,optional=true)] public SurfaceOrFaceSurface SurfaceOnRelatedElement; //SELECT
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.Metric(...)</para><para>new ifc.Objective(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 607,TableId:3)] public partial class Constraint:ENTITY{//===============================================================================
public               Constraint():base(){}// abstract
[ifc(1)] public Label Name; //TYPE
[ifc(2,optional=true)] public Text Description; //TYPE
[ifc(3)] public ConstraintEnum ConstraintGrade; //ENUM
[ifc(4,optional=true)] public Label ConstraintSource; //TYPE
[ifc(5,optional=true)] public ActorSelect CreatingActor; //SELECT
[ifc(6,optional=true)] public DateTime CreationTime; //TYPE
[ifc(7,optional=true)] public Label UserDefinedGrade; //TYPE
/// <summary>INVERSE: HasExternalReferences of ExternalReferenceRelationship for RelatedResourceObjects</summary>
[ifcInverse(For:"RelatedResourceObjects")] public LIST<ExternalReferenceRelationship> HasExternalReferences;
/// <summary>INVERSE: PropertiesForConstraint of ResourceConstraintRelationship for RelatingConstraint</summary>
[ifcInverse(For:"RelatingConstraint")] public LIST<ResourceConstraintRelationship> PropertiesForConstraint;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcconstructionmgmtdomain/lexical/ifcconstructionequipmentresource.htm
[ifcSql(TypeGroupId:5,TypeId: 608,TableId:3)] public partial class ConstructionEquipmentResource:ConstructionResource{//==============================================
public               ConstructionEquipmentResource():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Identification">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="LongDescription">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="Usage">[optional]<para>new ifc.ResourceTime(...)</para></param>
/// <param name="BaseCosts">[optional]<para>List1toUnbounded_AppliedValue</para></param>
/// <param name="BaseQuantity">[optional]<para>new ifc.PhysicalComplexQuantity(...)</para></param>
/// <param name="PredefinedType">[optional]<para>ConstructionEquipmentResourceTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ConstructionEquipmentResource(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,Identifier Identification=null,Text LongDescription=null,ResourceTime Usage=null,List1toUnbounded_AppliedValue BaseCosts=null,PhysicalQuantity BaseQuantity=null,ConstructionEquipmentResourceTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.Identification=Identification;this.LongDescription=LongDescription;this.Usage=Usage;this.BaseCosts=BaseCosts;this.BaseQuantity=BaseQuantity;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(11,optional=true)] public ConstructionEquipmentResourceTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcconstructionmgmtdomain/lexical/ifcconstructionequipmentresourcetype.htm
[ifcSql(TypeGroupId:5,TypeId: 609,TableId:3)] public partial class ConstructionEquipmentResourceType:ConstructionResourceType{//======================================
public               ConstructionEquipmentResourceType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="Identification">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="LongDescription">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ResourceType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="BaseCosts">[optional]<para>List1toUnbounded_AppliedValue</para></param>
/// <param name="BaseQuantity">[optional]<para>new ifc.PhysicalComplexQuantity(...)</para></param>
/// <param name="PredefinedType"><para>ConstructionEquipmentResourceTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ConstructionEquipmentResourceType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,Identifier Identification,Text LongDescription,Label ResourceType,List1toUnbounded_AppliedValue BaseCosts,PhysicalQuantity BaseQuantity,ConstructionEquipmentResourceTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.Identification=Identification;this.LongDescription=LongDescription;this.ResourceType=ResourceType;this.BaseCosts=BaseCosts;this.BaseQuantity=BaseQuantity;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               ConstructionEquipmentResourceType(ConstructionEquipmentResourceTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(12)] public ConstructionEquipmentResourceTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcconstructionmgmtdomain/lexical/ifcconstructionmaterialresource.htm
[ifcSql(TypeGroupId:5,TypeId: 610,TableId:3)] public partial class ConstructionMaterialResource:ConstructionResource{//===============================================
public               ConstructionMaterialResource():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Identification">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="LongDescription">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="Usage">[optional]<para>new ifc.ResourceTime(...)</para></param>
/// <param name="BaseCosts">[optional]<para>List1toUnbounded_AppliedValue</para></param>
/// <param name="BaseQuantity">[optional]<para>new ifc.PhysicalComplexQuantity(...)</para></param>
/// <param name="PredefinedType">[optional]<para>ConstructionMaterialResourceTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ConstructionMaterialResource(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,Identifier Identification=null,Text LongDescription=null,ResourceTime Usage=null,List1toUnbounded_AppliedValue BaseCosts=null,PhysicalQuantity BaseQuantity=null,ConstructionMaterialResourceTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.Identification=Identification;this.LongDescription=LongDescription;this.Usage=Usage;this.BaseCosts=BaseCosts;this.BaseQuantity=BaseQuantity;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(11,optional=true)] public ConstructionMaterialResourceTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcconstructionmgmtdomain/lexical/ifcconstructionproductresource.htm
[ifcSql(TypeGroupId:5,TypeId: 612,TableId:3)] public partial class ConstructionProductResource:ConstructionResource{//================================================
public               ConstructionProductResource():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Identification">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="LongDescription">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="Usage">[optional]<para>new ifc.ResourceTime(...)</para></param>
/// <param name="BaseCosts">[optional]<para>List1toUnbounded_AppliedValue</para></param>
/// <param name="BaseQuantity">[optional]<para>new ifc.PhysicalComplexQuantity(...)</para></param>
/// <param name="PredefinedType">[optional]<para>ConstructionProductResourceTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ConstructionProductResource(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,Identifier Identification=null,Text LongDescription=null,ResourceTime Usage=null,List1toUnbounded_AppliedValue BaseCosts=null,PhysicalQuantity BaseQuantity=null,ConstructionProductResourceTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.Identification=Identification;this.LongDescription=LongDescription;this.Usage=Usage;this.BaseCosts=BaseCosts;this.BaseQuantity=BaseQuantity;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(11,optional=true)] public ConstructionProductResourceTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ConstructionEquipmentResource(...)</para><para>new ifc.ConstructionMaterialResource(...)</para><para>new ifc.ConstructionProductResource(...)</para><para>new ifc.CrewResource(...)</para><para>new ifc.LaborResource(...)</para><para>new ifc.SubContractResource(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 614,TableId:3)] public partial class ConstructionResource:Resource{//===================================================================
public               ConstructionResource():base(){}// abstract
[ifc(8,optional=true)] public ResourceTime Usage; //ENTITY
[ifc(9,optional=true)] public List1toUnbounded_AppliedValue BaseCosts; //ListType1d
[ifc(10,optional=true)] public PhysicalQuantity BaseQuantity; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ConstructionEquipmentResourceType(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 615,TableId:3)] public partial class ConstructionResourceType:TypeResource{//===========================================================
public               ConstructionResourceType():base(){}// abstract
[ifc(10,optional=true)] public List1toUnbounded_AppliedValue BaseCosts; //ListType1d
[ifc(11,optional=true)] public PhysicalQuantity BaseQuantity; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.Project(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 616,TableId:3)] public partial class Context:ObjectDefinition{//========================================================================
public               Context():base(){}// abstract
[ifc(5,optional=true)] public Label ObjectType; //TYPE
[ifc(6,optional=true)] public Label LongName; //TYPE
[ifc(7,optional=true)] public Label Phase; //TYPE
[ifc(8,optional=true)] public Set1toUnbounded_RepresentationContext RepresentationContexts; //ListType1d
[ifc(9,optional=true)] public UnitAssignment UnitsInContext; //ENTITY
/// <summary>INVERSE: Declares of RelDeclares for RelatingContext</summary>
[ifcInverse(For:"RelatingContext")] public LIST<RelDeclares> Declares;
/// <summary>INVERSE: IsDefinedBy of RelDefinesByProperties for RelatedObjects</summary>
[ifcInverse(For:"RelatedObjects")] public LIST<RelDefinesByProperties> IsDefinedBy;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcmeasureresource/lexical/ifccontextdependentunit.htm
[ifcSql(TypeGroupId:5,TypeId: 617,TableId:3)] public partial class ContextDependentUnit:NamedUnit{//==================================================================
public               ContextDependentUnit():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Dimensions"><para>new ifc.DimensionalExponents(...)</para></param>
/// <param name="UnitType"><para>UnitEnum</para></param>
/// <param name="Name"><para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ContextDependentUnit(DimensionalExponents Dimensions,UnitEnum UnitType,Label Name,string EndOfLineComment=null):base(){AddNext();this.Dimensions=Dimensions;this.UnitType=UnitType;this.Name=Name;this.EndOfLineComment=EndOfLineComment;}
[ifc(3)] public Label Name; //TYPE
/// <summary>INVERSE: HasExternalReference of ExternalReferenceRelationship for RelatedResourceObjects</summary>
[ifcInverse(For:"RelatedResourceObjects")] public LIST<ExternalReferenceRelationship> HasExternalReference;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ActionRequest(...)</para><para>new ifc.CostItem(...)</para><para>new ifc.CostSchedule(...)</para><para>new ifc.PerformanceHistory(...)</para><para>new ifc.Permit(...)</para><para>new ifc.ProjectOrder(...)</para><para>new ifc.WorkControl(...)</para><para>new ifc.ConditionCriterion(...)</para><para>new ifc.EquipmentStandard(...)</para><para>new ifc.FurnitureStandard(...)</para><para>new ifc.ProjectOrderRecord(...)</para><para>new ifc.ScheduleTimeControl(...)</para><para>new ifc.ServiceLife(...)</para><para>new ifc.SpaceProgram(...)</para><para>new ifc.TimeSeriesSchedule(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 618,TableId:3)] public partial class Control:Object{//==================================================================================
public               Control():base(){}// abstract
[ifc(6,optional=true)] public Identifier Identification; //TYPE
/// <summary>INVERSE: Controls of RelAssignsToControl for RelatingControl</summary>
[ifcInverse(For:"RelatingControl")] public LIST<RelAssignsToControl> Controls;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcbuildingcontrolsdomain/lexical/ifccontrollertype.htm
[ifcSql(TypeGroupId:5,TypeId: 620,TableId:3)] public partial class ControllerType:DistributionControlElementType{//===================================================
public               ControllerType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>ControllerTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ControllerType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,ControllerTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               ControllerType(ControllerTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public ControllerTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcmeasureresource/lexical/ifcconversionbasedunit.htm
[ifcSql(TypeGroupId:5,TypeId: 621,TableId:3)] public partial class ConversionBasedUnit:NamedUnit{//===================================================================
public               ConversionBasedUnit():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Dimensions"><para>new ifc.DimensionalExponents(...)</para></param>
/// <param name="UnitType"><para>UnitEnum</para></param>
/// <param name="Name"><para>cast to (ifc.Label)...</para></param>
/// <param name="ConversionFactor"><para>new ifc.MeasureWithUnit(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ConversionBasedUnit(DimensionalExponents Dimensions,UnitEnum UnitType,Label Name,MeasureWithUnit ConversionFactor,string EndOfLineComment=null):base(){AddNext();this.Dimensions=Dimensions;this.UnitType=UnitType;this.Name=Name;this.ConversionFactor=ConversionFactor;this.EndOfLineComment=EndOfLineComment;}
[ifc(3)] public Label Name; //TYPE
[ifc(4)] public MeasureWithUnit ConversionFactor; //ENTITY
/// <summary>INVERSE: HasExternalReference of ExternalReferenceRelationship for RelatedResourceObjects</summary>
[ifcInverse(For:"RelatedResourceObjects")] public LIST<ExternalReferenceRelationship> HasExternalReference;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifccooledbeamtype.htm
[ifcSql(TypeGroupId:5,TypeId: 624,TableId:3)] public partial class CooledBeamType:EnergyConversionDeviceType{//=======================================================
public               CooledBeamType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>CooledBeamTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CooledBeamType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,CooledBeamTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               CooledBeamType(CooledBeamTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public CooledBeamTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifccoolingtowertype.htm
[ifcSql(TypeGroupId:5,TypeId: 626,TableId:3)] public partial class CoolingTowerType:EnergyConversionDeviceType{//=====================================================
public               CoolingTowerType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>CoolingTowerTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CoolingTowerType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,CoolingTowerTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               CoolingTowerType(CoolingTowerTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public CoolingTowerTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 627,TableId:3)] public partial class CoordinateOperation:ENTITY{//======================================================================
public               CoordinateOperation():base(){}// abstract
[ifc(1)] public CoordinateReferenceSystemSelect SourceCRS; //SELECT
[ifc(2)] public CoordinateReferenceSystem TargetCRS; //ENTITY
public override void AssignInverseElements(){if (SourceCRS!=null) if (SourceCRS.SelectType()==typeof(CoordinateReferenceSystem)) ((CoordinateReferenceSystem)SourceCRS).HasCoordinateOperation=this;
                                             if (SourceCRS!=null) if (SourceCRS.SelectType()==typeof(GeometricRepresentationContext)) ((GeometricRepresentationContext)SourceCRS).HasCoordinateOperation=this;
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 628,TableId:3)] public partial class CoordinateReferenceSystem:ENTITY{//================================================================
public               CoordinateReferenceSystem():base(){}// abstract
[ifc(1)] public Label Name; //TYPE
[ifc(2,optional=true)] public Text Description; //TYPE
[ifc(3,optional=true)] public Identifier GeodeticDatum; //TYPE
[ifc(4,optional=true)] public Identifier VerticalDatum; //TYPE
/// <summary>INVERSE: HasCoordinateOperation of CoordinateOperation for SourceCRS</summary>
[ifcInverse(For:"SourceCRS")] public CoordinateOperation HasCoordinateOperation;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedmgmtelements/lexical/ifccostitem.htm
[ifcSql(TypeGroupId:5,TypeId: 629,TableId:3)] public partial class CostItem:Control{//================================================================================
public               CostItem():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Identification">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>CostItemTypeEnum</para></param>
/// <param name="CostValues">[optional]<para>List1toUnbounded_CostValue</para></param>
/// <param name="CostQuantities">[optional]<para>List1toUnbounded_PhysicalQuantity</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CostItem(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,Identifier Identification=null,CostItemTypeEnum? PredefinedType=null,List1toUnbounded_CostValue CostValues=null,List1toUnbounded_PhysicalQuantity CostQuantities=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.Identification=Identification;this.PredefinedType=PredefinedType;this.CostValues=CostValues;this.CostQuantities=CostQuantities;this.EndOfLineComment=EndOfLineComment;}
[ifc(7,optional=true)] public CostItemTypeEnum? PredefinedType; //ENUM
[ifc(8,optional=true)] public List1toUnbounded_CostValue CostValues; //ListType1d
[ifc(9,optional=true)] public List1toUnbounded_PhysicalQuantity CostQuantities; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedmgmtelements/lexical/ifccostschedule.htm
[ifcSql(TypeGroupId:5,TypeId: 630,TableId:3)] public partial class CostSchedule:Control{//============================================================================
public               CostSchedule():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Identification">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>CostScheduleTypeEnum</para></param>
/// <param name="Status">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="SubmittedOn">[optional]<para>cast to (ifc.DateTime)...</para></param>
/// <param name="UpdateDate">[optional]<para>cast to (ifc.DateTime)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CostSchedule(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,Identifier Identification=null,CostScheduleTypeEnum? PredefinedType=null,Label Status=null,DateTime SubmittedOn=null,DateTime UpdateDate=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.Identification=Identification;this.PredefinedType=PredefinedType;this.Status=Status;this.SubmittedOn=SubmittedOn;this.UpdateDate=UpdateDate;this.EndOfLineComment=EndOfLineComment;}
[ifc(7,optional=true)] public CostScheduleTypeEnum? PredefinedType; //ENUM
[ifc(8,optional=true)] public Label Status; //TYPE
[ifc(9,optional=true)] public DateTime SubmittedOn; //TYPE
[ifc(10,optional=true)] public DateTime UpdateDate; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifccostresource/lexical/ifccostvalue.htm
[ifcSql(TypeGroupId:5,TypeId: 631,TableId:3)] public partial class CostValue:AppliedValue{//==========================================================================
public               CostValue():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="_AppliedValue">[optional]<para>new ifc.AppliedValueSelect(new AbsorbedDoseMeasure(...))...</para><para>new ifc.AppliedValueSelect(new AccelerationMeasure(...))...</para><para>new ifc.AppliedValueSelect(new AmountOfSubstanceMeasure(...))...</para><para>new ifc.AppliedValueSelect(new AngularVelocityMeasure(...))...</para><para>new ifc.AppliedValueSelect(new AreaDensityMeasure(...))...</para><para>new ifc.AppliedValueSelect(new AreaMeasure(...))...</para><para>new ifc.AppliedValueSelect(new Boolean(...))...</para><para>new ifc.AppliedValueSelect(new ComplexNumber(...))...</para><para>new ifc.AppliedValueSelect(new CompoundPlaneAngleMeasure(...))...</para><para>new ifc.AppliedValueSelect(new ContextDependentMeasure(...))...</para><para>new ifc.AppliedValueSelect(new CountMeasure(...))...</para><para>new ifc.AppliedValueSelect(new CurvatureMeasure(...))...</para><para>new ifc.AppliedValueSelect(new Date(...))...</para><para>new ifc.AppliedValueSelect(new DateTime(...))...</para><para>new ifc.AppliedValueSelect(new DescriptiveMeasure(...))...</para><para>new ifc.AppliedValueSelect(new DoseEquivalentMeasure(...))...</para><para>new ifc.AppliedValueSelect(new Duration(...))...</para><para>new ifc.AppliedValueSelect(new DynamicViscosityMeasure(...))...</para><para>new ifc.AppliedValueSelect(new ElectricCapacitanceMeasure(...))...</para><para>... (and more [truncated]) ...</para></param>
/// <param name="UnitBasis">[optional]<para>new ifc.MeasureWithUnit(...)</para></param>
/// <param name="ApplicableDate">[optional]<para>cast to (ifc.Date)...</para></param>
/// <param name="FixedUntilDate">[optional]<para>cast to (ifc.Date)...</para></param>
/// <param name="Category">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_Condition">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="ArithmeticOperator">[optional]<para>ArithmeticOperatorEnum</para></param>
/// <param name="Components">[optional]<para>List1toUnbounded_AppliedValue</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CostValue(Label Name=null,Text Description=null,AppliedValueSelect _AppliedValue=null,MeasureWithUnit UnitBasis=null,Date ApplicableDate=null,Date FixedUntilDate=null,Label Category=null,Label _Condition=null,ArithmeticOperatorEnum? ArithmeticOperator=null,List1toUnbounded_AppliedValue Components=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this._AppliedValue=_AppliedValue;this.UnitBasis=UnitBasis;this.ApplicableDate=ApplicableDate;this.FixedUntilDate=FixedUntilDate;this.Category=Category;this._Condition=_Condition;this.ArithmeticOperator=ArithmeticOperator;this.Components=Components;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifccovering.htm
[ifcSql(TypeGroupId:5,TypeId: 632,TableId:3)] public partial class Covering:BuildingElement{//========================================================================
public               Covering():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>CoveringTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Covering(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,CoveringTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public CoveringTypeEnum? PredefinedType; //ENUM
/// <summary>INVERSE: CoversElements of RelCoversBldgElements for RelatedCoverings</summary>
[ifcInverse(For:"RelatedCoverings")] public RelCoversBldgElements CoversElements;
/// <summary>INVERSE: CoversSpaces of RelCoversSpaces for RelatedCoverings</summary>
[ifcInverse(For:"RelatedCoverings")] public RelCoversSpaces CoversSpaces;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifccoveringtype.htm
[ifcSql(TypeGroupId:5,TypeId: 633,TableId:3)] public partial class CoveringType:BuildingElementType{//================================================================
public               CoveringType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>CoveringTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CoveringType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,CoveringTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               CoveringType(CoveringTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public CoveringTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcconstructionmgmtdomain/lexical/ifccrewresource.htm
[ifcSql(TypeGroupId:5,TypeId: 634,TableId:3)] public partial class CrewResource:ConstructionResource{//===============================================================
public               CrewResource():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Identification">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="LongDescription">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="Usage">[optional]<para>new ifc.ResourceTime(...)</para></param>
/// <param name="BaseCosts">[optional]<para>List1toUnbounded_AppliedValue</para></param>
/// <param name="BaseQuantity">[optional]<para>new ifc.PhysicalComplexQuantity(...)</para></param>
/// <param name="PredefinedType">[optional]<para>CrewResourceTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CrewResource(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,Identifier Identification=null,Text LongDescription=null,ResourceTime Usage=null,List1toUnbounded_AppliedValue BaseCosts=null,PhysicalQuantity BaseQuantity=null,CrewResourceTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.Identification=Identification;this.LongDescription=LongDescription;this.Usage=Usage;this.BaseCosts=BaseCosts;this.BaseQuantity=BaseQuantity;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(11,optional=true)] public CrewResourceTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.Block(...)</para><para>new ifc.RectangularPyramid(...)</para><para>new ifc.RightCircularCone(...)</para><para>new ifc.RightCircularCylinder(...)</para><para>new ifc.Sphere(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 636,TableId:3)] public partial class CsgPrimitive3D:GeometricRepresentationItem{//======================================================
public               CsgPrimitive3D():base(){}// abstract
[ifc(1)] public Axis2Placement3D Position; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricmodelresource/lexical/ifccsgsolid.htm
[ifcSql(TypeGroupId:5,TypeId: 637,TableId:3)] public partial class CsgSolid:SolidModel{//=============================================================================
public               CsgSolid():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="TreeRootExpression"><para>new ifc.CsgSelect(new BooleanResult(...))...</para><para>new ifc.CsgSelect(new CsgPrimitive3D(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CsgSolid(CsgSelect TreeRootExpression,string EndOfLineComment=null):base(){AddNext();this.TreeRootExpression=TreeRootExpression;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public CsgSelect TreeRootExpression; //SELECT
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifccostresource/lexical/ifccurrencyrelationship.htm
[ifcSql(TypeGroupId:5,TypeId: 638,TableId:3)] public partial class CurrencyRelationship:ResourceLevelRelationship{//==================================================
public               CurrencyRelationship():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatingMonetaryUnit"><para>new ifc.MonetaryUnit(...)</para></param>
/// <param name="RelatedMonetaryUnit"><para>new ifc.MonetaryUnit(...)</para></param>
/// <param name="ExchangeRate"><para>cast to (ifc.PositiveRatioMeasure)...</para></param>
/// <param name="RateDateTime">[optional]<para>cast to (ifc.DateTime)...</para></param>
/// <param name="RateSource">[optional]<para>new ifc.LibraryInformation(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CurrencyRelationship(Label Name,Text Description,MonetaryUnit RelatingMonetaryUnit,MonetaryUnit RelatedMonetaryUnit,PositiveRatioMeasure ExchangeRate,DateTime RateDateTime=null,LibraryInformation RateSource=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.RelatingMonetaryUnit=RelatingMonetaryUnit;this.RelatedMonetaryUnit=RelatedMonetaryUnit;this.ExchangeRate=ExchangeRate;this.RateDateTime=RateDateTime;this.RateSource=RateSource;this.EndOfLineComment=EndOfLineComment;}
public               CurrencyRelationship(MonetaryUnit RelatingMonetaryUnit,MonetaryUnit RelatedMonetaryUnit,PositiveRatioMeasure ExchangeRate,string EndOfLineComment=null):base(){AddNext();this.RelatingMonetaryUnit=RelatingMonetaryUnit;this.RelatedMonetaryUnit=RelatedMonetaryUnit;this.ExchangeRate=ExchangeRate;this.EndOfLineComment=EndOfLineComment;}
[ifc(3)] public MonetaryUnit RelatingMonetaryUnit; //ENTITY
[ifc(4)] public MonetaryUnit RelatedMonetaryUnit; //ENTITY
[ifc(5)] public PositiveRatioMeasure ExchangeRate; //TYPE
[ifc(6,optional=true)] public DateTime RateDateTime; //TYPE
[ifc(7,optional=true)] public LibraryInformation RateSource; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifccurtainwall.htm
[ifcSql(TypeGroupId:5,TypeId: 639,TableId:3)] public partial class CurtainWall:BuildingElement{//=====================================================================
public               CurtainWall():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>CurtainWallTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CurtainWall(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,CurtainWallTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public CurtainWallTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifccurtainwalltype.htm
[ifcSql(TypeGroupId:5,TypeId: 640,TableId:3)] public partial class CurtainWallType:BuildingElementType{//=============================================================
public               CurtainWallType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>CurtainWallTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CurtainWallType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,CurtainWallTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               CurtainWallType(CurtainWallTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public CurtainWallTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.BoundedCurve(...)</para><para>new ifc.BSplineCurve(...)</para><para>new ifc.BezierCurve(...)</para><para>new ifc.CompositeCurve(...)</para><para>new ifc.CompositeCurveOnSurface(...)</para><para>new ifc.BoundaryCurve(...)</para><para>new ifc.2DCompositeCurve(...)</para><para>new ifc.CurveSegment2D(...)</para><para>new ifc.Polyline(...)</para><para>new ifc.TrimmedCurve(...)</para><para>new ifc.Conic(...)</para><para>new ifc.Circle(...)</para><para>new ifc.Ellipse(...)</para><para>new ifc.Line(...)</para><para>new ifc.OffsetCurve2D(...)</para><para>new ifc.OffsetCurve3D(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 641,TableId:3)] public partial class Curve:GeometricRepresentationItem{//===============================================================
public               Curve():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometryresource/lexical/ifccurveboundedplane.htm
[ifcSql(TypeGroupId:5,TypeId: 642,TableId:3)] public partial class CurveBoundedPlane:BoundedSurface{//================================================================
public               CurveBoundedPlane():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="BasisSurface"><para>new ifc.Plane(...)</para></param>
/// <param name="OuterBoundary"><para>new ifc.BezierCurve(...)</para><para>new ifc.CompositeCurve(...)</para><para>new ifc.CompositeCurveOnSurface(...)</para><para>new ifc.BoundaryCurve(...)</para><para>new ifc.2DCompositeCurve(...)</para><para>new ifc.Polyline(...)</para><para>new ifc.TrimmedCurve(...)</para><para>new ifc.Circle(...)</para><para>new ifc.Ellipse(...)</para><para>new ifc.Line(...)</para><para>new ifc.OffsetCurve2D(...)</para><para>new ifc.OffsetCurve3D(...)</para></param>
/// <param name="InnerBoundaries"><para>Set0toUnbounded_Curve</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CurveBoundedPlane(Plane BasisSurface,Curve OuterBoundary,Set0toUnbounded_Curve InnerBoundaries,string EndOfLineComment=null):base(){AddNext();this.BasisSurface=BasisSurface;this.OuterBoundary=OuterBoundary;this.InnerBoundaries=InnerBoundaries;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Plane BasisSurface; //ENTITY
[ifc(2)] public Curve OuterBoundary; //ENTITY
[ifc(3)] public Set0toUnbounded_Curve InnerBoundaries; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 644,TableId:3)] public partial class CurveSegment2D:BoundedCurve{//=====================================================================
public               CurveSegment2D():base(){}// abstract
[ifc(1)] public CartesianPoint StartPoint; //ENTITY
[ifc(2)] public PlaneAngleMeasure StartDirection; //TYPE
[ifc(3)] public PositiveLengthMeasure SegmentLength; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifccurvestyle.htm
[ifcSql(TypeGroupId:5,TypeId: 645,TableId:3)] public partial class CurveStyle:PresentationStyle{//====================================================================
public               CurveStyle():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="CurveFont">[optional]<para>new ifc.CurveFontOrScaledCurveFontSelect(new CurveStyleFont(...))...</para><para>new ifc.CurveFontOrScaledCurveFontSelect(new CurveStyleFontAndScaling(...))...</para><para>new ifc.CurveFontOrScaledCurveFontSelect(new PreDefinedCurveFont(...))...</para><para>new ifc.CurveFontOrScaledCurveFontSelect(new CurveStyleFontSelect(...))...</para></param>
/// <param name="CurveWidth">[optional]<para>new ifc.SizeSelect(new DescriptiveMeasure(...))...</para><para>new ifc.SizeSelect(new LengthMeasure(...))...</para><para>new ifc.SizeSelect(new NormalisedRatioMeasure(...))...</para><para>new ifc.SizeSelect(new PositiveLengthMeasure(...))...</para><para>new ifc.SizeSelect(new PositiveRatioMeasure(...))...</para><para>new ifc.SizeSelect(new RatioMeasure(...))...</para></param>
/// <param name="CurveColour">[optional]<para>new ifc.Colour(new ColourSpecification(...))...</para><para>new ifc.Colour(new PreDefinedColour(...))...</para></param>
/// <param name="ModelOrDraughting">[optional]<para>cast to (ifc.Boolean)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CurveStyle(Label Name=null,CurveFontOrScaledCurveFontSelect CurveFont=null,SizeSelect CurveWidth=null,Colour CurveColour=null,Boolean ModelOrDraughting=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.CurveFont=CurveFont;this.CurveWidth=CurveWidth;this.CurveColour=CurveColour;this.ModelOrDraughting=ModelOrDraughting;this.EndOfLineComment=EndOfLineComment;}
[ifc(2,optional=true)] public CurveFontOrScaledCurveFontSelect CurveFont; //SELECT
[ifc(3,optional=true)] public SizeSelect CurveWidth; //SELECT
[ifc(4,optional=true)] public Colour CurveColour; //SELECT
[ifc(5,optional=true)] public Boolean ModelOrDraughting; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifccurvestylefont.htm
[ifcSql(TypeGroupId:5,TypeId: 646,TableId:3)] public partial class CurveStyleFont:PresentationItem{//=================================================================
public               CurveStyleFont():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PatternList"><para>List1toUnbounded_CurveStyleFontPattern</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CurveStyleFont(Label Name,List1toUnbounded_CurveStyleFontPattern PatternList,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.PatternList=PatternList;this.EndOfLineComment=EndOfLineComment;}
public               CurveStyleFont(List1toUnbounded_CurveStyleFontPattern PatternList):base(){AddNext();this.PatternList=PatternList;}
[ifc(1,optional=true)] public Label Name; //TYPE
[ifc(2)] public List1toUnbounded_CurveStyleFontPattern PatternList; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifccurvestylefontandscaling.htm
[ifcSql(TypeGroupId:5,TypeId: 647,TableId:3)] public partial class CurveStyleFontAndScaling:PresentationItem{//=======================================================
public               CurveStyleFontAndScaling():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="CurveFont"><para>new ifc.CurveStyleFontSelect(new CurveStyleFont(...))...</para><para>new ifc.CurveStyleFontSelect(new PreDefinedCurveFont(...))...</para></param>
/// <param name="CurveFontScaling"><para>cast to (ifc.PositiveRatioMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CurveStyleFontAndScaling(Label Name,CurveStyleFontSelect CurveFont,PositiveRatioMeasure CurveFontScaling,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.CurveFont=CurveFont;this.CurveFontScaling=CurveFontScaling;this.EndOfLineComment=EndOfLineComment;}
public               CurveStyleFontAndScaling(CurveStyleFontSelect CurveFont,PositiveRatioMeasure CurveFontScaling):base(){AddNext();this.CurveFont=CurveFont;this.CurveFontScaling=CurveFontScaling;}
[ifc(1,optional=true)] public Label Name; //TYPE
[ifc(2)] public CurveStyleFontSelect CurveFont; //SELECT
[ifc(3)] public PositiveRatioMeasure CurveFontScaling; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifccurvestylefontpattern.htm
[ifcSql(TypeGroupId:5,TypeId: 648,TableId:3)] public partial class CurveStyleFontPattern:PresentationItem{//==========================================================
public               CurveStyleFontPattern():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="VisibleSegmentLength"><para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="InvisibleSegmentLength"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CurveStyleFontPattern(LengthMeasure VisibleSegmentLength,PositiveLengthMeasure InvisibleSegmentLength,string EndOfLineComment=null):base(){AddNext();this.VisibleSegmentLength=VisibleSegmentLength;this.InvisibleSegmentLength=InvisibleSegmentLength;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public LengthMeasure VisibleSegmentLength; //TYPE
[ifc(2)] public PositiveLengthMeasure InvisibleSegmentLength; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifcdampertype.htm
[ifcSql(TypeGroupId:5,TypeId: 651,TableId:3)] public partial class DamperType:FlowControllerType{//===================================================================
public               DamperType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>DamperTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DamperType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,DamperTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               DamperType(DamperTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public DamperTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcprofileresource/lexical/ifcderivedprofiledef.htm
[ifcSql(TypeGroupId:5,TypeId: 652,TableId:3)] public partial class DerivedProfileDef:ProfileDef{//====================================================================
public               DerivedProfileDef():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ProfileType"><para>ProfileTypeEnum</para></param>
/// <param name="ProfileName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="ParentProfile"><para>new ifc.ProfileDef(...)</para><para>new ifc.ArbitraryClosedProfileDef(...)</para><para>new ifc.ArbitraryProfileDefWithVoids(...)</para><para>new ifc.ArbitraryOpenProfileDef(...)</para><para>new ifc.CenterLineProfileDef(...)</para><para>new ifc.CompositeProfileDef(...)</para><para>new ifc.DerivedProfileDef(...)</para><para>new ifc.AsymmetricIShapeProfileDef(...)</para><para>new ifc.CShapeProfileDef(...)</para><para>new ifc.CircleProfileDef(...)</para><para>new ifc.CircleHollowProfileDef(...)</para><para>new ifc.EllipseProfileDef(...)</para><para>new ifc.IShapeProfileDef(...)</para><para>new ifc.LShapeProfileDef(...)</para><para>new ifc.RectangleProfileDef(...)</para><para>new ifc.TShapeProfileDef(...)</para><para>new ifc.TrapeziumProfileDef(...)</para><para>new ifc.UShapeProfileDef(...)</para><para>new ifc.ZShapeProfileDef(...)</para><para>new ifc.CraneRailAShapeProfileDef(...)</para><para>new ifc.CraneRailFShapeProfileDef(...)</para></param>
/// <param name="Operator"><para>new ifc.CartesianTransformationOperator2D(...)</para><para>new ifc.CartesianTransformationOperator2DnonUniform(...)</para></param>
/// <param name="Label">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DerivedProfileDef(ProfileTypeEnum ProfileType,Label ProfileName,ProfileDef ParentProfile,CartesianTransformationOperator2D Operator,Label Label=null,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.ProfileName=ProfileName;this.ParentProfile=ParentProfile;this.Operator=Operator;this.Label=Label;this.EndOfLineComment=EndOfLineComment;}
public               DerivedProfileDef(ProfileTypeEnum ProfileType,ProfileDef ParentProfile,CartesianTransformationOperator2D Operator,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.ParentProfile=ParentProfile;this.Operator=Operator;this.EndOfLineComment=EndOfLineComment;}
[ifc(3)] public ProfileDef ParentProfile; //ENTITY
[ifc(4,derived=true)] public CartesianTransformationOperator2D Operator; //ENTITY
[ifc(5,optional=true)] public Label Label; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcmeasureresource/lexical/ifcderivedunit.htm
[ifcSql(TypeGroupId:5,TypeId: 653,TableId:3)] public partial class DerivedUnit:ENTITY{//==============================================================================
public               DerivedUnit():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Elements"><para>Set1toUnbounded_DerivedUnitElement</para></param>
/// <param name="UnitType"><para>DerivedUnitEnum</para></param>
/// <param name="UserDefinedType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DerivedUnit(Set1toUnbounded_DerivedUnitElement Elements,DerivedUnitEnum UnitType,Label UserDefinedType=null,string EndOfLineComment=null):base(){AddNext();this.Elements=Elements;this.UnitType=UnitType;this.UserDefinedType=UserDefinedType;this.EndOfLineComment=EndOfLineComment;}
public               DerivedUnit(Set1toUnbounded_DerivedUnitElement Elements,DerivedUnitEnum UnitType):base(){AddNext();this.Elements=Elements;this.UnitType=UnitType;}
[ifc(1)] public Set1toUnbounded_DerivedUnitElement Elements; //ListType1d
[ifc(2)] public DerivedUnitEnum UnitType; //ENUM
[ifc(3,optional=true)] public Label UserDefinedType; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcmeasureresource/lexical/ifcderivedunitelement.htm
[ifcSql(TypeGroupId:5,TypeId: 654,TableId:3)] public partial class DerivedUnitElement:ENTITY{//=======================================================================
public               DerivedUnitElement():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Unit"><para>new ifc.ContextDependentUnit(...)</para><para>new ifc.ConversionBasedUnit(...)</para><para>new ifc.SIUnit(...)</para></param>
/// <param name="Exponent"><para>INTEGER</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DerivedUnitElement(NamedUnit Unit,INTEGER Exponent,string EndOfLineComment=null):base(){AddNext();this.Unit=Unit;this.Exponent=Exponent;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public NamedUnit Unit; //ENTITY
[ifc(2)] public INTEGER Exponent; //BASETYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcmeasureresource/lexical/ifcdimensionalexponents.htm
[ifcSql(TypeGroupId:5,TypeId: 655,TableId:3)] public partial class DimensionalExponents:ENTITY{//=====================================================================
public               DimensionalExponents():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="LengthExponent"><para>INTEGER</para></param>
/// <param name="MassExponent"><para>INTEGER</para></param>
/// <param name="TimeExponent"><para>INTEGER</para></param>
/// <param name="ElectricCurrentExponent"><para>INTEGER</para></param>
/// <param name="ThermodynamicTemperatureExponent"><para>INTEGER</para></param>
/// <param name="AmountOfSubstanceExponent"><para>INTEGER</para></param>
/// <param name="LuminousIntensityExponent"><para>INTEGER</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DimensionalExponents(INTEGER LengthExponent,INTEGER MassExponent,INTEGER TimeExponent,INTEGER ElectricCurrentExponent,INTEGER ThermodynamicTemperatureExponent,INTEGER AmountOfSubstanceExponent,INTEGER LuminousIntensityExponent,string EndOfLineComment=null):base(){AddNext();this.LengthExponent=LengthExponent;this.MassExponent=MassExponent;this.TimeExponent=TimeExponent;this.ElectricCurrentExponent=ElectricCurrentExponent;this.ThermodynamicTemperatureExponent=ThermodynamicTemperatureExponent;this.AmountOfSubstanceExponent=AmountOfSubstanceExponent;this.LuminousIntensityExponent=LuminousIntensityExponent;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public INTEGER LengthExponent; //BASETYPE
[ifc(2)] public INTEGER MassExponent; //BASETYPE
[ifc(3)] public INTEGER TimeExponent; //BASETYPE
[ifc(4)] public INTEGER ElectricCurrentExponent; //BASETYPE
[ifc(5)] public INTEGER ThermodynamicTemperatureExponent; //BASETYPE
[ifc(6)] public INTEGER AmountOfSubstanceExponent; //BASETYPE
[ifc(7)] public INTEGER LuminousIntensityExponent; //BASETYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometryresource/lexical/ifcdirection.htm
[ifcSql(TypeGroupId:5,TypeId: 656,TableId:3)] public partial class Direction:GeometricRepresentationItem{//===========================================================
public               Direction():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="DirectionRatios"><para>List2to3_Real</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Direction(List2to3_Real DirectionRatios,string EndOfLineComment=null):base(){AddNext();this.DirectionRatios=DirectionRatios;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public List2to3_Real DirectionRatios; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedcomponentelements/lexical/ifcdiscreteaccessory.htm
[ifcSql(TypeGroupId:5,TypeId: 657,TableId:3)] public partial class DiscreteAccessory:ElementComponent{//==============================================================
public               DiscreteAccessory():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>DiscreteAccessoryTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DiscreteAccessory(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,DiscreteAccessoryTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public DiscreteAccessoryTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedcomponentelements/lexical/ifcdiscreteaccessorytype.htm
[ifcSql(TypeGroupId:5,TypeId: 658,TableId:3)] public partial class DiscreteAccessoryType:ElementComponentType{//======================================================
public               DiscreteAccessoryType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>DiscreteAccessoryTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DiscreteAccessoryType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,DiscreteAccessoryTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               DiscreteAccessoryType(DiscreteAccessoryTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public DiscreteAccessoryTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgserviceelements/lexical/ifcdistributionchamberelement.htm
[ifcSql(TypeGroupId:5,TypeId: 659,TableId:3)] public partial class DistributionChamberElement:DistributionFlowElement{//==============================================
public               DistributionChamberElement():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>DistributionChamberElementTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DistributionChamberElement(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,DistributionChamberElementTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public DistributionChamberElementTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgserviceelements/lexical/ifcdistributionchamberelementtype.htm
[ifcSql(TypeGroupId:5,TypeId: 660,TableId:3)] public partial class DistributionChamberElementType:DistributionFlowElementType{//======================================
public               DistributionChamberElementType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>DistributionChamberElementTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DistributionChamberElementType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,DistributionChamberElementTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               DistributionChamberElementType(DistributionChamberElementTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public DistributionChamberElementTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.Sensor(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgserviceelements/lexical/ifcdistributioncontrolelement.htm
[ifcSql(TypeGroupId:5,TypeId: 662,TableId:3)] public partial class DistributionControlElement:DistributionElement{//==================================================
public               DistributionControlElement():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DistributionControlElement(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.EndOfLineComment=EndOfLineComment;}
/// <summary>INVERSE: AssignedToFlowElement of RelFlowControlElements for RelatedControlElements</summary>
[ifcInverse(For:"RelatedControlElements")] public RelFlowControlElements AssignedToFlowElement;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ActuatorType(...)</para><para>new ifc.AlarmType(...)</para><para>new ifc.ControllerType(...)</para><para>new ifc.FlowInstrumentType(...)</para><para>new ifc.SensorType(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 663,TableId:3)] public partial class DistributionControlElementType:DistributionElementType{//==========================================
public               DistributionControlElementType():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.DistributionControlElement(...)</para><para>new ifc.Sensor(...)</para><para>new ifc.DistributionFlowElement(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifcdistributionelement.htm
[ifcSql(TypeGroupId:5,TypeId: 664,TableId:3)] public partial class DistributionElement:Element{//=====================================================================
public               DistributionElement():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DistributionElement(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.EndOfLineComment=EndOfLineComment;}
/// <summary>INVERSE: HasPorts of RelConnectsPortToElement for RelatedElement</summary>
[ifcInverse(For:"RelatedElement")] public LIST<RelConnectsPortToElement> HasPorts;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.DistributionControlElementType(...)</para><para>new ifc.ActuatorType(...)</para><para>new ifc.AlarmType(...)</para><para>new ifc.ControllerType(...)</para><para>new ifc.FlowInstrumentType(...)</para><para>new ifc.SensorType(...)</para><para>new ifc.DistributionFlowElementType(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifcdistributionelementtype.htm
[ifcSql(TypeGroupId:5,TypeId: 665,TableId:3)] public partial class DistributionElementType:ElementType{//=============================================================
public               DistributionElementType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DistributionElementType(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Identifier ApplicableOccurrence=null,Set1toUnbounded_PropertySetDefinition HasPropertySets=null,List1toUnboundedUnique_RepresentationMap RepresentationMaps=null,Label Tag=null,Label _ElementType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.DistributionChamberElement(...)</para><para>new ifc.EnergyConversionDevice(...)</para><para>new ifc.FlowController(...)</para><para>new ifc.FlowFitting(...)</para><para>new ifc.FlowMovingDevice(...)</para><para>new ifc.FlowSegment(...)</para><para>new ifc.FlowStorageDevice(...)</para><para>new ifc.FlowTerminal(...)</para><para>new ifc.FlowTreatmentDevice(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgserviceelements/lexical/ifcdistributionflowelement.htm
[ifcSql(TypeGroupId:5,TypeId: 666,TableId:3)] public partial class DistributionFlowElement:DistributionElement{//=====================================================
public               DistributionFlowElement():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DistributionFlowElement(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.EndOfLineComment=EndOfLineComment;}
/// <summary>INVERSE: HasControlElements of RelFlowControlElements for RelatingFlowElement</summary>
[ifcInverse(For:"RelatingFlowElement")] public RelFlowControlElements HasControlElements;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.DistributionChamberElementType(...)</para><para>new ifc.EnergyConversionDeviceType(...)</para><para>new ifc.FlowControllerType(...)</para><para>new ifc.FlowFittingType(...)</para><para>new ifc.FlowMovingDeviceType(...)</para><para>new ifc.FlowSegmentType(...)</para><para>new ifc.FlowStorageDeviceType(...)</para><para>new ifc.FlowTerminalType(...)</para><para>new ifc.FlowTreatmentDeviceType(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 667,TableId:3)] public partial class DistributionFlowElementType:DistributionElementType{//=============================================
public               DistributionFlowElementType():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgserviceelements/lexical/ifcdistributionport.htm
[ifcSql(TypeGroupId:5,TypeId: 668,TableId:3)] public partial class DistributionPort:Port{//===========================================================================
public               DistributionPort():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="FlowDirection">[optional]<para>FlowDirectionEnum</para></param>
/// <param name="PredefinedType">[optional]<para>DistributionPortTypeEnum</para></param>
/// <param name="SystemType">[optional]<para>DistributionSystemEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DistributionPort(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,FlowDirectionEnum? FlowDirection=null,DistributionPortTypeEnum? PredefinedType=null,DistributionSystemEnum? SystemType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.FlowDirection=FlowDirection;this.PredefinedType=PredefinedType;this.SystemType=SystemType;this.EndOfLineComment=EndOfLineComment;}
[ifc(8,optional=true)] public FlowDirectionEnum? FlowDirection; //ENUM
[ifc(9,optional=true)] public DistributionPortTypeEnum? PredefinedType; //ENUM
[ifc(10,optional=true)] public DistributionSystemEnum? SystemType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcexternalreferenceresource/lexical/ifcdocumentinformation.htm
[ifcSql(TypeGroupId:5,TypeId: 670,TableId:3)] public partial class DocumentInformation:ExternalInformation{//=========================================================
public               DocumentInformation():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Identification"><para>cast to (ifc.Identifier)...</para></param>
/// <param name="Name"><para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="Location">[optional]<para>cast to (ifc.URIReference)...</para></param>
/// <param name="Purpose">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="IntendedUse">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="Scope">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="Revision">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="DocumentOwner">[optional]<para>new ifc.ActorSelect(new Organization(...))...</para><para>new ifc.ActorSelect(new Person(...))...</para><para>new ifc.ActorSelect(new PersonAndOrganization(...))...</para></param>
/// <param name="Editors">[optional]<para>Set1toUnbounded_ActorSelect</para></param>
/// <param name="CreationTime">[optional]<para>cast to (ifc.DateTime)...</para></param>
/// <param name="LastRevisionTime">[optional]<para>cast to (ifc.DateTime)...</para></param>
/// <param name="ElectronicFormat">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="ValidFrom">[optional]<para>cast to (ifc.Date)...</para></param>
/// <param name="ValidUntil">[optional]<para>cast to (ifc.Date)...</para></param>
/// <param name="Confidentiality">[optional]<para>DocumentConfidentialityEnum</para></param>
/// <param name="Status">[optional]<para>DocumentStatusEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DocumentInformation(Identifier Identification,Label Name,Text Description=null,URIReference Location=null,Text Purpose=null,Text IntendedUse=null,Text Scope=null,Label Revision=null,ActorSelect DocumentOwner=null,Set1toUnbounded_ActorSelect Editors=null,DateTime CreationTime=null,DateTime LastRevisionTime=null,Identifier ElectronicFormat=null,Date ValidFrom=null,Date ValidUntil=null,DocumentConfidentialityEnum? Confidentiality=null,DocumentStatusEnum? Status=null,string EndOfLineComment=null):base(){AddNext();this.Identification=Identification;this.Name=Name;this.Description=Description;this.Location=Location;this.Purpose=Purpose;this.IntendedUse=IntendedUse;this.Scope=Scope;this.Revision=Revision;this.DocumentOwner=DocumentOwner;this.Editors=Editors;this.CreationTime=CreationTime;this.LastRevisionTime=LastRevisionTime;this.ElectronicFormat=ElectronicFormat;this.ValidFrom=ValidFrom;this.ValidUntil=ValidUntil;this.Confidentiality=Confidentiality;this.Status=Status;this.EndOfLineComment=EndOfLineComment;}
public               DocumentInformation(Identifier Identification,Label Name,string EndOfLineComment=null):base(){AddNext();this.Identification=Identification;this.Name=Name;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Identifier Identification; //TYPE
[ifc(2)] public Label Name; //TYPE
[ifc(3,optional=true)] public Text Description; //TYPE
[ifc(4,optional=true)] public URIReference Location; //TYPE
[ifc(5,optional=true)] public Text Purpose; //TYPE
[ifc(6,optional=true)] public Text IntendedUse; //TYPE
[ifc(7,optional=true)] public Text Scope; //TYPE
[ifc(8,optional=true)] public Label Revision; //TYPE
[ifc(9,optional=true)] public ActorSelect DocumentOwner; //SELECT
[ifc(10,optional=true)] public Set1toUnbounded_ActorSelect Editors; //ListType1d
[ifc(11,optional=true)] public DateTime CreationTime; //TYPE
[ifc(12,optional=true)] public DateTime LastRevisionTime; //TYPE
[ifc(13,optional=true)] public Identifier ElectronicFormat; //TYPE
[ifc(14,optional=true)] public Date ValidFrom; //TYPE
[ifc(15,optional=true)] public Date ValidUntil; //TYPE
[ifc(16,optional=true)] public DocumentConfidentialityEnum? Confidentiality; //ENUM
[ifc(17,optional=true)] public DocumentStatusEnum? Status; //ENUM
/// <summary>INVERSE: IsPointer of DocumentInformationRelationship for RelatingDocument</summary>
[ifcInverse(For:"RelatingDocument")] public DocumentInformationRelationship IsPointer;
/// <summary>INVERSE: IsPointedTo of DocumentInformationRelationship for RelatedDocuments</summary>
[ifcInverse(For:"RelatedDocuments")] public LIST<DocumentInformationRelationship> IsPointedTo;
/// <summary>INVERSE: HasDocumentReferences of DocumentReference for ReferencedDocument</summary>
[ifcInverse(For:"ReferencedDocument")] public LIST<DocumentReference> HasDocumentReferences;
/// <summary>INVERSE: DocumentInfoForObjects of RelAssociatesDocument for RelatingDocument</summary>
[ifcInverse(For:"RelatingDocument")] public LIST<RelAssociatesDocument> DocumentInfoForObjects;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcexternalreferenceresource/lexical/ifcdocumentinformationrelationship.htm
[ifcSql(TypeGroupId:5,TypeId: 671,TableId:3)] public partial class DocumentInformationRelationship:ResourceLevelRelationship{//=======================================
public               DocumentInformationRelationship():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatingDocument"><para>new ifc.DocumentInformation(...)</para></param>
/// <param name="RelatedDocuments"><para>Set1toUnbounded_DocumentInformation</para></param>
/// <param name="RelationshipType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DocumentInformationRelationship(Label Name,Text Description,DocumentInformation RelatingDocument,Set1toUnbounded_DocumentInformation RelatedDocuments,Label RelationshipType=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.RelatingDocument=RelatingDocument;this.RelatedDocuments=RelatedDocuments;this.RelationshipType=RelationshipType;this.EndOfLineComment=EndOfLineComment;}
public               DocumentInformationRelationship(DocumentInformation RelatingDocument,Set1toUnbounded_DocumentInformation RelatedDocuments,string EndOfLineComment=null):base(){AddNext();this.RelatingDocument=RelatingDocument;this.RelatedDocuments=RelatedDocuments;this.EndOfLineComment=EndOfLineComment;}
[ifc(3)] public DocumentInformation RelatingDocument; //ENTITY
[ifc(4)] public Set1toUnbounded_DocumentInformation RelatedDocuments; //ListType1d
[ifc(5,optional=true)] public Label RelationshipType; //TYPE
public override void AssignInverseElements(){if (RelatingDocument!=null) RelatingDocument.IsPointer=this;
                                             if (RelatedDocuments!=null) foreach (DocumentInformation __DocumentInformation in RelatedDocuments) if (__DocumentInformation is DocumentInformation) {if (((DocumentInformation)__DocumentInformation).IsPointedTo==null) ((DocumentInformation)__DocumentInformation).IsPointedTo=new LIST<DocumentInformationRelationship>();((DocumentInformation)__DocumentInformation).IsPointedTo.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcexternalreferenceresource/lexical/ifcdocumentreference.htm
[ifcSql(TypeGroupId:5,TypeId: 672,TableId:3)] public partial class DocumentReference:ExternalReference{//=============================================================
public               DocumentReference():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Location">[optional]<para>cast to (ifc.URIReference)...</para></param>
/// <param name="Identification">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ReferencedDocument">[optional]<para>new ifc.DocumentInformation(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DocumentReference(URIReference Location=null,Identifier Identification=null,Label Name=null,Text Description=null,DocumentInformation ReferencedDocument=null,string EndOfLineComment=null):base(){AddNext();this.Location=Location;this.Identification=Identification;this.Name=Name;this.Description=Description;this.ReferencedDocument=ReferencedDocument;this.EndOfLineComment=EndOfLineComment;}
[ifc(4,optional=true)] public Text Description; //TYPE
[ifc(5,optional=true)] public DocumentInformation ReferencedDocument; //ENTITY
/// <summary>INVERSE: DocumentRefForObjects of RelAssociatesDocument for RelatingDocument</summary>
[ifcInverse(For:"RelatingDocument")] public LIST<RelAssociatesDocument> DocumentRefForObjects;
public override void AssignInverseElements(){if (ReferencedDocument!=null) {if (ReferencedDocument.HasDocumentReferences==null) ReferencedDocument.HasDocumentReferences=new LIST<DocumentReference>();ReferencedDocument.HasDocumentReferences.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifcdoor.htm
[ifcSql(TypeGroupId:5,TypeId: 673,TableId:3)] public partial class Door:BuildingElement{//============================================================================
public               Door():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="OverallHeight">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="OverallWidth">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="PredefinedType">[optional]<para>DoorTypeEnum</para></param>
/// <param name="OperationType">[optional]<para>DoorTypeOperationEnum</para></param>
/// <param name="UserDefinedOperationType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Door(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,PositiveLengthMeasure OverallHeight=null,PositiveLengthMeasure OverallWidth=null,DoorTypeEnum? PredefinedType=null,DoorTypeOperationEnum? OperationType=null,Label UserDefinedOperationType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.OverallHeight=OverallHeight;this.OverallWidth=OverallWidth;this.PredefinedType=PredefinedType;this.OperationType=OperationType;this.UserDefinedOperationType=UserDefinedOperationType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public PositiveLengthMeasure OverallHeight; //TYPE
[ifc(10,optional=true)] public PositiveLengthMeasure OverallWidth; //TYPE
[ifc(11,optional=true)] public DoorTypeEnum? PredefinedType; //ENUM
[ifc(12,optional=true)] public DoorTypeOperationEnum? OperationType; //ENUM
[ifc(13,optional=true)] public Label UserDefinedOperationType; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcarchitecturedomain/lexical/ifcdoorliningproperties.htm
[ifcSql(TypeGroupId:5,TypeId: 674,TableId:3)] public partial class DoorLiningProperties:PreDefinedPropertySet{//======================================================
public               DoorLiningProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="LiningDepth">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="LiningThickness">[optional]<para>cast to (ifc.NonNegativeLengthMeasure)...</para></param>
/// <param name="ThresholdDepth">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="ThresholdThickness">[optional]<para>cast to (ifc.NonNegativeLengthMeasure)...</para></param>
/// <param name="TransomThickness">[optional]<para>cast to (ifc.NonNegativeLengthMeasure)...</para></param>
/// <param name="TransomOffset">[optional]<para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="LiningOffset">[optional]<para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="ThresholdOffset">[optional]<para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="CasingThickness">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="CasingDepth">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="ShapeAspectStyle">[optional]<para>new ifc.ShapeAspect(...)</para></param>
/// <param name="LiningToPanelOffsetX">[optional]<para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="LiningToPanelOffsetY">[optional]<para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DoorLiningProperties(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,PositiveLengthMeasure LiningDepth=null,NonNegativeLengthMeasure LiningThickness=null,PositiveLengthMeasure ThresholdDepth=null,NonNegativeLengthMeasure ThresholdThickness=null,NonNegativeLengthMeasure TransomThickness=null,LengthMeasure TransomOffset=null,LengthMeasure LiningOffset=null,LengthMeasure ThresholdOffset=null,PositiveLengthMeasure CasingThickness=null,PositiveLengthMeasure CasingDepth=null,ShapeAspect ShapeAspectStyle=null,LengthMeasure LiningToPanelOffsetX=null,LengthMeasure LiningToPanelOffsetY=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.LiningDepth=LiningDepth;this.LiningThickness=LiningThickness;this.ThresholdDepth=ThresholdDepth;this.ThresholdThickness=ThresholdThickness;this.TransomThickness=TransomThickness;this.TransomOffset=TransomOffset;this.LiningOffset=LiningOffset;this.ThresholdOffset=ThresholdOffset;this.CasingThickness=CasingThickness;this.CasingDepth=CasingDepth;this.ShapeAspectStyle=ShapeAspectStyle;this.LiningToPanelOffsetX=LiningToPanelOffsetX;this.LiningToPanelOffsetY=LiningToPanelOffsetY;this.EndOfLineComment=EndOfLineComment;}
[ifc(5,optional=true)] public PositiveLengthMeasure LiningDepth; //TYPE
[ifc(6,optional=true)] public NonNegativeLengthMeasure LiningThickness; //TYPE
[ifc(7,optional=true)] public PositiveLengthMeasure ThresholdDepth; //TYPE
[ifc(8,optional=true)] public NonNegativeLengthMeasure ThresholdThickness; //TYPE
[ifc(9,optional=true)] public NonNegativeLengthMeasure TransomThickness; //TYPE
[ifc(10,optional=true)] public LengthMeasure TransomOffset; //TYPE
[ifc(11,optional=true)] public LengthMeasure LiningOffset; //TYPE
[ifc(12,optional=true)] public LengthMeasure ThresholdOffset; //TYPE
[ifc(13,optional=true)] public PositiveLengthMeasure CasingThickness; //TYPE
[ifc(14,optional=true)] public PositiveLengthMeasure CasingDepth; //TYPE
[ifc(15,optional=true)] public ShapeAspect ShapeAspectStyle; //ENTITY
[ifc(16,optional=true)] public LengthMeasure LiningToPanelOffsetX; //TYPE
[ifc(17,optional=true)] public LengthMeasure LiningToPanelOffsetY; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcarchitecturedomain/lexical/ifcdoorpanelproperties.htm
[ifcSql(TypeGroupId:5,TypeId: 675,TableId:3)] public partial class DoorPanelProperties:PreDefinedPropertySet{//=======================================================
public               DoorPanelProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="PanelDepth">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="PanelOperation"><para>DoorPanelOperationEnum</para></param>
/// <param name="PanelWidth">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="PanelPosition"><para>DoorPanelPositionEnum</para></param>
/// <param name="ShapeAspectStyle">[optional]<para>new ifc.ShapeAspect(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DoorPanelProperties(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,PositiveLengthMeasure PanelDepth,DoorPanelOperationEnum PanelOperation,NormalisedRatioMeasure PanelWidth,DoorPanelPositionEnum PanelPosition,ShapeAspect ShapeAspectStyle=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.PanelDepth=PanelDepth;this.PanelOperation=PanelOperation;this.PanelWidth=PanelWidth;this.PanelPosition=PanelPosition;this.ShapeAspectStyle=ShapeAspectStyle;this.EndOfLineComment=EndOfLineComment;}
public               DoorPanelProperties(DoorPanelOperationEnum PanelOperation,DoorPanelPositionEnum PanelPosition,string EndOfLineComment=null):base(){AddNext();this.PanelOperation=PanelOperation;this.PanelPosition=PanelPosition;this.EndOfLineComment=EndOfLineComment;}
[ifc(5,optional=true)] public PositiveLengthMeasure PanelDepth; //TYPE
[ifc(6)] public DoorPanelOperationEnum PanelOperation; //ENUM
[ifc(7,optional=true)] public NormalisedRatioMeasure PanelWidth; //TYPE
[ifc(8)] public DoorPanelPositionEnum PanelPosition; //ENUM
[ifc(9,optional=true)] public ShapeAspect ShapeAspectStyle; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcarchitecturedomain/lexical/ifcdoorstyle.htm
[ifcSql(TypeGroupId:5,TypeId: 677,TableId:3)] public partial class DoorStyle:TypeProduct{//===========================================================================
public               DoorStyle():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="OperationType"><para>DoorStyleOperationEnum</para></param>
/// <param name="ConstructionType"><para>DoorStyleConstructionEnum</para></param>
/// <param name="ParameterTakesPrecedence"><para>cast to (ifc.Boolean)...</para></param>
/// <param name="Sizeable"><para>cast to (ifc.Boolean)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DoorStyle(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,DoorStyleOperationEnum OperationType,DoorStyleConstructionEnum ConstructionType,Boolean ParameterTakesPrecedence,Boolean Sizeable,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this.OperationType=OperationType;this.ConstructionType=ConstructionType;this.ParameterTakesPrecedence=ParameterTakesPrecedence;this.Sizeable=Sizeable;this.EndOfLineComment=EndOfLineComment;}
public               DoorStyle(DoorStyleOperationEnum OperationType,DoorStyleConstructionEnum ConstructionType,Boolean ParameterTakesPrecedence,Boolean Sizeable,string EndOfLineComment=null):base(){AddNext();this.OperationType=OperationType;this.ConstructionType=ConstructionType;this.ParameterTakesPrecedence=ParameterTakesPrecedence;this.Sizeable=Sizeable;this.EndOfLineComment=EndOfLineComment;}
[ifc(9)] public DoorStyleOperationEnum OperationType; //ENUM
[ifc(10)] public DoorStyleConstructionEnum ConstructionType; //ENUM
[ifc(11)] public Boolean ParameterTakesPrecedence; //TYPE
[ifc(12)] public Boolean Sizeable; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifcdraughtingpredefinedcolour.htm
[ifcSql(TypeGroupId:5,TypeId: 679,TableId:3)] public partial class DraughtingPreDefinedColour:PreDefinedColour{//=====================================================
public               DraughtingPreDefinedColour():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name"><para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DraughtingPreDefinedColour(Label Name,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifcdraughtingpredefinedcurvefont.htm
[ifcSql(TypeGroupId:5,TypeId: 680,TableId:3)] public partial class DraughtingPreDefinedCurveFont:PreDefinedCurveFont{//===============================================
public               DraughtingPreDefinedCurveFont():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name"><para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DraughtingPreDefinedCurveFont(Label Name,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifcductfitting.htm
[ifcSql(TypeGroupId:5,TypeId: 681,TableId:3)] public partial class DuctFitting:FlowFitting{//=========================================================================
public               DuctFitting():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>DuctFittingTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DuctFitting(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,DuctFittingTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public DuctFittingTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifcductfittingtype.htm
[ifcSql(TypeGroupId:5,TypeId: 682,TableId:3)] public partial class DuctFittingType:FlowFittingType{//=================================================================
public               DuctFittingType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>DuctFittingTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DuctFittingType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,DuctFittingTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               DuctFittingType(DuctFittingTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public DuctFittingTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifcductsegmenttype.htm
[ifcSql(TypeGroupId:5,TypeId: 684,TableId:3)] public partial class DuctSegmentType:FlowSegmentType{//=================================================================
public               DuctSegmentType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>DuctSegmentTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DuctSegmentType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,DuctSegmentTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               DuctSegmentType(DuctSegmentTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public DuctSegmentTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifcductsilencertype.htm
[ifcSql(TypeGroupId:5,TypeId: 686,TableId:3)] public partial class DuctSilencerType:FlowTreatmentDeviceType{//========================================================
public               DuctSilencerType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>DuctSilencerTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DuctSilencerType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,DuctSilencerTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               DuctSilencerType(DuctSilencerTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public DuctSilencerTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.EdgeCurve(...)</para><para>new ifc.OrientedEdge(...)</para><para>new ifc.Subedge(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifctopologyresource/lexical/ifcedge.htm
[ifcSql(TypeGroupId:5,TypeId: 687,TableId:3)] public partial class Edge:TopologicalRepresentationItem{//==============================================================
public               Edge():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="EdgeStart"><para>new ifc.Vertex(...)</para><para>new ifc.VertexPoint(...)</para></param>
/// <param name="EdgeEnd"><para>new ifc.Vertex(...)</para><para>new ifc.VertexPoint(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Edge(Vertex EdgeStart,Vertex EdgeEnd,string EndOfLineComment=null):base(){AddNext();this.EdgeStart=EdgeStart;this.EdgeEnd=EdgeEnd;this.EndOfLineComment=EndOfLineComment;}
[ifc(1,derived=true)] public Vertex EdgeStart; //ENTITY
[ifc(2,derived=true)] public Vertex EdgeEnd; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifctopologyresource/lexical/ifcedgecurve.htm
[ifcSql(TypeGroupId:5,TypeId: 688,TableId:3)] public partial class EdgeCurve:Edge{//==================================================================================
public               EdgeCurve():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="EdgeStart"><para>new ifc.Vertex(...)</para><para>new ifc.VertexPoint(...)</para></param>
/// <param name="EdgeEnd"><para>new ifc.Vertex(...)</para><para>new ifc.VertexPoint(...)</para></param>
/// <param name="EdgeGeometry"><para>new ifc.BezierCurve(...)</para><para>new ifc.CompositeCurve(...)</para><para>new ifc.CompositeCurveOnSurface(...)</para><para>new ifc.BoundaryCurve(...)</para><para>new ifc.2DCompositeCurve(...)</para><para>new ifc.Polyline(...)</para><para>new ifc.TrimmedCurve(...)</para><para>new ifc.Circle(...)</para><para>new ifc.Ellipse(...)</para><para>new ifc.Line(...)</para><para>new ifc.OffsetCurve2D(...)</para><para>new ifc.OffsetCurve3D(...)</para></param>
/// <param name="SameSense"><para>cast to (ifc.Boolean)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               EdgeCurve(Vertex EdgeStart,Vertex EdgeEnd,Curve EdgeGeometry,Boolean SameSense,string EndOfLineComment=null):base(){AddNext();this.EdgeStart=EdgeStart;this.EdgeEnd=EdgeEnd;this.EdgeGeometry=EdgeGeometry;this.SameSense=SameSense;this.EndOfLineComment=EndOfLineComment;}
[ifc(3)] public Curve EdgeGeometry; //ENTITY
[ifc(4)] public Boolean SameSense; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifctopologyresource/lexical/ifcedgeloop.htm
[ifcSql(TypeGroupId:5,TypeId: 689,TableId:3)] public partial class EdgeLoop:Loop{//===================================================================================
public               EdgeLoop():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="EdgeList"><para>List1toUnbounded_OrientedEdge</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               EdgeLoop(List1toUnbounded_OrientedEdge EdgeList,string EndOfLineComment=null):base(){AddNext();this.EdgeList=EdgeList;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public List1toUnbounded_OrientedEdge EdgeList; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcelectricaldomain/lexical/ifcelectricappliancetype.htm
[ifcSql(TypeGroupId:5,TypeId: 691,TableId:3)] public partial class ElectricApplianceType:FlowTerminalType{//==========================================================
public               ElectricApplianceType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>ElectricApplianceTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ElectricApplianceType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,ElectricApplianceTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               ElectricApplianceType(ElectricApplianceTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public ElectricApplianceTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcelectricaldomain/lexical/ifcelectricflowstoragedevicetype.htm
[ifcSql(TypeGroupId:5,TypeId: 695,TableId:3)] public partial class ElectricFlowStorageDeviceType:FlowStorageDeviceType{//=============================================
public               ElectricFlowStorageDeviceType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>ElectricFlowStorageDeviceTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ElectricFlowStorageDeviceType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,ElectricFlowStorageDeviceTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               ElectricFlowStorageDeviceType(ElectricFlowStorageDeviceTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public ElectricFlowStorageDeviceTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcelectricaldomain/lexical/ifcelectricgeneratortype.htm
[ifcSql(TypeGroupId:5,TypeId: 697,TableId:3)] public partial class ElectricGeneratorType:EnergyConversionDeviceType{//================================================
public               ElectricGeneratorType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>ElectricGeneratorTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ElectricGeneratorType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,ElectricGeneratorTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               ElectricGeneratorType(ElectricGeneratorTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public ElectricGeneratorTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcelectricaldomain/lexical/ifcelectricmotortype.htm
[ifcSql(TypeGroupId:5,TypeId: 699,TableId:3)] public partial class ElectricMotorType:EnergyConversionDeviceType{//====================================================
public               ElectricMotorType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>ElectricMotorTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ElectricMotorType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,ElectricMotorTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               ElectricMotorType(ElectricMotorTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public ElectricMotorTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcelectricaldomain/lexical/ifcelectrictimecontroltype.htm
[ifcSql(TypeGroupId:5,TypeId: 701,TableId:3)] public partial class ElectricTimeControlType:FlowControllerType{//======================================================
public               ElectricTimeControlType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>ElectricTimeControlTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ElectricTimeControlType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,ElectricTimeControlTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               ElectricTimeControlType(ElectricTimeControlTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public ElectricTimeControlTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.BuildingElement(...)</para><para>new ifc.Beam(...)</para><para>new ifc.BuildingElementProxy(...)</para><para>new ifc.Column(...)</para><para>new ifc.Covering(...)</para><para>new ifc.CurtainWall(...)</para><para>new ifc.Door(...)</para><para>new ifc.Footing(...)</para><para>new ifc.Member(...)</para><para>new ifc.Pile(...)</para><para>new ifc.Plate(...)</para><para>new ifc.Railing(...)</para><para>new ifc.Ramp(...)</para><para>new ifc.RampFlight(...)</para><para>new ifc.Roof(...)</para><para>new ifc.Slab(...)</para><para>new ifc.Stair(...)</para><para>new ifc.StairFlight(...)</para><para>new ifc.Wall(...)</para><para>new ifc.Window(...)</para><para>new ifc.BuildingElementComponent(...)</para><para>new ifc.DistributionElement(...)</para><para>new ifc.DistributionControlElement(...)</para><para>new ifc.Sensor(...)</para><para>new ifc.DistributionFlowElement(...)</para><para>new ifc.DistributionChamberElement(...)</para><para>new ifc.EnergyConversionDevice(...)</para><para>new ifc.FlowController(...)</para><para>new ifc.FlowFitting(...)</para><para>new ifc.FlowMovingDevice(...)</para><para>new ifc.FlowSegment(...)</para><para>new ifc.FlowStorageDevice(...)</para><para>new ifc.FlowTerminal(...)</para><para>new ifc.FlowTreatmentDevice(...)</para><para>new ifc.ElementAssembly(...)</para><para>new ifc.ElementComponent(...)</para><para>new ifc.FeatureElement(...)</para><para>new ifc.FurnishingElement(...)</para><para>new ifc.TransportElement(...)</para><para>new ifc.VirtualElement(...)</para><para>new ifc.ElectricalElement(...)</para><para>new ifc.EquipmentElement(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 702,TableId:3)] public partial class Element:Product{//=================================================================================
public               Element():base(){}// abstract
[ifc(8,optional=true)] public Identifier Tag; //TYPE
/// <summary>INVERSE: ConnectedTo of RelConnectsElements for RelatingElement</summary>
[ifcInverse(For:"RelatingElement")] public LIST<RelConnectsElements> ConnectedTo;
/// <summary>INVERSE: ConnectedFrom of RelConnectsElements for RelatedElement</summary>
[ifcInverse(For:"RelatedElement")] public LIST<RelConnectsElements> ConnectedFrom;
/// <summary>INVERSE: IsConnectionRealization of RelConnectsWithRealizingElements for RealizingElements</summary>
[ifcInverse(For:"RealizingElements")] public LIST<RelConnectsWithRealizingElements> IsConnectionRealization;
/// <summary>INVERSE: ContainedInStructure of RelContainedInSpatialStructure for RelatedElements</summary>
[ifcInverse(For:"RelatedElements")] public RelContainedInSpatialStructure ContainedInStructure;
/// <summary>INVERSE: HasCoverings of RelCoversBldgElements for RelatingBuildingElement</summary>
[ifcInverse(For:"RelatingBuildingElement")] public LIST<RelCoversBldgElements> HasCoverings;
/// <summary>INVERSE: FillsVoids of RelFillsElement for RelatedBuildingElement</summary>
[ifcInverse(For:"RelatedBuildingElement")] public RelFillsElement FillsVoids;
/// <summary>INVERSE: InterferesElements of RelInterferesElements for RelatingElement</summary>
[ifcInverse(For:"RelatingElement")] public LIST<RelInterferesElements> InterferesElements;
/// <summary>INVERSE: IsInterferedByElements of RelInterferesElements for RelatedElement</summary>
[ifcInverse(For:"RelatedElement")] public LIST<RelInterferesElements> IsInterferedByElements;
/// <summary>INVERSE: HasProjections of RelProjectsElement for RelatingElement</summary>
[ifcInverse(For:"RelatingElement")] public LIST<RelProjectsElement> HasProjections;
/// <summary>INVERSE: ReferencedInStructures of RelReferencedInSpatialStructure for RelatedElements</summary>
[ifcInverse(For:"RelatedElements")] public LIST<RelReferencedInSpatialStructure> ReferencedInStructures;
/// <summary>INVERSE: ProvidesBoundaries of RelSpaceBoundary for RelatedBuildingElement</summary>
[ifcInverse(For:"RelatedBuildingElement")] public LIST<RelSpaceBoundary> ProvidesBoundaries;
/// <summary>INVERSE: HasOpenings of RelVoidsElement for RelatingBuildingElement</summary>
[ifcInverse(For:"RelatingBuildingElement")] public LIST<RelVoidsElement> HasOpenings;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifcelementassembly.htm
[ifcSql(TypeGroupId:5,TypeId: 703,TableId:3)] public partial class ElementAssembly:Element{//=========================================================================
public               ElementAssembly():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="AssemblyPlace">[optional]<para>AssemblyPlaceEnum</para></param>
/// <param name="PredefinedType">[optional]<para>ElementAssemblyTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ElementAssembly(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,AssemblyPlaceEnum? AssemblyPlace=null,ElementAssemblyTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.AssemblyPlace=AssemblyPlace;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public AssemblyPlaceEnum? AssemblyPlace; //ENUM
[ifc(10,optional=true)] public ElementAssemblyTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.BuildingElementPart(...)</para><para>new ifc.DiscreteAccessory(...)</para><para>new ifc.Fastener(...)</para><para>new ifc.MechanicalFastener(...)</para><para>new ifc.ReinforcingElement(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 705,TableId:3)] public partial class ElementComponent:Element{//========================================================================
public               ElementComponent():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.DiscreteAccessoryType(...)</para><para>new ifc.FastenerType(...)</para><para>new ifc.MechanicalFastenerType(...)</para><para>new ifc.VibrationIsolatorType(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 706,TableId:3)] public partial class ElementComponentType:ElementType{//================================================================
public               ElementComponentType():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifcelementquantity.htm
[ifcSql(TypeGroupId:5,TypeId: 707,TableId:3)] public partial class ElementQuantity:QuantitySet{//=====================================================================
public               ElementQuantity():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="MethodOfMeasurement">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Quantities"><para>Set1toUnbounded_PhysicalQuantity</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ElementQuantity(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Label MethodOfMeasurement,Set1toUnbounded_PhysicalQuantity Quantities,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.MethodOfMeasurement=MethodOfMeasurement;this.Quantities=Quantities;this.EndOfLineComment=EndOfLineComment;}
public               ElementQuantity(Set1toUnbounded_PhysicalQuantity Quantities,string EndOfLineComment=null):base(){AddNext();this.Quantities=Quantities;this.EndOfLineComment=EndOfLineComment;}
[ifc(5,optional=true)] public Label MethodOfMeasurement; //TYPE
[ifc(6)] public Set1toUnbounded_PhysicalQuantity Quantities; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.BuildingElementType(...)</para><para>new ifc.BeamType(...)</para><para>new ifc.BuildingElementProxyType(...)</para><para>new ifc.ColumnType(...)</para><para>new ifc.CoveringType(...)</para><para>new ifc.CurtainWallType(...)</para><para>new ifc.MemberType(...)</para><para>new ifc.PlateType(...)</para><para>new ifc.RailingType(...)</para><para>new ifc.RampFlightType(...)</para><para>new ifc.SlabType(...)</para><para>new ifc.StairFlightType(...)</para><para>new ifc.WallType(...)</para><para>new ifc.DistributionElementType(...)</para><para>new ifc.DistributionControlElementType(...)</para><para>new ifc.ActuatorType(...)</para><para>new ifc.AlarmType(...)</para><para>new ifc.ControllerType(...)</para><para>new ifc.FlowInstrumentType(...)</para><para>new ifc.SensorType(...)</para><para>new ifc.DistributionFlowElementType(...)</para><para>new ifc.DistributionChamberElementType(...)</para><para>new ifc.EnergyConversionDeviceType(...)</para><para>new ifc.FlowControllerType(...)</para><para>new ifc.FlowFittingType(...)</para><para>new ifc.FlowMovingDeviceType(...)</para><para>new ifc.FlowSegmentType(...)</para><para>new ifc.FlowStorageDeviceType(...)</para><para>new ifc.FlowTerminalType(...)</para><para>new ifc.FlowTreatmentDeviceType(...)</para><para>new ifc.ElementComponentType(...)</para><para>new ifc.DiscreteAccessoryType(...)</para><para>new ifc.FastenerType(...)</para><para>new ifc.MechanicalFastenerType(...)</para><para>new ifc.VibrationIsolatorType(...)</para><para>new ifc.FurnishingElementType(...)</para><para>new ifc.TransportElementType(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 708,TableId:3)] public partial class ElementType:TypeProduct{//=========================================================================
public               ElementType():base(){}// abstract
[ifc(9,optional=true)] public Label _ElementType; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.Plane(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 709,TableId:3)] public partial class ElementarySurface:Surface{//=======================================================================
public               ElementarySurface():base(){}// abstract
[ifc(1)] public Axis2Placement3D Position; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometryresource/lexical/ifcellipse.htm
[ifcSql(TypeGroupId:5,TypeId: 710,TableId:3)] public partial class Ellipse:Conic{//===================================================================================
public               Ellipse():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Position"><para>new ifc.Axis2Placement(new Axis2Placement2D(...))...</para><para>new ifc.Axis2Placement(new Axis2Placement3D(...))...</para></param>
/// <param name="SemiAxis1"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="SemiAxis2"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Ellipse(Axis2Placement Position,PositiveLengthMeasure SemiAxis1,PositiveLengthMeasure SemiAxis2,string EndOfLineComment=null):base(){AddNext();this.Position=Position;this.SemiAxis1=SemiAxis1;this.SemiAxis2=SemiAxis2;this.EndOfLineComment=EndOfLineComment;}
[ifc(2)] public PositiveLengthMeasure SemiAxis1; //TYPE
[ifc(3)] public PositiveLengthMeasure SemiAxis2; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcprofileresource/lexical/ifcellipseprofiledef.htm
[ifcSql(TypeGroupId:5,TypeId: 711,TableId:3)] public partial class EllipseProfileDef:ParameterizedProfileDef{//=======================================================
public               EllipseProfileDef():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ProfileType"><para>ProfileTypeEnum</para></param>
/// <param name="ProfileName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Position">[optional]<para>new ifc.Axis2Placement2D(...)</para></param>
/// <param name="SemiAxis1"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="SemiAxis2"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               EllipseProfileDef(ProfileTypeEnum ProfileType,Label ProfileName,Axis2Placement2D Position,PositiveLengthMeasure SemiAxis1,PositiveLengthMeasure SemiAxis2,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.ProfileName=ProfileName;this.Position=Position;this.SemiAxis1=SemiAxis1;this.SemiAxis2=SemiAxis2;this.EndOfLineComment=EndOfLineComment;}
public               EllipseProfileDef(ProfileTypeEnum ProfileType,PositiveLengthMeasure SemiAxis1,PositiveLengthMeasure SemiAxis2,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.SemiAxis1=SemiAxis1;this.SemiAxis2=SemiAxis2;this.EndOfLineComment=EndOfLineComment;}
[ifc(4)] public PositiveLengthMeasure SemiAxis1; //TYPE
[ifc(5)] public PositiveLengthMeasure SemiAxis2; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgserviceelements/lexical/ifcenergyconversiondevice.htm
[ifcSql(TypeGroupId:5,TypeId: 712,TableId:3)] public partial class EnergyConversionDevice:DistributionFlowElement{//==================================================
public               EnergyConversionDevice():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               EnergyConversionDevice(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.AirToAirHeatRecoveryType(...)</para><para>new ifc.BoilerType(...)</para><para>new ifc.ChillerType(...)</para><para>new ifc.CoilType(...)</para><para>new ifc.CondenserType(...)</para><para>new ifc.CooledBeamType(...)</para><para>new ifc.CoolingTowerType(...)</para><para>new ifc.ElectricGeneratorType(...)</para><para>new ifc.ElectricMotorType(...)</para><para>new ifc.EvaporativeCoolerType(...)</para><para>new ifc.EvaporatorType(...)</para><para>new ifc.HeatExchangerType(...)</para><para>new ifc.HumidifierType(...)</para><para>new ifc.MotorConnectionType(...)</para><para>new ifc.TransformerType(...)</para><para>new ifc.TubeBundleType(...)</para><para>new ifc.UnitaryEquipmentType(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 713,TableId:3)] public partial class EnergyConversionDeviceType:DistributionFlowElementType{//==========================================
public               EnergyConversionDeviceType():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifcevaporativecoolertype.htm
[ifcSql(TypeGroupId:5,TypeId: 717,TableId:3)] public partial class EvaporativeCoolerType:EnergyConversionDeviceType{//================================================
public               EvaporativeCoolerType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>EvaporativeCoolerTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               EvaporativeCoolerType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,EvaporativeCoolerTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               EvaporativeCoolerType(EvaporativeCoolerTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public EvaporativeCoolerTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifcevaporatortype.htm
[ifcSql(TypeGroupId:5,TypeId: 719,TableId:3)] public partial class EvaporatorType:EnergyConversionDeviceType{//=======================================================
public               EvaporatorType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>EvaporatorTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               EvaporatorType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,EvaporatorTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               EvaporatorType(EvaporatorTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public EvaporatorTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.MaterialProperties(...)</para><para>new ifc.ProfileProperties(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 723,TableId:3)] public partial class ExtendedProperties:PropertyAbstraction{//==========================================================
public               ExtendedProperties():base(){}// abstract
[ifc(1,optional=true)] public Identifier Name; //TYPE
[ifc(2,optional=true)] public Text Description; //TYPE
[ifc(3)] public Set1toUnbounded_Property Properties; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.Classification(...)</para><para>new ifc.DocumentInformation(...)</para><para>new ifc.LibraryInformation(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 724,TableId:3)] public partial class ExternalInformation:ENTITY{//======================================================================
public               ExternalInformation():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ClassificationReference(...)</para><para>new ifc.DocumentReference(...)</para><para>new ifc.ExternallyDefinedHatchStyle(...)</para><para>new ifc.ExternallyDefinedSurfaceStyle(...)</para><para>new ifc.ExternallyDefinedTextFont(...)</para><para>new ifc.LibraryReference(...)</para><para>new ifc.ExternallyDefinedSymbol(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 725,TableId:3)] public partial class ExternalReference:ENTITY{//========================================================================
public               ExternalReference():base(){}// abstract
[ifc(1,optional=true)] public URIReference Location; //TYPE
[ifc(2,optional=true)] public Identifier Identification; //TYPE
[ifc(3,optional=true)] public Label Name; //TYPE
/// <summary>INVERSE: ExternalReferenceForResources of ExternalReferenceRelationship for RelatingReference</summary>
[ifcInverse(For:"RelatingReference")] public LIST<ExternalReferenceRelationship> ExternalReferenceForResources;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcexternalreferenceresource/lexical/ifcexternalreferencerelationship.htm
[ifcSql(TypeGroupId:5,TypeId: 726,TableId:3)] public partial class ExternalReferenceRelationship:ResourceLevelRelationship{//=========================================
public               ExternalReferenceRelationship():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatingReference"><para>new ifc.ClassificationReference(...)</para><para>new ifc.DocumentReference(...)</para><para>new ifc.ExternallyDefinedHatchStyle(...)</para><para>new ifc.ExternallyDefinedSurfaceStyle(...)</para><para>new ifc.ExternallyDefinedTextFont(...)</para><para>new ifc.LibraryReference(...)</para><para>new ifc.ExternallyDefinedSymbol(...)</para></param>
/// <param name="RelatedResourceObjects"><para>Set1toUnbounded_ResourceObjectSelect</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ExternalReferenceRelationship(Label Name,Text Description,ExternalReference RelatingReference,Set1toUnbounded_ResourceObjectSelect RelatedResourceObjects,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.RelatingReference=RelatingReference;this.RelatedResourceObjects=RelatedResourceObjects;this.EndOfLineComment=EndOfLineComment;}
public               ExternalReferenceRelationship(ExternalReference RelatingReference,Set1toUnbounded_ResourceObjectSelect RelatedResourceObjects,string EndOfLineComment=null):base(){AddNext();this.RelatingReference=RelatingReference;this.RelatedResourceObjects=RelatedResourceObjects;this.EndOfLineComment=EndOfLineComment;}
[ifc(3)] public ExternalReference RelatingReference; //ENTITY
[ifc(4)] public Set1toUnbounded_ResourceObjectSelect RelatedResourceObjects; //ListType1d
public override void AssignInverseElements(){if (RelatedResourceObjects!=null) foreach (ResourceObjectSelect __ResourceObjectSelect in RelatedResourceObjects) if (__ResourceObjectSelect.SelectType()==typeof(ActorRole)) {if (((ActorRole)__ResourceObjectSelect).HasExternalReference==null) ((ActorRole)__ResourceObjectSelect).HasExternalReference=new LIST<ExternalReferenceRelationship>();((ActorRole)__ResourceObjectSelect).HasExternalReference.Add(this);}
                                             if (RelatedResourceObjects!=null) foreach (ResourceObjectSelect __ResourceObjectSelect in RelatedResourceObjects) if (__ResourceObjectSelect.SelectType()==typeof(AppliedValue)) {if (((AppliedValue)__ResourceObjectSelect).HasExternalReference==null) ((AppliedValue)__ResourceObjectSelect).HasExternalReference=new LIST<ExternalReferenceRelationship>();((AppliedValue)__ResourceObjectSelect).HasExternalReference.Add(this);}
                                             if (RelatedResourceObjects!=null) foreach (ResourceObjectSelect __ResourceObjectSelect in RelatedResourceObjects) if (__ResourceObjectSelect.SelectType()==typeof(Approval)) {if (((Approval)__ResourceObjectSelect).HasExternalReferences==null) ((Approval)__ResourceObjectSelect).HasExternalReferences=new LIST<ExternalReferenceRelationship>();((Approval)__ResourceObjectSelect).HasExternalReferences.Add(this);}
                                             if (RelatedResourceObjects!=null) foreach (ResourceObjectSelect __ResourceObjectSelect in RelatedResourceObjects) if (__ResourceObjectSelect.SelectType()==typeof(Constraint)) {if (((Constraint)__ResourceObjectSelect).HasExternalReferences==null) ((Constraint)__ResourceObjectSelect).HasExternalReferences=new LIST<ExternalReferenceRelationship>();((Constraint)__ResourceObjectSelect).HasExternalReferences.Add(this);}
                                             if (RelatedResourceObjects!=null) foreach (ResourceObjectSelect __ResourceObjectSelect in RelatedResourceObjects) if (__ResourceObjectSelect.SelectType()==typeof(ContextDependentUnit)) {if (((ContextDependentUnit)__ResourceObjectSelect).HasExternalReference==null) ((ContextDependentUnit)__ResourceObjectSelect).HasExternalReference=new LIST<ExternalReferenceRelationship>();((ContextDependentUnit)__ResourceObjectSelect).HasExternalReference.Add(this);}
                                             if (RelatedResourceObjects!=null) foreach (ResourceObjectSelect __ResourceObjectSelect in RelatedResourceObjects) if (__ResourceObjectSelect.SelectType()==typeof(ConversionBasedUnit)) {if (((ConversionBasedUnit)__ResourceObjectSelect).HasExternalReference==null) ((ConversionBasedUnit)__ResourceObjectSelect).HasExternalReference=new LIST<ExternalReferenceRelationship>();((ConversionBasedUnit)__ResourceObjectSelect).HasExternalReference.Add(this);}
                                             if (RelatingReference!=null) {if (RelatingReference.ExternalReferenceForResources==null) RelatingReference.ExternalReferenceForResources=new LIST<ExternalReferenceRelationship>();RelatingReference.ExternalReferenceForResources.Add(this);}
                                             if (RelatedResourceObjects!=null) foreach (ResourceObjectSelect __ResourceObjectSelect in RelatedResourceObjects) if (__ResourceObjectSelect.SelectType()==typeof(MaterialDefinition)) {if (((MaterialDefinition)__ResourceObjectSelect).HasExternalReferences==null) ((MaterialDefinition)__ResourceObjectSelect).HasExternalReferences=new LIST<ExternalReferenceRelationship>();((MaterialDefinition)__ResourceObjectSelect).HasExternalReferences.Add(this);}
                                             if (RelatedResourceObjects!=null) foreach (ResourceObjectSelect __ResourceObjectSelect in RelatedResourceObjects) if (__ResourceObjectSelect.SelectType()==typeof(PhysicalQuantity)) {if (((PhysicalQuantity)__ResourceObjectSelect).HasExternalReferences==null) ((PhysicalQuantity)__ResourceObjectSelect).HasExternalReferences=new LIST<ExternalReferenceRelationship>();((PhysicalQuantity)__ResourceObjectSelect).HasExternalReferences.Add(this);}
                                             if (RelatedResourceObjects!=null) foreach (ResourceObjectSelect __ResourceObjectSelect in RelatedResourceObjects) if (__ResourceObjectSelect.SelectType()==typeof(ProfileDef)) {if (((ProfileDef)__ResourceObjectSelect).HasExternalReference==null) ((ProfileDef)__ResourceObjectSelect).HasExternalReference=new LIST<ExternalReferenceRelationship>();((ProfileDef)__ResourceObjectSelect).HasExternalReference.Add(this);}
                                             if (RelatedResourceObjects!=null) foreach (ResourceObjectSelect __ResourceObjectSelect in RelatedResourceObjects) if (__ResourceObjectSelect.SelectType()==typeof(PropertyAbstraction)) {if (((PropertyAbstraction)__ResourceObjectSelect).HasExternalReferences==null) ((PropertyAbstraction)__ResourceObjectSelect).HasExternalReferences=new LIST<ExternalReferenceRelationship>();((PropertyAbstraction)__ResourceObjectSelect).HasExternalReferences.Add(this);}
                                             if (RelatedResourceObjects!=null) foreach (ResourceObjectSelect __ResourceObjectSelect in RelatedResourceObjects) if (__ResourceObjectSelect.SelectType()==typeof(TimeSeries)) {if (((TimeSeries)__ResourceObjectSelect).HasExternalReference==null) ((TimeSeries)__ResourceObjectSelect).HasExternalReference=new LIST<ExternalReferenceRelationship>();((TimeSeries)__ResourceObjectSelect).HasExternalReference.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifcexternalspatialelement.htm
[ifcSql(TypeGroupId:5,TypeId: 727,TableId:3)] public partial class ExternalSpatialElement:ExternalSpatialStructureElement{//==========================================
public               ExternalSpatialElement():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="LongName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType">[optional]<para>ExternalSpatialElementTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ExternalSpatialElement(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Label LongName=null,ExternalSpatialElementTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.LongName=LongName;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public ExternalSpatialElementTypeEnum? PredefinedType; //ENUM
/// <summary>INVERSE: BoundedBy of RelSpaceBoundary for RelatingSpace</summary>
[ifcInverse(For:"RelatingSpace")] public LIST<RelSpaceBoundary> BoundedBy;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ExternalSpatialElement(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 728,TableId:3)] public partial class ExternalSpatialStructureElement:SpatialElement{//==================================================
public               ExternalSpatialStructureElement():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifcexternallydefinedhatchstyle.htm
[ifcSql(TypeGroupId:5,TypeId: 729,TableId:3)] public partial class ExternallyDefinedHatchStyle:ExternalReference{//===================================================
public               ExternallyDefinedHatchStyle():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Location">[optional]<para>cast to (ifc.URIReference)...</para></param>
/// <param name="Identification">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ExternallyDefinedHatchStyle(URIReference Location=null,Identifier Identification=null,Label Name=null,string EndOfLineComment=null):base(){AddNext();this.Location=Location;this.Identification=Identification;this.Name=Name;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifcexternallydefinedsurfacestyle.htm
[ifcSql(TypeGroupId:5,TypeId: 730,TableId:3)] public partial class ExternallyDefinedSurfaceStyle:ExternalReference{//=================================================
public               ExternallyDefinedSurfaceStyle():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Location">[optional]<para>cast to (ifc.URIReference)...</para></param>
/// <param name="Identification">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ExternallyDefinedSurfaceStyle(URIReference Location=null,Identifier Identification=null,Label Name=null,string EndOfLineComment=null):base(){AddNext();this.Location=Location;this.Identification=Identification;this.Name=Name;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifcexternallydefinedtextfont.htm
[ifcSql(TypeGroupId:5,TypeId: 731,TableId:3)] public partial class ExternallyDefinedTextFont:ExternalReference{//=====================================================
public               ExternallyDefinedTextFont():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Location">[optional]<para>cast to (ifc.URIReference)...</para></param>
/// <param name="Identification">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ExternallyDefinedTextFont(URIReference Location=null,Identifier Identification=null,Label Name=null,string EndOfLineComment=null):base(){AddNext();this.Location=Location;this.Identification=Identification;this.Name=Name;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricmodelresource/lexical/ifcextrudedareasolid.htm
[ifcSql(TypeGroupId:5,TypeId: 732,TableId:3)] public partial class ExtrudedAreaSolid:SweptAreaSolid{//================================================================
public               ExtrudedAreaSolid():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="SweptArea"><para>new ifc.ProfileDef(...)</para><para>new ifc.ArbitraryClosedProfileDef(...)</para><para>new ifc.ArbitraryProfileDefWithVoids(...)</para><para>new ifc.ArbitraryOpenProfileDef(...)</para><para>new ifc.CenterLineProfileDef(...)</para><para>new ifc.CompositeProfileDef(...)</para><para>new ifc.DerivedProfileDef(...)</para><para>new ifc.AsymmetricIShapeProfileDef(...)</para><para>new ifc.CShapeProfileDef(...)</para><para>new ifc.CircleProfileDef(...)</para><para>new ifc.CircleHollowProfileDef(...)</para><para>new ifc.EllipseProfileDef(...)</para><para>new ifc.IShapeProfileDef(...)</para><para>new ifc.LShapeProfileDef(...)</para><para>new ifc.RectangleProfileDef(...)</para><para>new ifc.TShapeProfileDef(...)</para><para>new ifc.TrapeziumProfileDef(...)</para><para>new ifc.UShapeProfileDef(...)</para><para>new ifc.ZShapeProfileDef(...)</para><para>new ifc.CraneRailAShapeProfileDef(...)</para><para>new ifc.CraneRailFShapeProfileDef(...)</para></param>
/// <param name="Position">[optional]<para>new ifc.Axis2Placement3D(...)</para></param>
/// <param name="ExtrudedDirection"><para>new ifc.Direction(...)</para></param>
/// <param name="Depth"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ExtrudedAreaSolid(ProfileDef SweptArea,Axis2Placement3D Position,Direction ExtrudedDirection,PositiveLengthMeasure Depth,string EndOfLineComment=null):base(){AddNext();this.SweptArea=SweptArea;this.Position=Position;this.ExtrudedDirection=ExtrudedDirection;this.Depth=Depth;this.EndOfLineComment=EndOfLineComment;}
public               ExtrudedAreaSolid(ProfileDef SweptArea,Direction ExtrudedDirection,PositiveLengthMeasure Depth):base(){AddNext();this.SweptArea=SweptArea;this.ExtrudedDirection=ExtrudedDirection;this.Depth=Depth;}
[ifc(3)] public Direction ExtrudedDirection; //ENTITY
[ifc(4)] public PositiveLengthMeasure Depth; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.FaceSurface(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifctopologyresource/lexical/ifcface.htm
[ifcSql(TypeGroupId:5,TypeId: 734,TableId:3)] public partial class Face:TopologicalRepresentationItem{//==============================================================
public               Face():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Bounds"><para>Set1toUnbounded_FaceBound</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Face(Set1toUnbounded_FaceBound Bounds,string EndOfLineComment=null):base(){AddNext();this.Bounds=Bounds;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Set1toUnbounded_FaceBound Bounds; //ListType1d
/// <summary>INVERSE: HasTextureMaps of TextureMap for MappedTo</summary>
[ifcInverse(For:"MappedTo")] public LIST<TextureMap> HasTextureMaps;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricmodelresource/lexical/ifcfacebasedsurfacemodel.htm
[ifcSql(TypeGroupId:5,TypeId: 735,TableId:3)] public partial class FaceBasedSurfaceModel:GeometricRepresentationItem{//===============================================
public               FaceBasedSurfaceModel():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="FbsmFaces"><para>Set1toUnbounded_ConnectedFaceSet</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               FaceBasedSurfaceModel(Set1toUnbounded_ConnectedFaceSet FbsmFaces,string EndOfLineComment=null):base(){AddNext();this.FbsmFaces=FbsmFaces;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Set1toUnbounded_ConnectedFaceSet FbsmFaces; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.FaceOuterBound(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifctopologyresource/lexical/ifcfacebound.htm
[ifcSql(TypeGroupId:5,TypeId: 736,TableId:3)] public partial class FaceBound:TopologicalRepresentationItem{//=========================================================
public               FaceBound():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Bound"><para>new ifc.Loop(...)</para><para>new ifc.EdgeLoop(...)</para><para>new ifc.PolyLoop(...)</para><para>new ifc.VertexLoop(...)</para></param>
/// <param name="Orientation"><para>cast to (ifc.Boolean)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               FaceBound(Loop Bound,Boolean Orientation,string EndOfLineComment=null):base(){AddNext();this.Bound=Bound;this.Orientation=Orientation;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Loop Bound; //ENTITY
[ifc(2)] public Boolean Orientation; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifctopologyresource/lexical/ifcfaceouterbound.htm
[ifcSql(TypeGroupId:5,TypeId: 737,TableId:3)] public partial class FaceOuterBound:FaceBound{//========================================================================
public               FaceOuterBound():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Bound"><para>new ifc.Loop(...)</para><para>new ifc.EdgeLoop(...)</para><para>new ifc.PolyLoop(...)</para><para>new ifc.VertexLoop(...)</para></param>
/// <param name="Orientation"><para>cast to (ifc.Boolean)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               FaceOuterBound(Loop Bound,Boolean Orientation,string EndOfLineComment=null):base(){AddNext();this.Bound=Bound;this.Orientation=Orientation;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifctopologyresource/lexical/ifcfacesurface.htm
[ifcSql(TypeGroupId:5,TypeId: 738,TableId:3)] public partial class FaceSurface:Face{//================================================================================
public               FaceSurface():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Bounds"><para>Set1toUnbounded_FaceBound</para></param>
/// <param name="_FaceSurface"><para>new ifc.CurveBoundedPlane(...)</para><para>new ifc.RectangularTrimmedSurface(...)</para><para>new ifc.Plane(...)</para></param>
/// <param name="SameSense"><para>cast to (ifc.Boolean)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               FaceSurface(Set1toUnbounded_FaceBound Bounds,Surface _FaceSurface,Boolean SameSense,string EndOfLineComment=null):base(){AddNext();this.Bounds=Bounds;this._FaceSurface=_FaceSurface;this.SameSense=SameSense;this.EndOfLineComment=EndOfLineComment;}
[ifc(2)] public Surface _FaceSurface; //ENTITY
[ifc(3)] public Boolean SameSense; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.FacetedBrepWithVoids(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricmodelresource/lexical/ifcfacetedbrep.htm
[ifcSql(TypeGroupId:5,TypeId: 739,TableId:3)] public partial class FacetedBrep:ManifoldSolidBrep{//===================================================================
public               FacetedBrep():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Outer"><para>new ifc.ClosedShell(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               FacetedBrep(ClosedShell Outer,string EndOfLineComment=null):base(){AddNext();this.Outer=Outer;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricmodelresource/lexical/ifcfacetedbrepwithvoids.htm
[ifcSql(TypeGroupId:5,TypeId: 740,TableId:3)] public partial class FacetedBrepWithVoids:FacetedBrep{//================================================================
public               FacetedBrepWithVoids():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Outer"><para>new ifc.ClosedShell(...)</para></param>
/// <param name="Voids"><para>Set1toUnbounded_ClosedShell</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               FacetedBrepWithVoids(ClosedShell Outer,Set1toUnbounded_ClosedShell Voids,string EndOfLineComment=null):base(){AddNext();this.Outer=Outer;this.Voids=Voids;this.EndOfLineComment=EndOfLineComment;}
[ifc(2)] public Set1toUnbounded_ClosedShell Voids; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralloadresource/lexical/ifcfailureconnectioncondition.htm
[ifcSql(TypeGroupId:5,TypeId: 741,TableId:3)] public partial class FailureConnectionCondition:StructuralConnectionCondition{//========================================
public               FailureConnectionCondition():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="TensionFailureX">[optional]<para>cast to (ifc.ForceMeasure)...</para></param>
/// <param name="TensionFailureY">[optional]<para>cast to (ifc.ForceMeasure)...</para></param>
/// <param name="TensionFailureZ">[optional]<para>cast to (ifc.ForceMeasure)...</para></param>
/// <param name="CompressionFailureX">[optional]<para>cast to (ifc.ForceMeasure)...</para></param>
/// <param name="CompressionFailureY">[optional]<para>cast to (ifc.ForceMeasure)...</para></param>
/// <param name="CompressionFailureZ">[optional]<para>cast to (ifc.ForceMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               FailureConnectionCondition(Label Name=null,ForceMeasure TensionFailureX=null,ForceMeasure TensionFailureY=null,ForceMeasure TensionFailureZ=null,ForceMeasure CompressionFailureX=null,ForceMeasure CompressionFailureY=null,ForceMeasure CompressionFailureZ=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.TensionFailureX=TensionFailureX;this.TensionFailureY=TensionFailureY;this.TensionFailureZ=TensionFailureZ;this.CompressionFailureX=CompressionFailureX;this.CompressionFailureY=CompressionFailureY;this.CompressionFailureZ=CompressionFailureZ;this.EndOfLineComment=EndOfLineComment;}
[ifc(2,optional=true)] public ForceMeasure TensionFailureX; //TYPE
[ifc(3,optional=true)] public ForceMeasure TensionFailureY; //TYPE
[ifc(4,optional=true)] public ForceMeasure TensionFailureZ; //TYPE
[ifc(5,optional=true)] public ForceMeasure CompressionFailureX; //TYPE
[ifc(6,optional=true)] public ForceMeasure CompressionFailureY; //TYPE
[ifc(7,optional=true)] public ForceMeasure CompressionFailureZ; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifcfan.htm
[ifcSql(TypeGroupId:5,TypeId: 742,TableId:3)] public partial class Fan:FlowMovingDevice{//============================================================================
public               Fan():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>FanTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Fan(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,FanTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public FanTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifcfantype.htm
[ifcSql(TypeGroupId:5,TypeId: 743,TableId:3)] public partial class FanType:FlowMovingDeviceType{//====================================================================
public               FanType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>FanTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               FanType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,FanTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               FanType(FanTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public FanTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedcomponentelements/lexical/ifcfastener.htm
[ifcSql(TypeGroupId:5,TypeId: 744,TableId:3)] public partial class Fastener:ElementComponent{//=======================================================================
public               Fastener():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>FastenerTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Fastener(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,FastenerTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public FastenerTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedcomponentelements/lexical/ifcfastenertype.htm
[ifcSql(TypeGroupId:5,TypeId: 745,TableId:3)] public partial class FastenerType:ElementComponentType{//===============================================================
public               FastenerType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>FastenerTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               FastenerType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,FastenerTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               FastenerType(FastenerTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public FastenerTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.FeatureElementAddition(...)</para><para>new ifc.FeatureElementSubtraction(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 746,TableId:3)] public partial class FeatureElement:Element{//==========================================================================
public               FeatureElement():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ProjectionElement(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 747,TableId:3)] public partial class FeatureElementAddition:FeatureElement{//===========================================================
public               FeatureElementAddition():base(){}// abstract
/// <summary>INVERSE: ProjectsElements of RelProjectsElement for RelatedFeatureElement</summary>
[ifcInverse(For:"RelatedFeatureElement")] public RelProjectsElement ProjectsElements;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.OpeningElement(...)</para><para>new ifc.EdgeFeature(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 748,TableId:3)] public partial class FeatureElementSubtraction:FeatureElement{//========================================================
public               FeatureElementSubtraction():base(){}// abstract
/// <summary>INVERSE: VoidsElements of RelVoidsElement for RelatedOpeningElement</summary>
[ifcInverse(For:"RelatedOpeningElement")] public RelVoidsElement VoidsElements;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifcfillareastyle.htm
[ifcSql(TypeGroupId:5,TypeId: 749,TableId:3)] public partial class FillAreaStyle:PresentationStyle{//=================================================================
public               FillAreaStyle():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="FillStyles"><para>Set1toUnbounded_FillStyleSelect</para></param>
/// <param name="ModelorDraughting">[optional]<para>cast to (ifc.Boolean)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               FillAreaStyle(Label Name,Set1toUnbounded_FillStyleSelect FillStyles,Boolean ModelorDraughting=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.FillStyles=FillStyles;this.ModelorDraughting=ModelorDraughting;this.EndOfLineComment=EndOfLineComment;}
public               FillAreaStyle(Set1toUnbounded_FillStyleSelect FillStyles,string EndOfLineComment=null):base(){AddNext();this.FillStyles=FillStyles;this.EndOfLineComment=EndOfLineComment;}
[ifc(2)] public Set1toUnbounded_FillStyleSelect FillStyles; //ListType1d
[ifc(3,optional=true)] public Boolean ModelorDraughting; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifcfillareastylehatching.htm
[ifcSql(TypeGroupId:5,TypeId: 750,TableId:3)] public partial class FillAreaStyleHatching:GeometricRepresentationItem{//===============================================
public               FillAreaStyleHatching():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="HatchLineAppearance"><para>new ifc.CurveStyle(...)</para></param>
/// <param name="StartOfNextHatchLine"><para>new ifc.HatchLineDistanceSelect(new PositiveLengthMeasure(...))...</para><para>new ifc.HatchLineDistanceSelect(new Vector(...))...</para></param>
/// <param name="PointOfReferenceHatchLine">[optional]<para>new ifc.CartesianPoint(...)</para></param>
/// <param name="PatternStart">[optional]<para>new ifc.CartesianPoint(...)</para></param>
/// <param name="HatchLineAngle"><para>cast to (ifc.PlaneAngleMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               FillAreaStyleHatching(CurveStyle HatchLineAppearance,HatchLineDistanceSelect StartOfNextHatchLine,CartesianPoint PointOfReferenceHatchLine,CartesianPoint PatternStart,PlaneAngleMeasure HatchLineAngle,string EndOfLineComment=null):base(){AddNext();this.HatchLineAppearance=HatchLineAppearance;this.StartOfNextHatchLine=StartOfNextHatchLine;this.PointOfReferenceHatchLine=PointOfReferenceHatchLine;this.PatternStart=PatternStart;this.HatchLineAngle=HatchLineAngle;this.EndOfLineComment=EndOfLineComment;}
public               FillAreaStyleHatching(CurveStyle HatchLineAppearance,HatchLineDistanceSelect StartOfNextHatchLine,PlaneAngleMeasure HatchLineAngle,string EndOfLineComment=null):base(){AddNext();this.HatchLineAppearance=HatchLineAppearance;this.StartOfNextHatchLine=StartOfNextHatchLine;this.HatchLineAngle=HatchLineAngle;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public CurveStyle HatchLineAppearance; //ENTITY
[ifc(2)] public HatchLineDistanceSelect StartOfNextHatchLine; //SELECT
[ifc(3,optional=true)] public CartesianPoint PointOfReferenceHatchLine; //ENTITY
[ifc(4,optional=true)] public CartesianPoint PatternStart; //ENTITY
[ifc(5)] public PlaneAngleMeasure HatchLineAngle; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifcfillareastyletiles.htm
[ifcSql(TypeGroupId:5,TypeId: 751,TableId:3)] public partial class FillAreaStyleTiles:GeometricRepresentationItem{//==================================================
public               FillAreaStyleTiles():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="TilingPattern"><para>List2to2_Vector</para></param>
/// <param name="Tiles"><para>Set1toUnbounded_StyledItem</para></param>
/// <param name="TilingScale"><para>cast to (ifc.PositiveRatioMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               FillAreaStyleTiles(List2to2_Vector TilingPattern,Set1toUnbounded_StyledItem Tiles,PositiveRatioMeasure TilingScale,string EndOfLineComment=null):base(){AddNext();this.TilingPattern=TilingPattern;this.Tiles=Tiles;this.TilingScale=TilingScale;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public List2to2_Vector TilingPattern; //ListType1d
[ifc(2)] public Set1toUnbounded_StyledItem Tiles; //ListType1d
[ifc(3)] public PositiveRatioMeasure TilingScale; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifcfiltertype.htm
[ifcSql(TypeGroupId:5,TypeId: 753,TableId:3)] public partial class FilterType:FlowTreatmentDeviceType{//==============================================================
public               FilterType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>FilterTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               FilterType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,FilterTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               FilterType(FilterTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public FilterTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcplumbingfireprotectiondomain/lexical/ifcfiresuppressionterminaltype.htm
[ifcSql(TypeGroupId:5,TypeId: 755,TableId:3)] public partial class FireSuppressionTerminalType:FlowTerminalType{//====================================================
public               FireSuppressionTerminalType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>FireSuppressionTerminalTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               FireSuppressionTerminalType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,FireSuppressionTerminalTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               FireSuppressionTerminalType(FireSuppressionTerminalTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public FireSuppressionTerminalTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricmodelresource/lexical/ifcfixedreferencesweptareasolid.htm
[ifcSql(TypeGroupId:5,TypeId: 756,TableId:3)] public partial class FixedReferenceSweptAreaSolid:SweptAreaSolid{//=====================================================
public               FixedReferenceSweptAreaSolid():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="SweptArea"><para>new ifc.ProfileDef(...)</para><para>new ifc.ArbitraryClosedProfileDef(...)</para><para>new ifc.ArbitraryProfileDefWithVoids(...)</para><para>new ifc.ArbitraryOpenProfileDef(...)</para><para>new ifc.CenterLineProfileDef(...)</para><para>new ifc.CompositeProfileDef(...)</para><para>new ifc.DerivedProfileDef(...)</para><para>new ifc.AsymmetricIShapeProfileDef(...)</para><para>new ifc.CShapeProfileDef(...)</para><para>new ifc.CircleProfileDef(...)</para><para>new ifc.CircleHollowProfileDef(...)</para><para>new ifc.EllipseProfileDef(...)</para><para>new ifc.IShapeProfileDef(...)</para><para>new ifc.LShapeProfileDef(...)</para><para>new ifc.RectangleProfileDef(...)</para><para>new ifc.TShapeProfileDef(...)</para><para>new ifc.TrapeziumProfileDef(...)</para><para>new ifc.UShapeProfileDef(...)</para><para>new ifc.ZShapeProfileDef(...)</para><para>new ifc.CraneRailAShapeProfileDef(...)</para><para>new ifc.CraneRailFShapeProfileDef(...)</para></param>
/// <param name="Position">[optional]<para>new ifc.Axis2Placement3D(...)</para></param>
/// <param name="Directrix"><para>new ifc.BezierCurve(...)</para><para>new ifc.CompositeCurve(...)</para><para>new ifc.CompositeCurveOnSurface(...)</para><para>new ifc.BoundaryCurve(...)</para><para>new ifc.2DCompositeCurve(...)</para><para>new ifc.Polyline(...)</para><para>new ifc.TrimmedCurve(...)</para><para>new ifc.Circle(...)</para><para>new ifc.Ellipse(...)</para><para>new ifc.Line(...)</para><para>new ifc.OffsetCurve2D(...)</para><para>new ifc.OffsetCurve3D(...)</para></param>
/// <param name="StartParam">[optional]<para>cast to (ifc.ParameterValue)...</para></param>
/// <param name="EndParam">[optional]<para>cast to (ifc.ParameterValue)...</para></param>
/// <param name="FixedReference"><para>new ifc.Direction(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               FixedReferenceSweptAreaSolid(ProfileDef SweptArea,Axis2Placement3D Position,Curve Directrix,ParameterValue StartParam,ParameterValue EndParam,Direction FixedReference,string EndOfLineComment=null):base(){AddNext();this.SweptArea=SweptArea;this.Position=Position;this.Directrix=Directrix;this.StartParam=StartParam;this.EndParam=EndParam;this.FixedReference=FixedReference;this.EndOfLineComment=EndOfLineComment;}
public               FixedReferenceSweptAreaSolid(ProfileDef SweptArea,Curve Directrix,Direction FixedReference,string EndOfLineComment=null):base(){AddNext();this.SweptArea=SweptArea;this.Directrix=Directrix;this.FixedReference=FixedReference;this.EndOfLineComment=EndOfLineComment;}
[ifc(3)] public Curve Directrix; //ENTITY
[ifc(4,optional=true)] public ParameterValue StartParam; //TYPE
[ifc(5,optional=true)] public ParameterValue EndParam; //TYPE
[ifc(6)] public Direction FixedReference; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ElectricDistributionPoint(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgserviceelements/lexical/ifcflowcontroller.htm
[ifcSql(TypeGroupId:5,TypeId: 757,TableId:3)] public partial class FlowController:DistributionFlowElement{//==========================================================
public               FlowController():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               FlowController(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.AirTerminalBoxType(...)</para><para>new ifc.DamperType(...)</para><para>new ifc.ElectricTimeControlType(...)</para><para>new ifc.FlowMeterType(...)</para><para>new ifc.ProtectiveDeviceType(...)</para><para>new ifc.SwitchingDeviceType(...)</para><para>new ifc.ValveType(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 758,TableId:3)] public partial class FlowControllerType:DistributionFlowElementType{//==================================================
public               FlowControllerType():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.DuctFitting(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgserviceelements/lexical/ifcflowfitting.htm
[ifcSql(TypeGroupId:5,TypeId: 759,TableId:3)] public partial class FlowFitting:DistributionFlowElement{//=============================================================
public               FlowFitting():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               FlowFitting(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.CableCarrierFittingType(...)</para><para>new ifc.DuctFittingType(...)</para><para>new ifc.JunctionBoxType(...)</para><para>new ifc.PipeFittingType(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 760,TableId:3)] public partial class FlowFittingType:DistributionFlowElementType{//=====================================================
public               FlowFittingType():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcbuildingcontrolsdomain/lexical/ifcflowinstrumenttype.htm
[ifcSql(TypeGroupId:5,TypeId: 762,TableId:3)] public partial class FlowInstrumentType:DistributionControlElementType{//===============================================
public               FlowInstrumentType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>FlowInstrumentTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               FlowInstrumentType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,FlowInstrumentTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               FlowInstrumentType(FlowInstrumentTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public FlowInstrumentTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifcflowmetertype.htm
[ifcSql(TypeGroupId:5,TypeId: 764,TableId:3)] public partial class FlowMeterType:FlowControllerType{//================================================================
public               FlowMeterType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>FlowMeterTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               FlowMeterType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,FlowMeterTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               FlowMeterType(FlowMeterTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public FlowMeterTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.Fan(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgserviceelements/lexical/ifcflowmovingdevice.htm
[ifcSql(TypeGroupId:5,TypeId: 765,TableId:3)] public partial class FlowMovingDevice:DistributionFlowElement{//========================================================
public               FlowMovingDevice():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               FlowMovingDevice(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.CompressorType(...)</para><para>new ifc.FanType(...)</para><para>new ifc.PumpType(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 766,TableId:3)] public partial class FlowMovingDeviceType:DistributionFlowElementType{//================================================
public               FlowMovingDeviceType():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgserviceelements/lexical/ifcflowsegment.htm
[ifcSql(TypeGroupId:5,TypeId: 767,TableId:3)] public partial class FlowSegment:DistributionFlowElement{//=============================================================
public               FlowSegment():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               FlowSegment(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.CableCarrierSegmentType(...)</para><para>new ifc.CableSegmentType(...)</para><para>new ifc.DuctSegmentType(...)</para><para>new ifc.PipeSegmentType(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 768,TableId:3)] public partial class FlowSegmentType:DistributionFlowElementType{//=====================================================
public               FlowSegmentType():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgserviceelements/lexical/ifcflowstoragedevice.htm
[ifcSql(TypeGroupId:5,TypeId: 769,TableId:3)] public partial class FlowStorageDevice:DistributionFlowElement{//=======================================================
public               FlowStorageDevice():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               FlowStorageDevice(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ElectricFlowStorageDeviceType(...)</para><para>new ifc.TankType(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 770,TableId:3)] public partial class FlowStorageDeviceType:DistributionFlowElementType{//===============================================
public               FlowStorageDeviceType():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgserviceelements/lexical/ifcflowterminal.htm
[ifcSql(TypeGroupId:5,TypeId: 771,TableId:3)] public partial class FlowTerminal:DistributionFlowElement{//============================================================
public               FlowTerminal():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               FlowTerminal(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.AirTerminalType(...)</para><para>new ifc.ElectricApplianceType(...)</para><para>new ifc.FireSuppressionTerminalType(...)</para><para>new ifc.LampType(...)</para><para>new ifc.LightFixtureType(...)</para><para>new ifc.OutletType(...)</para><para>new ifc.SanitaryTerminalType(...)</para><para>new ifc.SpaceHeaterType(...)</para><para>new ifc.StackTerminalType(...)</para><para>new ifc.WasteTerminalType(...)</para><para>new ifc.ElectricHeaterType(...)</para><para>new ifc.GasTerminalType(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 772,TableId:3)] public partial class FlowTerminalType:DistributionFlowElementType{//====================================================
public               FlowTerminalType():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.Interceptor(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgserviceelements/lexical/ifcflowtreatmentdevice.htm
[ifcSql(TypeGroupId:5,TypeId: 773,TableId:3)] public partial class FlowTreatmentDevice:DistributionFlowElement{//=====================================================
public               FlowTreatmentDevice():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               FlowTreatmentDevice(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.DuctSilencerType(...)</para><para>new ifc.FilterType(...)</para><para>new ifc.InterceptorType(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 774,TableId:3)] public partial class FlowTreatmentDeviceType:DistributionFlowElementType{//=============================================
public               FlowTreatmentDeviceType():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralelementsdomain/lexical/ifcfooting.htm
[ifcSql(TypeGroupId:5,TypeId: 775,TableId:3)] public partial class Footing:BuildingElement{//=========================================================================
public               Footing():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>FootingTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Footing(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,FootingTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public FootingTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifcfurnishingelement.htm
[ifcSql(TypeGroupId:5,TypeId: 777,TableId:3)] public partial class FurnishingElement:Element{//=======================================================================
public               FurnishingElement():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               FurnishingElement(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.FurnitureType(...)</para><para>new ifc.SystemFurnitureElementType(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifcfurnishingelementtype.htm
[ifcSql(TypeGroupId:5,TypeId: 778,TableId:3)] public partial class FurnishingElementType:ElementType{//===============================================================
public               FurnishingElementType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               FurnishingElementType(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Identifier ApplicableOccurrence=null,Set1toUnbounded_PropertySetDefinition HasPropertySets=null,List1toUnboundedUnique_RepresentationMap RepresentationMaps=null,Label Tag=null,Label _ElementType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedfacilitieselements/lexical/ifcfurnituretype.htm
[ifcSql(TypeGroupId:5,TypeId: 780,TableId:3)] public partial class FurnitureType:FurnishingElementType{//=============================================================
public               FurnitureType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="AssemblyPlace"><para>AssemblyPlaceEnum</para></param>
/// <param name="PredefinedType">[optional]<para>FurnitureTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               FurnitureType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,AssemblyPlaceEnum AssemblyPlace,FurnitureTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.AssemblyPlace=AssemblyPlace;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               FurnitureType(AssemblyPlaceEnum AssemblyPlace,string EndOfLineComment=null):base(){AddNext();this.AssemblyPlace=AssemblyPlace;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public AssemblyPlaceEnum AssemblyPlace; //ENUM
[ifc(11,optional=true)] public FurnitureTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricmodelresource/lexical/ifcgeometriccurveset.htm
[ifcSql(TypeGroupId:5,TypeId: 783,TableId:3)] public partial class GeometricCurveSet:GeometricSet{//==================================================================
public               GeometricCurveSet():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Elements"><para>Set1toUnbounded_GeometricSetSelect</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               GeometricCurveSet(Set1toUnbounded_GeometricSetSelect Elements,string EndOfLineComment=null):base(){AddNext();this.Elements=Elements;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.GeometricRepresentationSubContext(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcrepresentationresource/lexical/ifcgeometricrepresentationcontext.htm
[ifcSql(TypeGroupId:5,TypeId: 784,TableId:3)] public partial class GeometricRepresentationContext:RepresentationContext{//============================================
public               GeometricRepresentationContext():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ContextIdentifier">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="ContextType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="CoordinateSpaceDimension"><para>cast to (ifc.DimensionCount)...</para></param>
/// <param name="Precision">[optional]<para>cast to (ifc.Real)...</para></param>
/// <param name="WorldCoordinateSystem"><para>new ifc.Axis2Placement(new Axis2Placement2D(...))...</para><para>new ifc.Axis2Placement(new Axis2Placement3D(...))...</para></param>
/// <param name="TrueNorth">[optional]<para>new ifc.Direction(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               GeometricRepresentationContext(Label ContextIdentifier,Label ContextType,DimensionCount CoordinateSpaceDimension,Real Precision,Axis2Placement WorldCoordinateSystem,Direction TrueNorth=null,string EndOfLineComment=null):base(){AddNext();this.ContextIdentifier=ContextIdentifier;this.ContextType=ContextType;this.CoordinateSpaceDimension=CoordinateSpaceDimension;this.Precision=Precision;this.WorldCoordinateSystem=WorldCoordinateSystem;this.TrueNorth=TrueNorth;this.EndOfLineComment=EndOfLineComment;}
public               GeometricRepresentationContext(DimensionCount CoordinateSpaceDimension,Axis2Placement WorldCoordinateSystem,string EndOfLineComment=null):base(){AddNext();this.CoordinateSpaceDimension=CoordinateSpaceDimension;this.WorldCoordinateSystem=WorldCoordinateSystem;this.EndOfLineComment=EndOfLineComment;}
[ifc(3,derived=true)] public DimensionCount CoordinateSpaceDimension; //TYPE
[ifc(4,optional=true,derived=true)] public Real Precision; //TYPE
[ifc(5,derived=true)] public Axis2Placement WorldCoordinateSystem; //SELECT
[ifc(6,optional=true,derived=true)] public Direction TrueNorth; //ENTITY
/// <summary>INVERSE: HasCoordinateOperation of CoordinateOperation for SourceCRS</summary>
[ifcInverse(For:"SourceCRS")] public CoordinateOperation HasCoordinateOperation;
/// <summary>INVERSE: HasSubContexts of GeometricRepresentationSubContext for ParentContext</summary>
[ifcInverse(For:"ParentContext")] public LIST<GeometricRepresentationSubContext> HasSubContexts;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.AnnotationFillArea(...)</para><para>new ifc.BooleanResult(...)</para><para>new ifc.BooleanClippingResult(...)</para><para>new ifc.BoundingBox(...)</para><para>new ifc.CartesianPointList(...)</para><para>new ifc.CartesianPointList3D(...)</para><para>new ifc.CartesianTransformationOperator(...)</para><para>new ifc.CartesianTransformationOperator2D(...)</para><para>new ifc.CartesianTransformationOperator2DnonUniform(...)</para><para>new ifc.CartesianTransformationOperator3D(...)</para><para>new ifc.CartesianTransformationOperator3DnonUniform(...)</para><para>new ifc.CompositeCurveSegment(...)</para><para>new ifc.CsgPrimitive3D(...)</para><para>new ifc.Block(...)</para><para>new ifc.RectangularPyramid(...)</para><para>new ifc.RightCircularCone(...)</para><para>new ifc.RightCircularCylinder(...)</para><para>new ifc.Sphere(...)</para><para>new ifc.Curve(...)</para><para>new ifc.BoundedCurve(...)</para><para>new ifc.BSplineCurve(...)</para><para>new ifc.BezierCurve(...)</para><para>new ifc.CompositeCurve(...)</para><para>new ifc.CompositeCurveOnSurface(...)</para><para>new ifc.BoundaryCurve(...)</para><para>new ifc.2DCompositeCurve(...)</para><para>new ifc.CurveSegment2D(...)</para><para>new ifc.Polyline(...)</para><para>new ifc.TrimmedCurve(...)</para><para>new ifc.Conic(...)</para><para>new ifc.Circle(...)</para><para>new ifc.Ellipse(...)</para><para>new ifc.Line(...)</para><para>new ifc.OffsetCurve2D(...)</para><para>new ifc.OffsetCurve3D(...)</para><para>new ifc.Direction(...)</para><para>new ifc.FaceBasedSurfaceModel(...)</para><para>new ifc.FillAreaStyleHatching(...)</para><para>new ifc.FillAreaStyleTiles(...)</para><para>new ifc.GeometricSet(...)</para><para>new ifc.HalfSpaceSolid(...)</para><para>new ifc.LightSource(...)</para><para>new ifc.Placement(...)</para><para>new ifc.PlanarExtent(...)</para><para>new ifc.Point(...)</para><para>new ifc.SectionedSpine(...)</para><para>new ifc.ShellBasedSurfaceModel(...)</para><para>new ifc.SolidModel(...)</para><para>new ifc.Surface(...)</para><para>new ifc.TessellatedItem(...)</para><para>new ifc.TextLiteral(...)</para><para>new ifc.Vector(...)</para><para>new ifc.AnnotationSurface(...)</para><para>new ifc.DefinedSymbol(...)</para><para>new ifc.DraughtingCallout(...)</para><para>new ifc.FillAreaStyleTileSymbolWithStyle(...)</para><para>new ifc.OneDirectionRepeatFactor(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 785,TableId:3)] public partial class GeometricRepresentationItem:RepresentationItem{//==================================================
public               GeometricRepresentationItem():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcrepresentationresource/lexical/ifcgeometricrepresentationsubcontext.htm
[ifcSql(TypeGroupId:5,TypeId: 786,TableId:3)] public partial class GeometricRepresentationSubContext:GeometricRepresentationContext{//================================
public               GeometricRepresentationSubContext():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ContextIdentifier">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="ContextType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="CoordinateSpaceDimension"><para>cast to (ifc.DimensionCount)...</para></param>
/// <param name="Precision">[optional]<para>cast to (ifc.Real)...</para></param>
/// <param name="WorldCoordinateSystem"><para>new ifc.Axis2Placement(new Axis2Placement2D(...))...</para><para>new ifc.Axis2Placement(new Axis2Placement3D(...))...</para></param>
/// <param name="TrueNorth">[optional]<para>new ifc.Direction(...)</para></param>
/// <param name="ParentContext"><para>new ifc.GeometricRepresentationContext(...)</para><para>new ifc.GeometricRepresentationSubContext(...)</para></param>
/// <param name="TargetScale">[optional]<para>cast to (ifc.PositiveRatioMeasure)...</para></param>
/// <param name="TargetView"><para>GeometricProjectionEnum</para></param>
/// <param name="UserDefinedTargetView">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               GeometricRepresentationSubContext(Label ContextIdentifier,Label ContextType,DimensionCount CoordinateSpaceDimension,Real Precision,Axis2Placement WorldCoordinateSystem,Direction TrueNorth,GeometricRepresentationContext ParentContext,PositiveRatioMeasure TargetScale,GeometricProjectionEnum TargetView,Label UserDefinedTargetView=null,string EndOfLineComment=null):base(){AddNext();this.ContextIdentifier=ContextIdentifier;this.ContextType=ContextType;this.CoordinateSpaceDimension=CoordinateSpaceDimension;this.Precision=Precision;this.WorldCoordinateSystem=WorldCoordinateSystem;this.TrueNorth=TrueNorth;this.ParentContext=ParentContext;this.TargetScale=TargetScale;this.TargetView=TargetView;this.UserDefinedTargetView=UserDefinedTargetView;this.EndOfLineComment=EndOfLineComment;}
public               GeometricRepresentationSubContext(DimensionCount CoordinateSpaceDimension,Axis2Placement WorldCoordinateSystem,GeometricRepresentationContext ParentContext,GeometricProjectionEnum TargetView,string EndOfLineComment=null):base(){AddNext();this.CoordinateSpaceDimension=CoordinateSpaceDimension;this.WorldCoordinateSystem=WorldCoordinateSystem;this.ParentContext=ParentContext;this.TargetView=TargetView;this.EndOfLineComment=EndOfLineComment;}
[ifc(7)] public GeometricRepresentationContext ParentContext; //ENTITY
[ifc(8,optional=true)] public PositiveRatioMeasure TargetScale; //TYPE
[ifc(9)] public GeometricProjectionEnum TargetView; //ENUM
[ifc(10,optional=true)] public Label UserDefinedTargetView; //TYPE
public override void AssignInverseElements(){if (ParentContext!=null) {if (ParentContext.HasSubContexts==null) ParentContext.HasSubContexts=new LIST<GeometricRepresentationSubContext>();ParentContext.HasSubContexts.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.GeometricCurveSet(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricmodelresource/lexical/ifcgeometricset.htm
[ifcSql(TypeGroupId:5,TypeId: 787,TableId:3)] public partial class GeometricSet:GeometricRepresentationItem{//========================================================
public               GeometricSet():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Elements"><para>Set1toUnbounded_GeometricSetSelect</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               GeometricSet(Set1toUnbounded_GeometricSetSelect Elements,string EndOfLineComment=null):base(){AddNext();this.Elements=Elements;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Set1toUnbounded_GeometricSetSelect Elements; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifcgrid.htm
[ifcSql(TypeGroupId:5,TypeId: 788,TableId:3)] public partial class Grid:PositioningElement{//=========================================================================
public               Grid():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="UAxes"><para>List1toUnboundedUnique_GridAxis</para></param>
/// <param name="VAxes"><para>List1toUnboundedUnique_GridAxis</para></param>
/// <param name="WAxes">[optional]<para>List1toUnboundedUnique_GridAxis</para></param>
/// <param name="PredefinedType">[optional]<para>GridTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Grid(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Label ObjectType,ObjectPlacement _ObjectPlacement,ProductRepresentation _Representation,List1toUnboundedUnique_GridAxis UAxes,List1toUnboundedUnique_GridAxis VAxes,List1toUnboundedUnique_GridAxis WAxes=null,GridTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.UAxes=UAxes;this.VAxes=VAxes;this.WAxes=WAxes;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               Grid(List1toUnboundedUnique_GridAxis UAxes,List1toUnboundedUnique_GridAxis VAxes,string EndOfLineComment=null):base(){AddNext();this.UAxes=UAxes;this.VAxes=VAxes;this.EndOfLineComment=EndOfLineComment;}
[ifc(8)] public List1toUnboundedUnique_GridAxis UAxes; //ListType1d
[ifc(9)] public List1toUnboundedUnique_GridAxis VAxes; //ListType1d
[ifc(10,optional=true)] public List1toUnboundedUnique_GridAxis WAxes; //ListType1d
[ifc(11,optional=true)] public GridTypeEnum? PredefinedType; //ENUM
/// <summary>INVERSE: ContainedInStructure of RelContainedInSpatialStructure for RelatedElements</summary>
[ifcInverse(For:"RelatedElements")] public RelContainedInSpatialStructure ContainedInStructure;
public override void AssignInverseElements(){if (UAxes!=null) foreach (GridAxis __GridAxis in UAxes) if (__GridAxis is GridAxis) ((GridAxis)__GridAxis).PartOfU=this;
                                             if (VAxes!=null) foreach (GridAxis __GridAxis in VAxes) if (__GridAxis is GridAxis) ((GridAxis)__GridAxis).PartOfV=this;
                                             if (WAxes!=null) foreach (GridAxis __GridAxis in WAxes) if (__GridAxis is GridAxis) ((GridAxis)__GridAxis).PartOfW=this;
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricconstraintresource/lexical/ifcgridaxis.htm
[ifcSql(TypeGroupId:5,TypeId: 789,TableId:3)] public partial class GridAxis:ENTITY{//=================================================================================
public               GridAxis():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="AxisTag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="AxisCurve"><para>new ifc.BezierCurve(...)</para><para>new ifc.CompositeCurve(...)</para><para>new ifc.CompositeCurveOnSurface(...)</para><para>new ifc.BoundaryCurve(...)</para><para>new ifc.2DCompositeCurve(...)</para><para>new ifc.Polyline(...)</para><para>new ifc.TrimmedCurve(...)</para><para>new ifc.Circle(...)</para><para>new ifc.Ellipse(...)</para><para>new ifc.Line(...)</para><para>new ifc.OffsetCurve2D(...)</para><para>new ifc.OffsetCurve3D(...)</para></param>
/// <param name="SameSense"><para>cast to (ifc.Boolean)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               GridAxis(Label AxisTag,Curve AxisCurve,Boolean SameSense,string EndOfLineComment=null):base(){AddNext();this.AxisTag=AxisTag;this.AxisCurve=AxisCurve;this.SameSense=SameSense;this.EndOfLineComment=EndOfLineComment;}
public               GridAxis(Curve AxisCurve,Boolean SameSense):base(){AddNext();this.AxisCurve=AxisCurve;this.SameSense=SameSense;}
[ifc(1,optional=true)] public Label AxisTag; //TYPE
[ifc(2)] public Curve AxisCurve; //ENTITY
[ifc(3)] public Boolean SameSense; //TYPE
/// <summary>INVERSE: PartOfU of Grid for UAxes</summary>
[ifcInverse(For:"UAxes")] public Grid PartOfU;
/// <summary>INVERSE: PartOfV of Grid for VAxes</summary>
[ifcInverse(For:"VAxes")] public Grid PartOfV;
/// <summary>INVERSE: PartOfW of Grid for WAxes</summary>
[ifcInverse(For:"WAxes")] public Grid PartOfW;
/// <summary>INVERSE: HasIntersections of VirtualGridIntersection for IntersectingAxes</summary>
[ifcInverse(For:"IntersectingAxes")] public LIST<VirtualGridIntersection> HasIntersections;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricconstraintresource/lexical/ifcgridplacement.htm
[ifcSql(TypeGroupId:5,TypeId: 790,TableId:3)] public partial class GridPlacement:ObjectPlacement{//===================================================================
public               GridPlacement():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="PlacementLocation"><para>new ifc.VirtualGridIntersection(...)</para></param>
/// <param name="PlacementRefDirection">[optional]<para>new ifc.GridPlacementDirectionSelect(new Direction(...))...</para><para>new ifc.GridPlacementDirectionSelect(new VirtualGridIntersection(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               GridPlacement(VirtualGridIntersection PlacementLocation,GridPlacementDirectionSelect PlacementRefDirection=null,string EndOfLineComment=null):base(){AddNext();this.PlacementLocation=PlacementLocation;this.PlacementRefDirection=PlacementRefDirection;this.EndOfLineComment=EndOfLineComment;}
public               GridPlacement(VirtualGridIntersection PlacementLocation):base(){AddNext();this.PlacementLocation=PlacementLocation;}
[ifc(1)] public VirtualGridIntersection PlacementLocation; //ENTITY
[ifc(2,optional=true)] public GridPlacementDirectionSelect PlacementRefDirection; //SELECT
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.Asset(...)</para><para>new ifc.Inventory(...)</para><para>new ifc.StructuralLoadGroup(...)</para><para>new ifc.StructuralResultGroup(...)</para><para>new ifc.System(...)</para><para>new ifc.Condition(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifckernel/lexical/ifcgroup.htm
[ifcSql(TypeGroupId:5,TypeId: 791,TableId:3)] public partial class Group:Object{//====================================================================================
public               Group():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Group(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.EndOfLineComment=EndOfLineComment;}
/// <summary>INVERSE: IsGroupedBy of RelAssignsToGroup for RelatingGroup</summary>
[ifcInverse(For:"RelatingGroup")] public LIST<RelAssignsToGroup> IsGroupedBy;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.BoxedHalfSpace(...)</para><para>new ifc.PolygonalBoundedHalfSpace(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricmodelresource/lexical/ifchalfspacesolid.htm
[ifcSql(TypeGroupId:5,TypeId: 792,TableId:3)] public partial class HalfSpaceSolid:GeometricRepresentationItem{//======================================================
public               HalfSpaceSolid():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="BaseSurface"><para>new ifc.CurveBoundedPlane(...)</para><para>new ifc.RectangularTrimmedSurface(...)</para><para>new ifc.Plane(...)</para></param>
/// <param name="AgreementFlag"><para>cast to (ifc.Boolean)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               HalfSpaceSolid(Surface BaseSurface,Boolean AgreementFlag,string EndOfLineComment=null):base(){AddNext();this.BaseSurface=BaseSurface;this.AgreementFlag=AgreementFlag;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Surface BaseSurface; //ENTITY
[ifc(2)] public Boolean AgreementFlag; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifcheatexchangertype.htm
[ifcSql(TypeGroupId:5,TypeId: 794,TableId:3)] public partial class HeatExchangerType:EnergyConversionDeviceType{//====================================================
public               HeatExchangerType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>HeatExchangerTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               HeatExchangerType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,HeatExchangerTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               HeatExchangerType(HeatExchangerTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public HeatExchangerTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifchumidifiertype.htm
[ifcSql(TypeGroupId:5,TypeId: 796,TableId:3)] public partial class HumidifierType:EnergyConversionDeviceType{//=======================================================
public               HumidifierType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>HumidifierTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               HumidifierType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,HumidifierTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               HumidifierType(HumidifierTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public HumidifierTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcprofileresource/lexical/ifcishapeprofiledef.htm
[ifcSql(TypeGroupId:5,TypeId: 797,TableId:3)] public partial class IShapeProfileDef:ParameterizedProfileDef{//========================================================
public               IShapeProfileDef():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ProfileType"><para>ProfileTypeEnum</para></param>
/// <param name="ProfileName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Position">[optional]<para>new ifc.Axis2Placement2D(...)</para></param>
/// <param name="OverallWidth"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="OverallDepth"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="WebThickness"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="FlangeThickness"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="FilletRadius">[optional]<para>cast to (ifc.NonNegativeLengthMeasure)...</para></param>
/// <param name="FlangeEdgeRadius">[optional]<para>cast to (ifc.NonNegativeLengthMeasure)...</para></param>
/// <param name="FlangeSlope">[optional]<para>cast to (ifc.PlaneAngleMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               IShapeProfileDef(ProfileTypeEnum ProfileType,Label ProfileName,Axis2Placement2D Position,PositiveLengthMeasure OverallWidth,PositiveLengthMeasure OverallDepth,PositiveLengthMeasure WebThickness,PositiveLengthMeasure FlangeThickness,NonNegativeLengthMeasure FilletRadius=null,NonNegativeLengthMeasure FlangeEdgeRadius=null,PlaneAngleMeasure FlangeSlope=null,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.ProfileName=ProfileName;this.Position=Position;this.OverallWidth=OverallWidth;this.OverallDepth=OverallDepth;this.WebThickness=WebThickness;this.FlangeThickness=FlangeThickness;this.FilletRadius=FilletRadius;this.FlangeEdgeRadius=FlangeEdgeRadius;this.FlangeSlope=FlangeSlope;this.EndOfLineComment=EndOfLineComment;}
public               IShapeProfileDef(ProfileTypeEnum ProfileType,PositiveLengthMeasure OverallWidth,PositiveLengthMeasure OverallDepth,PositiveLengthMeasure WebThickness,PositiveLengthMeasure FlangeThickness,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.OverallWidth=OverallWidth;this.OverallDepth=OverallDepth;this.WebThickness=WebThickness;this.FlangeThickness=FlangeThickness;this.EndOfLineComment=EndOfLineComment;}
[ifc(4)] public PositiveLengthMeasure OverallWidth; //TYPE
[ifc(5)] public PositiveLengthMeasure OverallDepth; //TYPE
[ifc(6)] public PositiveLengthMeasure WebThickness; //TYPE
[ifc(7)] public PositiveLengthMeasure FlangeThickness; //TYPE
[ifc(8,optional=true)] public NonNegativeLengthMeasure FilletRadius; //TYPE
[ifc(9,optional=true)] public NonNegativeLengthMeasure FlangeEdgeRadius; //TYPE
[ifc(10,optional=true)] public PlaneAngleMeasure FlangeSlope; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifcimagetexture.htm
[ifcSql(TypeGroupId:5,TypeId: 798,TableId:3)] public partial class ImageTexture:SurfaceTexture{//=====================================================================
public               ImageTexture():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="RepeatS"><para>cast to (ifc.Boolean)...</para></param>
/// <param name="RepeatT"><para>cast to (ifc.Boolean)...</para></param>
/// <param name="Mode">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="TextureTransform">[optional]<para>new ifc.CartesianTransformationOperator2D(...)</para><para>new ifc.CartesianTransformationOperator2DnonUniform(...)</para></param>
/// <param name="Parameter">[optional]<para>List1toUnbounded_Identifier</para></param>
/// <param name="URLReference"><para>cast to (ifc.URIReference)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ImageTexture(Boolean RepeatS,Boolean RepeatT,Identifier Mode,CartesianTransformationOperator2D TextureTransform,List1toUnbounded_Identifier Parameter,URIReference URLReference,string EndOfLineComment=null):base(){AddNext();this.RepeatS=RepeatS;this.RepeatT=RepeatT;this.Mode=Mode;this.TextureTransform=TextureTransform;this.Parameter=Parameter;this.URLReference=URLReference;this.EndOfLineComment=EndOfLineComment;}
public               ImageTexture(Boolean RepeatS,Boolean RepeatT,URIReference URLReference,string EndOfLineComment=null):base(){AddNext();this.RepeatS=RepeatS;this.RepeatT=RepeatT;this.URLReference=URLReference;this.EndOfLineComment=EndOfLineComment;}
[ifc(6)] public URIReference URLReference; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifcindexedcolourmap.htm
[ifcSql(TypeGroupId:5,TypeId: 799,TableId:3)] public partial class IndexedColourMap:PresentationItem{//===============================================================
public               IndexedColourMap():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="MappedTo"></param>
/// <param name="Overrides">[optional]<para>new ifc.SurfaceStyleShading(...)</para><para>new ifc.SurfaceStyleRendering(...)</para></param>
/// <param name="Colours"><para>new ifc.ColourRgbList(...)</para></param>
/// <param name="ColourIndex"><para>List1toUnbounded_PositiveInteger</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               IndexedColourMap(TessellatedFaceSet MappedTo,SurfaceStyleShading Overrides,ColourRgbList Colours,List1toUnbounded_PositiveInteger ColourIndex,string EndOfLineComment=null):base(){AddNext();this.MappedTo=MappedTo;this.Overrides=Overrides;this.Colours=Colours;this.ColourIndex=ColourIndex;this.EndOfLineComment=EndOfLineComment;}
public               IndexedColourMap(TessellatedFaceSet MappedTo,ColourRgbList Colours,List1toUnbounded_PositiveInteger ColourIndex):base(){AddNext();this.MappedTo=MappedTo;this.Colours=Colours;this.ColourIndex=ColourIndex;}
[ifc(1)] public TessellatedFaceSet MappedTo; //ENTITY
[ifc(2,optional=true)] public SurfaceStyleShading Overrides; //ENTITY
[ifc(3)] public ColourRgbList Colours; //ENTITY
[ifc(4)] public List1toUnbounded_PositiveInteger ColourIndex; //ListType1d
public override void AssignInverseElements(){if (MappedTo!=null) MappedTo.HasColours=this;
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 801,TableId:3)] public partial class IndexedTextureMap:TextureCoordinate{//=============================================================
public               IndexedTextureMap():base(){}// abstract
[ifc(2)] public TessellatedFaceSet MappedTo; //ENTITY
[ifc(3)] public TextureVertexList TexCoords; //ENTITY
public override void AssignInverseElements(){if (MappedTo!=null) {if (MappedTo.HasTextures==null) MappedTo.HasTextures=new LIST<IndexedTextureMap>();MappedTo.HasTextures.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcplumbingfireprotectiondomain/lexical/ifcinterceptor.htm
[ifcSql(TypeGroupId:5,TypeId: 803,TableId:3)] public partial class Interceptor:FlowTreatmentDevice{//=================================================================
public               Interceptor():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>InterceptorTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Interceptor(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,InterceptorTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public InterceptorTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcplumbingfireprotectiondomain/lexical/ifcinterceptortype.htm
[ifcSql(TypeGroupId:5,TypeId: 804,TableId:3)] public partial class InterceptorType:FlowTreatmentDeviceType{//=========================================================
public               InterceptorType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>InterceptorTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               InterceptorType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,InterceptorTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               InterceptorType(InterceptorTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public InterceptorTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedfacilitieselements/lexical/ifcinventory.htm
[ifcSql(TypeGroupId:5,TypeId: 805,TableId:3)] public partial class Inventory:Group{//=================================================================================
public               Inventory():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType">[optional]<para>InventoryTypeEnum</para></param>
/// <param name="Jurisdiction">[optional]<para>new ifc.ActorSelect(new Organization(...))...</para><para>new ifc.ActorSelect(new Person(...))...</para><para>new ifc.ActorSelect(new PersonAndOrganization(...))...</para></param>
/// <param name="ResponsiblePersons">[optional]<para>Set1toUnbounded_Person</para></param>
/// <param name="LastUpdateDate">[optional]<para>cast to (ifc.Date)...</para></param>
/// <param name="CurrentValue">[optional]<para>new ifc.CostValue(...)</para></param>
/// <param name="OriginalValue">[optional]<para>new ifc.CostValue(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Inventory(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,InventoryTypeEnum? PredefinedType=null,ActorSelect Jurisdiction=null,Set1toUnbounded_Person ResponsiblePersons=null,Date LastUpdateDate=null,CostValue CurrentValue=null,CostValue OriginalValue=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.PredefinedType=PredefinedType;this.Jurisdiction=Jurisdiction;this.ResponsiblePersons=ResponsiblePersons;this.LastUpdateDate=LastUpdateDate;this.CurrentValue=CurrentValue;this.OriginalValue=OriginalValue;this.EndOfLineComment=EndOfLineComment;}
[ifc(6,optional=true)] public InventoryTypeEnum? PredefinedType; //ENUM
[ifc(7,optional=true)] public ActorSelect Jurisdiction; //SELECT
[ifc(8,optional=true)] public Set1toUnbounded_Person ResponsiblePersons; //ListType1d
[ifc(9,optional=true)] public Date LastUpdateDate; //TYPE
[ifc(10,optional=true)] public CostValue CurrentValue; //ENTITY
[ifc(11,optional=true)] public CostValue OriginalValue; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcdatetimeresource/lexical/ifcirregulartimeseries.htm
[ifcSql(TypeGroupId:5,TypeId: 806,TableId:3)] public partial class IrregularTimeSeries:TimeSeries{//==================================================================
public               IrregularTimeSeries():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name"><para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="StartTime"><para>cast to (ifc.DateTime)...</para></param>
/// <param name="EndTime"><para>cast to (ifc.DateTime)...</para></param>
/// <param name="TimeSeriesDataType"><para>TimeSeriesDataTypeEnum</para></param>
/// <param name="DataOrigin"><para>DataOriginEnum</para></param>
/// <param name="UserDefinedDataOrigin">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Unit">[optional]<para>new ifc.Unit(new DerivedUnit(...))...</para><para>new ifc.Unit(new MonetaryUnit(...))...</para><para>new ifc.Unit(new NamedUnit(...))...</para></param>
/// <param name="Values"><para>List1toUnbounded_IrregularTimeSeriesValue</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               IrregularTimeSeries(Label Name,Text Description,DateTime StartTime,DateTime EndTime,TimeSeriesDataTypeEnum TimeSeriesDataType,DataOriginEnum DataOrigin,Label UserDefinedDataOrigin,Unit Unit,List1toUnbounded_IrregularTimeSeriesValue Values,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.StartTime=StartTime;this.EndTime=EndTime;this.TimeSeriesDataType=TimeSeriesDataType;this.DataOrigin=DataOrigin;this.UserDefinedDataOrigin=UserDefinedDataOrigin;this.Unit=Unit;this.Values=Values;this.EndOfLineComment=EndOfLineComment;}
public               IrregularTimeSeries(Label Name,DateTime StartTime,DateTime EndTime,TimeSeriesDataTypeEnum TimeSeriesDataType,DataOriginEnum DataOrigin,List1toUnbounded_IrregularTimeSeriesValue Values,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.StartTime=StartTime;this.EndTime=EndTime;this.TimeSeriesDataType=TimeSeriesDataType;this.DataOrigin=DataOrigin;this.Values=Values;this.EndOfLineComment=EndOfLineComment;}
[ifc(9)] public List1toUnbounded_IrregularTimeSeriesValue Values; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcdatetimeresource/lexical/ifcirregulartimeseriesvalue.htm
[ifcSql(TypeGroupId:5,TypeId: 807,TableId:3)] public partial class IrregularTimeSeriesValue:ENTITY{//=================================================================
public               IrregularTimeSeriesValue():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="TimeStamp"><para>cast to (ifc.DateTime)...</para></param>
/// <param name="ListValues"><para>List1toUnbounded_Value</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               IrregularTimeSeriesValue(DateTime TimeStamp,List1toUnbounded_Value ListValues,string EndOfLineComment=null):base(){AddNext();this.TimeStamp=TimeStamp;this.ListValues=ListValues;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public DateTime TimeStamp; //TYPE
[ifc(2)] public List1toUnbounded_Value ListValues; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcelectricaldomain/lexical/ifcjunctionboxtype.htm
[ifcSql(TypeGroupId:5,TypeId: 809,TableId:3)] public partial class JunctionBoxType:FlowFittingType{//=================================================================
public               JunctionBoxType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>JunctionBoxTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               JunctionBoxType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,JunctionBoxTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               JunctionBoxType(JunctionBoxTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public JunctionBoxTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcprofileresource/lexical/ifclshapeprofiledef.htm
[ifcSql(TypeGroupId:5,TypeId: 810,TableId:3)] public partial class LShapeProfileDef:ParameterizedProfileDef{//========================================================
public               LShapeProfileDef():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ProfileType"><para>ProfileTypeEnum</para></param>
/// <param name="ProfileName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Position">[optional]<para>new ifc.Axis2Placement2D(...)</para></param>
/// <param name="Depth"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="Width">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="Thickness"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="FilletRadius">[optional]<para>cast to (ifc.NonNegativeLengthMeasure)...</para></param>
/// <param name="EdgeRadius">[optional]<para>cast to (ifc.NonNegativeLengthMeasure)...</para></param>
/// <param name="LegSlope">[optional]<para>cast to (ifc.PlaneAngleMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               LShapeProfileDef(ProfileTypeEnum ProfileType,Label ProfileName,Axis2Placement2D Position,PositiveLengthMeasure Depth,PositiveLengthMeasure Width,PositiveLengthMeasure Thickness,NonNegativeLengthMeasure FilletRadius=null,NonNegativeLengthMeasure EdgeRadius=null,PlaneAngleMeasure LegSlope=null,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.ProfileName=ProfileName;this.Position=Position;this.Depth=Depth;this.Width=Width;this.Thickness=Thickness;this.FilletRadius=FilletRadius;this.EdgeRadius=EdgeRadius;this.LegSlope=LegSlope;this.EndOfLineComment=EndOfLineComment;}
public               LShapeProfileDef(ProfileTypeEnum ProfileType,PositiveLengthMeasure Depth,PositiveLengthMeasure Thickness,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.Depth=Depth;this.Thickness=Thickness;this.EndOfLineComment=EndOfLineComment;}
[ifc(4)] public PositiveLengthMeasure Depth; //TYPE
[ifc(5,optional=true)] public PositiveLengthMeasure Width; //TYPE
[ifc(6)] public PositiveLengthMeasure Thickness; //TYPE
[ifc(7,optional=true)] public NonNegativeLengthMeasure FilletRadius; //TYPE
[ifc(8,optional=true)] public NonNegativeLengthMeasure EdgeRadius; //TYPE
[ifc(9,optional=true)] public PlaneAngleMeasure LegSlope; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcconstructionmgmtdomain/lexical/ifclaborresource.htm
[ifcSql(TypeGroupId:5,TypeId: 811,TableId:3)] public partial class LaborResource:ConstructionResource{//==============================================================
public               LaborResource():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Identification">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="LongDescription">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="Usage">[optional]<para>new ifc.ResourceTime(...)</para></param>
/// <param name="BaseCosts">[optional]<para>List1toUnbounded_AppliedValue</para></param>
/// <param name="BaseQuantity">[optional]<para>new ifc.PhysicalComplexQuantity(...)</para></param>
/// <param name="PredefinedType">[optional]<para>LaborResourceTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               LaborResource(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,Identifier Identification=null,Text LongDescription=null,ResourceTime Usage=null,List1toUnbounded_AppliedValue BaseCosts=null,PhysicalQuantity BaseQuantity=null,LaborResourceTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.Identification=Identification;this.LongDescription=LongDescription;this.Usage=Usage;this.BaseCosts=BaseCosts;this.BaseQuantity=BaseQuantity;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(11,optional=true)] public LaborResourceTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcdatetimeresource/lexical/ifclagtime.htm
[ifcSql(TypeGroupId:5,TypeId: 813,TableId:3)] public partial class LagTime:SchedulingTime{//==========================================================================
public               LagTime():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="DataOrigin">[optional]<para>DataOriginEnum</para></param>
/// <param name="UserDefinedDataOrigin">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="LagValue"><para>new ifc.TimeOrRatioSelect(new Duration(...))...</para><para>new ifc.TimeOrRatioSelect(new RatioMeasure(...))...</para></param>
/// <param name="DurationType"><para>TaskDurationEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               LagTime(Label Name,DataOriginEnum? DataOrigin,Label UserDefinedDataOrigin,TimeOrRatioSelect LagValue,TaskDurationEnum DurationType,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.DataOrigin=DataOrigin;this.UserDefinedDataOrigin=UserDefinedDataOrigin;this.LagValue=LagValue;this.DurationType=DurationType;this.EndOfLineComment=EndOfLineComment;}
public               LagTime(TimeOrRatioSelect LagValue,TaskDurationEnum DurationType,string EndOfLineComment=null):base(){AddNext();this.LagValue=LagValue;this.DurationType=DurationType;this.EndOfLineComment=EndOfLineComment;}
[ifc(4)] public TimeOrRatioSelect LagValue; //SELECT
[ifc(5)] public TaskDurationEnum DurationType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcelectricaldomain/lexical/ifclamptype.htm
[ifcSql(TypeGroupId:5,TypeId: 815,TableId:3)] public partial class LampType:FlowTerminalType{//=======================================================================
public               LampType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>LampTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               LampType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,LampTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               LampType(LampTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public LampTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcexternalreferenceresource/lexical/ifclibraryinformation.htm
[ifcSql(TypeGroupId:5,TypeId: 816,TableId:3)] public partial class LibraryInformation:ExternalInformation{//==========================================================
public               LibraryInformation():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name"><para>cast to (ifc.Label)...</para></param>
/// <param name="Version">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Publisher">[optional]<para>new ifc.ActorSelect(new Organization(...))...</para><para>new ifc.ActorSelect(new Person(...))...</para><para>new ifc.ActorSelect(new PersonAndOrganization(...))...</para></param>
/// <param name="VersionDate">[optional]<para>cast to (ifc.DateTime)...</para></param>
/// <param name="Location">[optional]<para>cast to (ifc.URIReference)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               LibraryInformation(Label Name,Label Version=null,ActorSelect Publisher=null,DateTime VersionDate=null,URIReference Location=null,Text Description=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Version=Version;this.Publisher=Publisher;this.VersionDate=VersionDate;this.Location=Location;this.Description=Description;this.EndOfLineComment=EndOfLineComment;}
public               LibraryInformation(Label Name,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Label Name; //TYPE
[ifc(2,optional=true)] public Label Version; //TYPE
[ifc(3,optional=true)] public ActorSelect Publisher; //SELECT
[ifc(4,optional=true)] public DateTime VersionDate; //TYPE
[ifc(5,optional=true)] public URIReference Location; //TYPE
[ifc(6,optional=true)] public Text Description; //TYPE
/// <summary>INVERSE: HasLibraryReferences of LibraryReference for ReferencedLibrary</summary>
[ifcInverse(For:"ReferencedLibrary")] public LIST<LibraryReference> HasLibraryReferences;
/// <summary>INVERSE: LibraryInfoForObjects of RelAssociatesLibrary for RelatingLibrary</summary>
[ifcInverse(For:"RelatingLibrary")] public LIST<RelAssociatesLibrary> LibraryInfoForObjects;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcexternalreferenceresource/lexical/ifclibraryreference.htm
[ifcSql(TypeGroupId:5,TypeId: 817,TableId:3)] public partial class LibraryReference:ExternalReference{//==============================================================
public               LibraryReference():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Location">[optional]<para>cast to (ifc.URIReference)...</para></param>
/// <param name="Identification">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="Language">[optional]<para>cast to (ifc.LanguageId)...</para></param>
/// <param name="ReferencedLibrary">[optional]<para>new ifc.LibraryInformation(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               LibraryReference(URIReference Location=null,Identifier Identification=null,Label Name=null,Text Description=null,LanguageId Language=null,LibraryInformation ReferencedLibrary=null,string EndOfLineComment=null):base(){AddNext();this.Location=Location;this.Identification=Identification;this.Name=Name;this.Description=Description;this.Language=Language;this.ReferencedLibrary=ReferencedLibrary;this.EndOfLineComment=EndOfLineComment;}
[ifc(4,optional=true)] public Text Description; //TYPE
[ifc(5,optional=true)] public LanguageId Language; //TYPE
[ifc(6,optional=true)] public LibraryInformation ReferencedLibrary; //ENTITY
/// <summary>INVERSE: LibraryRefForObjects of RelAssociatesLibrary for RelatingLibrary</summary>
[ifcInverse(For:"RelatingLibrary")] public LIST<RelAssociatesLibrary> LibraryRefForObjects;
public override void AssignInverseElements(){if (ReferencedLibrary!=null) {if (ReferencedLibrary.HasLibraryReferences==null) ReferencedLibrary.HasLibraryReferences=new LIST<LibraryReference>();ReferencedLibrary.HasLibraryReferences.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationorganizationresource/lexical/ifclightdistributiondata.htm
[ifcSql(TypeGroupId:5,TypeId: 818,TableId:3)] public partial class LightDistributionData:ENTITY{//====================================================================
public               LightDistributionData():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="MainPlaneAngle"><para>cast to (ifc.PlaneAngleMeasure)...</para></param>
/// <param name="SecondaryPlaneAngle"><para>List1toUnbounded_PlaneAngleMeasure</para></param>
/// <param name="LuminousIntensity"><para>List1toUnbounded_LuminousIntensityDistributionMeasure</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               LightDistributionData(PlaneAngleMeasure MainPlaneAngle,List1toUnbounded_PlaneAngleMeasure SecondaryPlaneAngle,List1toUnbounded_LuminousIntensityDistributionMeasure LuminousIntensity,string EndOfLineComment=null):base(){AddNext();this.MainPlaneAngle=MainPlaneAngle;this.SecondaryPlaneAngle=SecondaryPlaneAngle;this.LuminousIntensity=LuminousIntensity;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public PlaneAngleMeasure MainPlaneAngle; //TYPE
[ifc(2)] public List1toUnbounded_PlaneAngleMeasure SecondaryPlaneAngle; //ListType1d
[ifc(3)] public List1toUnbounded_LuminousIntensityDistributionMeasure LuminousIntensity; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcelectricaldomain/lexical/ifclightfixturetype.htm
[ifcSql(TypeGroupId:5,TypeId: 820,TableId:3)] public partial class LightFixtureType:FlowTerminalType{//===============================================================
public               LightFixtureType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>LightFixtureTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               LightFixtureType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,LightFixtureTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               LightFixtureType(LightFixtureTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public LightFixtureTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationorganizationresource/lexical/ifclightintensitydistribution.htm
[ifcSql(TypeGroupId:5,TypeId: 821,TableId:3)] public partial class LightIntensityDistribution:ENTITY{//===============================================================
public               LightIntensityDistribution():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="LightDistributionCurve"><para>LightDistributionCurveEnum</para></param>
/// <param name="DistributionData"><para>List1toUnbounded_LightDistributionData</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               LightIntensityDistribution(LightDistributionCurveEnum LightDistributionCurve,List1toUnbounded_LightDistributionData DistributionData,string EndOfLineComment=null):base(){AddNext();this.LightDistributionCurve=LightDistributionCurve;this.DistributionData=DistributionData;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public LightDistributionCurveEnum LightDistributionCurve; //ENUM
[ifc(2)] public List1toUnbounded_LightDistributionData DistributionData; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.LightSourceAmbient(...)</para><para>new ifc.LightSourceDirectional(...)</para><para>new ifc.LightSourceGoniometric(...)</para><para>new ifc.LightSourcePositional(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 822,TableId:3)] public partial class LightSource:GeometricRepresentationItem{//=========================================================
public               LightSource():base(){}// abstract
[ifc(1,optional=true)] public Label Name; //TYPE
[ifc(2)] public ColourRgb LightColour; //ENTITY
[ifc(3,optional=true)] public NormalisedRatioMeasure AmbientIntensity; //TYPE
[ifc(4,optional=true)] public NormalisedRatioMeasure Intensity; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationorganizationresource/lexical/ifclightsourceambient.htm
[ifcSql(TypeGroupId:5,TypeId: 823,TableId:3)] public partial class LightSourceAmbient:LightSource{//==================================================================
public               LightSourceAmbient():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="LightColour"><para>new ifc.ColourRgb(...)</para></param>
/// <param name="AmbientIntensity">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="Intensity">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               LightSourceAmbient(Label Name,ColourRgb LightColour,NormalisedRatioMeasure AmbientIntensity=null,NormalisedRatioMeasure Intensity=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.LightColour=LightColour;this.AmbientIntensity=AmbientIntensity;this.Intensity=Intensity;this.EndOfLineComment=EndOfLineComment;}
public               LightSourceAmbient(ColourRgb LightColour,string EndOfLineComment=null):base(){AddNext();this.LightColour=LightColour;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationorganizationresource/lexical/ifclightsourcedirectional.htm
[ifcSql(TypeGroupId:5,TypeId: 824,TableId:3)] public partial class LightSourceDirectional:LightSource{//==============================================================
public               LightSourceDirectional():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="LightColour"><para>new ifc.ColourRgb(...)</para></param>
/// <param name="AmbientIntensity">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="Intensity">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="Orientation"><para>new ifc.Direction(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               LightSourceDirectional(Label Name,ColourRgb LightColour,NormalisedRatioMeasure AmbientIntensity,NormalisedRatioMeasure Intensity,Direction Orientation,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.LightColour=LightColour;this.AmbientIntensity=AmbientIntensity;this.Intensity=Intensity;this.Orientation=Orientation;this.EndOfLineComment=EndOfLineComment;}
public               LightSourceDirectional(ColourRgb LightColour,Direction Orientation,string EndOfLineComment=null):base(){AddNext();this.LightColour=LightColour;this.Orientation=Orientation;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public Direction Orientation; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationorganizationresource/lexical/ifclightsourcegoniometric.htm
[ifcSql(TypeGroupId:5,TypeId: 825,TableId:3)] public partial class LightSourceGoniometric:LightSource{//==============================================================
public               LightSourceGoniometric():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="LightColour"><para>new ifc.ColourRgb(...)</para></param>
/// <param name="AmbientIntensity">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="Intensity">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="Position"><para>new ifc.Axis2Placement3D(...)</para></param>
/// <param name="ColourAppearance">[optional]<para>new ifc.ColourRgb(...)</para></param>
/// <param name="ColourTemperature"><para>cast to (ifc.ThermodynamicTemperatureMeasure)...</para></param>
/// <param name="LuminousFlux"><para>cast to (ifc.LuminousFluxMeasure)...</para></param>
/// <param name="LightEmissionSource"><para>LightEmissionSourceEnum</para></param>
/// <param name="LightDistributionDataSource"><para>new ifc.LightDistributionDataSourceSelect(new ExternalReference(...))...</para><para>new ifc.LightDistributionDataSourceSelect(new LightIntensityDistribution(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               LightSourceGoniometric(Label Name,ColourRgb LightColour,NormalisedRatioMeasure AmbientIntensity,NormalisedRatioMeasure Intensity,Axis2Placement3D Position,ColourRgb ColourAppearance,ThermodynamicTemperatureMeasure ColourTemperature,LuminousFluxMeasure LuminousFlux,LightEmissionSourceEnum LightEmissionSource,LightDistributionDataSourceSelect LightDistributionDataSource,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.LightColour=LightColour;this.AmbientIntensity=AmbientIntensity;this.Intensity=Intensity;this.Position=Position;this.ColourAppearance=ColourAppearance;this.ColourTemperature=ColourTemperature;this.LuminousFlux=LuminousFlux;this.LightEmissionSource=LightEmissionSource;this.LightDistributionDataSource=LightDistributionDataSource;this.EndOfLineComment=EndOfLineComment;}
public               LightSourceGoniometric(ColourRgb LightColour,Axis2Placement3D Position,ThermodynamicTemperatureMeasure ColourTemperature,LuminousFluxMeasure LuminousFlux,LightEmissionSourceEnum LightEmissionSource,LightDistributionDataSourceSelect LightDistributionDataSource,string EndOfLineComment=null):base(){AddNext();this.LightColour=LightColour;this.Position=Position;this.ColourTemperature=ColourTemperature;this.LuminousFlux=LuminousFlux;this.LightEmissionSource=LightEmissionSource;this.LightDistributionDataSource=LightDistributionDataSource;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public Axis2Placement3D Position; //ENTITY
[ifc(6,optional=true)] public ColourRgb ColourAppearance; //ENTITY
[ifc(7)] public ThermodynamicTemperatureMeasure ColourTemperature; //TYPE
[ifc(8)] public LuminousFluxMeasure LuminousFlux; //TYPE
[ifc(9)] public LightEmissionSourceEnum LightEmissionSource; //ENUM
[ifc(10)] public LightDistributionDataSourceSelect LightDistributionDataSource; //SELECT
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.LightSourceSpot(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationorganizationresource/lexical/ifclightsourcepositional.htm
[ifcSql(TypeGroupId:5,TypeId: 826,TableId:3)] public partial class LightSourcePositional:LightSource{//===============================================================
public               LightSourcePositional():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="LightColour"><para>new ifc.ColourRgb(...)</para></param>
/// <param name="AmbientIntensity">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="Intensity">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="Position"><para>new ifc.CartesianPoint(...)</para></param>
/// <param name="Radius"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="ConstantAttenuation"><para>cast to (ifc.Real)...</para></param>
/// <param name="DistanceAttenuation"><para>cast to (ifc.Real)...</para></param>
/// <param name="QuadricAttenuation"><para>cast to (ifc.Real)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               LightSourcePositional(Label Name,ColourRgb LightColour,NormalisedRatioMeasure AmbientIntensity,NormalisedRatioMeasure Intensity,CartesianPoint Position,PositiveLengthMeasure Radius,Real ConstantAttenuation,Real DistanceAttenuation,Real QuadricAttenuation,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.LightColour=LightColour;this.AmbientIntensity=AmbientIntensity;this.Intensity=Intensity;this.Position=Position;this.Radius=Radius;this.ConstantAttenuation=ConstantAttenuation;this.DistanceAttenuation=DistanceAttenuation;this.QuadricAttenuation=QuadricAttenuation;this.EndOfLineComment=EndOfLineComment;}
public               LightSourcePositional(ColourRgb LightColour,CartesianPoint Position,PositiveLengthMeasure Radius,Real ConstantAttenuation,Real DistanceAttenuation,Real QuadricAttenuation,string EndOfLineComment=null):base(){AddNext();this.LightColour=LightColour;this.Position=Position;this.Radius=Radius;this.ConstantAttenuation=ConstantAttenuation;this.DistanceAttenuation=DistanceAttenuation;this.QuadricAttenuation=QuadricAttenuation;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public CartesianPoint Position; //ENTITY
[ifc(6)] public PositiveLengthMeasure Radius; //TYPE
[ifc(7)] public Real ConstantAttenuation; //TYPE
[ifc(8)] public Real DistanceAttenuation; //TYPE
[ifc(9)] public Real QuadricAttenuation; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationorganizationresource/lexical/ifclightsourcespot.htm
[ifcSql(TypeGroupId:5,TypeId: 827,TableId:3)] public partial class LightSourceSpot:LightSourcePositional{//===========================================================
public               LightSourceSpot():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="LightColour"><para>new ifc.ColourRgb(...)</para></param>
/// <param name="AmbientIntensity">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="Intensity">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="Position"><para>new ifc.CartesianPoint(...)</para></param>
/// <param name="Radius"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="ConstantAttenuation"><para>cast to (ifc.Real)...</para></param>
/// <param name="DistanceAttenuation"><para>cast to (ifc.Real)...</para></param>
/// <param name="QuadricAttenuation"><para>cast to (ifc.Real)...</para></param>
/// <param name="Orientation"><para>new ifc.Direction(...)</para></param>
/// <param name="ConcentrationExponent">[optional]<para>cast to (ifc.Real)...</para></param>
/// <param name="SpreadAngle"><para>cast to (ifc.PositivePlaneAngleMeasure)...</para></param>
/// <param name="BeamWidthAngle"><para>cast to (ifc.PositivePlaneAngleMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               LightSourceSpot(Label Name,ColourRgb LightColour,NormalisedRatioMeasure AmbientIntensity,NormalisedRatioMeasure Intensity,CartesianPoint Position,PositiveLengthMeasure Radius,Real ConstantAttenuation,Real DistanceAttenuation,Real QuadricAttenuation,Direction Orientation,Real ConcentrationExponent,PositivePlaneAngleMeasure SpreadAngle,PositivePlaneAngleMeasure BeamWidthAngle,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.LightColour=LightColour;this.AmbientIntensity=AmbientIntensity;this.Intensity=Intensity;this.Position=Position;this.Radius=Radius;this.ConstantAttenuation=ConstantAttenuation;this.DistanceAttenuation=DistanceAttenuation;this.QuadricAttenuation=QuadricAttenuation;this.Orientation=Orientation;this.ConcentrationExponent=ConcentrationExponent;this.SpreadAngle=SpreadAngle;this.BeamWidthAngle=BeamWidthAngle;this.EndOfLineComment=EndOfLineComment;}
public               LightSourceSpot(ColourRgb LightColour,CartesianPoint Position,PositiveLengthMeasure Radius,Real ConstantAttenuation,Real DistanceAttenuation,Real QuadricAttenuation,Direction Orientation,PositivePlaneAngleMeasure SpreadAngle,PositivePlaneAngleMeasure BeamWidthAngle,string EndOfLineComment=null):base(){AddNext();this.LightColour=LightColour;this.Position=Position;this.Radius=Radius;this.ConstantAttenuation=ConstantAttenuation;this.DistanceAttenuation=DistanceAttenuation;this.QuadricAttenuation=QuadricAttenuation;this.Orientation=Orientation;this.SpreadAngle=SpreadAngle;this.BeamWidthAngle=BeamWidthAngle;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public Direction Orientation; //ENTITY
[ifc(11,optional=true)] public Real ConcentrationExponent; //TYPE
[ifc(12)] public PositivePlaneAngleMeasure SpreadAngle; //TYPE
[ifc(13)] public PositivePlaneAngleMeasure BeamWidthAngle; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometryresource/lexical/ifcline.htm
[ifcSql(TypeGroupId:5,TypeId: 828,TableId:3)] public partial class Line:Curve{//======================================================================================
public               Line():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Pnt"><para>new ifc.CartesianPoint(...)</para></param>
/// <param name="Dir"><para>new ifc.Vector(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Line(CartesianPoint Pnt,Vector Dir,string EndOfLineComment=null):base(){AddNext();this.Pnt=Pnt;this.Dir=Dir;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public CartesianPoint Pnt; //ENTITY
[ifc(2)] public Vector Dir; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricconstraintresource/lexical/ifclocalplacement.htm
[ifcSql(TypeGroupId:5,TypeId: 830,TableId:3)] public partial class LocalPlacement:ObjectPlacement{//==================================================================
public               LocalPlacement():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="PlacementRelTo">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="RelativePlacement"><para>new ifc.Axis2Placement(new Axis2Placement2D(...))...</para><para>new ifc.Axis2Placement(new Axis2Placement3D(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               LocalPlacement(ObjectPlacement PlacementRelTo,Axis2Placement RelativePlacement,string EndOfLineComment=null):base(){AddNext();this.PlacementRelTo=PlacementRelTo;this.RelativePlacement=RelativePlacement;this.EndOfLineComment=EndOfLineComment;}
public               LocalPlacement(Axis2Placement RelativePlacement):base(){AddNext();this.RelativePlacement=RelativePlacement;}
[ifc(1,optional=true)] public ObjectPlacement PlacementRelTo; //ENTITY
[ifc(2)] public Axis2Placement RelativePlacement; //SELECT
public override void AssignInverseElements(){if (PlacementRelTo!=null) {if (PlacementRelTo.ReferencedByPlacements==null) PlacementRelTo.ReferencedByPlacements=new LIST<LocalPlacement>();PlacementRelTo.ReferencedByPlacements.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.EdgeLoop(...)</para><para>new ifc.PolyLoop(...)</para><para>new ifc.VertexLoop(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifctopologyresource/lexical/ifcloop.htm
[ifcSql(TypeGroupId:5,TypeId: 831,TableId:3)] public partial class Loop:TopologicalRepresentationItem{//==============================================================
public               Loop():base(){}
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.FacetedBrep(...)</para><para>new ifc.FacetedBrepWithVoids(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 832,TableId:3)] public partial class ManifoldSolidBrep:SolidModel{//====================================================================
public               ManifoldSolidBrep():base(){}// abstract
[ifc(1)] public ClosedShell Outer; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometryresource/lexical/ifcmappeditem.htm
[ifcSql(TypeGroupId:5,TypeId: 834,TableId:3)] public partial class MappedItem:RepresentationItem{//===================================================================
public               MappedItem():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="MappingSource"><para>new ifc.RepresentationMap(...)</para></param>
/// <param name="MappingTarget"><para>new ifc.CartesianTransformationOperator2D(...)</para><para>new ifc.CartesianTransformationOperator3D(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               MappedItem(RepresentationMap MappingSource,CartesianTransformationOperator MappingTarget,string EndOfLineComment=null):base(){AddNext();this.MappingSource=MappingSource;this.MappingTarget=MappingTarget;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public RepresentationMap MappingSource; //ENTITY
[ifc(2)] public CartesianTransformationOperator MappingTarget; //ENTITY
public override void AssignInverseElements(){if (MappingSource!=null) {if (MappingSource.MapUsage==null) MappingSource.MapUsage=new LIST<MappedItem>();MappingSource.MapUsage.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcmaterialresource/lexical/ifcmaterial.htm
[ifcSql(TypeGroupId:5,TypeId: 835,TableId:3)] public partial class Material:MaterialDefinition{//=====================================================================
public               Material():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name"><para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="Category">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Material(Label Name,Text Description=null,Label Category=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.Category=Category;this.EndOfLineComment=EndOfLineComment;}
public               Material(Label Name,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Label Name; //TYPE
[ifc(2,optional=true)] public Text Description; //TYPE
[ifc(3,optional=true)] public Label Category; //TYPE
/// <summary>INVERSE: HasRepresentation of MaterialDefinitionRepresentation for RepresentedMaterial</summary>
[ifcInverse(For:"RepresentedMaterial")] public MaterialDefinitionRepresentation HasRepresentation;
/// <summary>INVERSE: RelatesTo of MaterialRelationship for RelatingMaterial</summary>
[ifcInverse(For:"RelatingMaterial")] public MaterialRelationship RelatesTo;
/// <summary>INVERSE: IsRelatedWith of MaterialRelationship for RelatedMaterials</summary>
[ifcInverse(For:"RelatedMaterials")] public LIST<MaterialRelationship> IsRelatedWith;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcmaterialresource/lexical/ifcmaterialclassificationrelationship.htm
[ifcSql(TypeGroupId:5,TypeId: 836,TableId:3)] public partial class MaterialClassificationRelationship:ENTITY{//=======================================================
public               MaterialClassificationRelationship():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="MaterialClassifications"><para>Set1toUnbounded_ClassificationSelect</para></param>
/// <param name="ClassifiedMaterial"><para>new ifc.Material(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               MaterialClassificationRelationship(Set1toUnbounded_ClassificationSelect MaterialClassifications,Material ClassifiedMaterial,string EndOfLineComment=null):base(){AddNext();this.MaterialClassifications=MaterialClassifications;this.ClassifiedMaterial=ClassifiedMaterial;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Set1toUnbounded_ClassificationSelect MaterialClassifications; //ListType1d
[ifc(2)] public Material ClassifiedMaterial; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcmaterialresource/lexical/ifcmaterialconstituent.htm
[ifcSql(TypeGroupId:5,TypeId: 837,TableId:3)] public partial class MaterialConstituent:MaterialDefinition{//==========================================================
public               MaterialConstituent():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="_Material"><para>new ifc.Material(...)</para></param>
/// <param name="Fraction">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="Category">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               MaterialConstituent(Label Name,Text Description,Material _Material,NormalisedRatioMeasure Fraction=null,Label Category=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this._Material=_Material;this.Fraction=Fraction;this.Category=Category;this.EndOfLineComment=EndOfLineComment;}
public               MaterialConstituent(Material _Material,string EndOfLineComment=null):base(){AddNext();this._Material=_Material;this.EndOfLineComment=EndOfLineComment;}
[ifc(1,optional=true)] public Label Name; //TYPE
[ifc(2,optional=true)] public Text Description; //TYPE
[ifc(3)] public Material _Material; //ENTITY
[ifc(4,optional=true)] public NormalisedRatioMeasure Fraction; //TYPE
[ifc(5,optional=true)] public Label Category; //TYPE
/// <summary>INVERSE: ToMaterialConstituentSet of MaterialConstituentSet for MaterialConstituents</summary>
[ifcInverse(For:"MaterialConstituents")] public MaterialConstituentSet ToMaterialConstituentSet;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcmaterialresource/lexical/ifcmaterialconstituentset.htm
[ifcSql(TypeGroupId:5,TypeId: 838,TableId:3)] public partial class MaterialConstituentSet:MaterialDefinition{//=======================================================
public               MaterialConstituentSet():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="MaterialConstituents">[optional]<para>Set1toUnbounded_MaterialConstituent</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               MaterialConstituentSet(Label Name=null,Text Description=null,Set1toUnbounded_MaterialConstituent MaterialConstituents=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.MaterialConstituents=MaterialConstituents;this.EndOfLineComment=EndOfLineComment;}
[ifc(1,optional=true)] public Label Name; //TYPE
[ifc(2,optional=true)] public Text Description; //TYPE
[ifc(3,optional=true)] public Set1toUnbounded_MaterialConstituent MaterialConstituents; //ListType1d
public override void AssignInverseElements(){if (MaterialConstituents!=null) foreach (MaterialConstituent __MaterialConstituent in MaterialConstituents) if (__MaterialConstituent is MaterialConstituent) ((MaterialConstituent)__MaterialConstituent).ToMaterialConstituentSet=this;
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.Material(...)</para><para>new ifc.MaterialConstituent(...)</para><para>new ifc.MaterialConstituentSet(...)</para><para>new ifc.MaterialLayer(...)</para><para>new ifc.MaterialLayerSet(...)</para><para>new ifc.MaterialProfile(...)</para><para>new ifc.MaterialProfileSet(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 839,TableId:3)] public partial class MaterialDefinition:ENTITY{//=======================================================================
public               MaterialDefinition():base(){}// abstract
/// <summary>INVERSE: HasExternalReferences of ExternalReferenceRelationship for RelatedResourceObjects</summary>
[ifcInverse(For:"RelatedResourceObjects")] public LIST<ExternalReferenceRelationship> HasExternalReferences;
/// <summary>INVERSE: HasProperties of MaterialProperties for _Material</summary>
[ifcInverse(For:"_Material")] public LIST<MaterialProperties> HasProperties;
/// <summary>INVERSE: AssociatedTo of RelAssociatesMaterial for RelatingMaterial</summary>
[ifcInverse(For:"RelatingMaterial")] public LIST<RelAssociatesMaterial> AssociatedTo;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcrepresentationresource/lexical/ifcmaterialdefinitionrepresentation.htm
[ifcSql(TypeGroupId:5,TypeId: 840,TableId:3)] public partial class MaterialDefinitionRepresentation:ProductRepresentation{//==========================================
public               MaterialDefinitionRepresentation():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="Representations"><para>List1toUnbounded_Representation</para></param>
/// <param name="RepresentedMaterial"><para>new ifc.Material(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               MaterialDefinitionRepresentation(Label Name,Text Description,List1toUnbounded_Representation Representations,Material RepresentedMaterial,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.Representations=Representations;this.RepresentedMaterial=RepresentedMaterial;this.EndOfLineComment=EndOfLineComment;}
public               MaterialDefinitionRepresentation(List1toUnbounded_Representation Representations,Material RepresentedMaterial,string EndOfLineComment=null):base(){AddNext();this.Representations=Representations;this.RepresentedMaterial=RepresentedMaterial;this.EndOfLineComment=EndOfLineComment;}
[ifc(4)] public Material RepresentedMaterial; //ENTITY
public override void AssignInverseElements(){if (RepresentedMaterial!=null) RepresentedMaterial.HasRepresentation=this;
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcmaterialresource/lexical/ifcmateriallayer.htm
[ifcSql(TypeGroupId:5,TypeId: 841,TableId:3)] public partial class MaterialLayer:MaterialDefinition{//================================================================
public               MaterialLayer():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="_Material">[optional]<para>new ifc.Material(...)</para></param>
/// <param name="LayerThickness"><para>cast to (ifc.NonNegativeLengthMeasure)...</para></param>
/// <param name="IsVentilated">[optional]<para>cast to (ifc.Logical)...</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="Category">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Priority">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               MaterialLayer(Material _Material,NonNegativeLengthMeasure LayerThickness,Logical IsVentilated=null,Label Name=null,Text Description=null,Label Category=null,NormalisedRatioMeasure Priority=null,string EndOfLineComment=null):base(){AddNext();this._Material=_Material;this.LayerThickness=LayerThickness;this.IsVentilated=IsVentilated;this.Name=Name;this.Description=Description;this.Category=Category;this.Priority=Priority;this.EndOfLineComment=EndOfLineComment;}
public               MaterialLayer(NonNegativeLengthMeasure LayerThickness,string EndOfLineComment=null):base(){AddNext();this.LayerThickness=LayerThickness;this.EndOfLineComment=EndOfLineComment;}
[ifc(1,optional=true)] public Material _Material; //ENTITY
[ifc(2)] public NonNegativeLengthMeasure LayerThickness; //TYPE
[ifc(3,optional=true)] public Logical IsVentilated; //TYPE
[ifc(4,optional=true)] public Label Name; //TYPE
[ifc(5,optional=true)] public Text Description; //TYPE
[ifc(6,optional=true)] public Label Category; //TYPE
[ifc(7,optional=true)] public NormalisedRatioMeasure Priority; //TYPE
/// <summary>INVERSE: ToMaterialLayerSet of MaterialLayerSet for MaterialLayers</summary>
[ifcInverse(For:"MaterialLayers")] public MaterialLayerSet ToMaterialLayerSet;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcmaterialresource/lexical/ifcmateriallayerset.htm
[ifcSql(TypeGroupId:5,TypeId: 842,TableId:3)] public partial class MaterialLayerSet:MaterialDefinition{//=============================================================
public               MaterialLayerSet():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="MaterialLayers"><para>List1toUnbounded_MaterialLayer</para></param>
/// <param name="LayerSetName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               MaterialLayerSet(List1toUnbounded_MaterialLayer MaterialLayers,Label LayerSetName=null,Text Description=null,string EndOfLineComment=null):base(){AddNext();this.MaterialLayers=MaterialLayers;this.LayerSetName=LayerSetName;this.Description=Description;this.EndOfLineComment=EndOfLineComment;}
public               MaterialLayerSet(List1toUnbounded_MaterialLayer MaterialLayers,string EndOfLineComment=null):base(){AddNext();this.MaterialLayers=MaterialLayers;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public List1toUnbounded_MaterialLayer MaterialLayers; //ListType1d
[ifc(2,optional=true)] public Label LayerSetName; //TYPE
[ifc(3,optional=true)] public Text Description; //TYPE
public override void AssignInverseElements(){if (MaterialLayers!=null) foreach (MaterialLayer __MaterialLayer in MaterialLayers) if (__MaterialLayer is MaterialLayer) ((MaterialLayer)__MaterialLayer).ToMaterialLayerSet=this;
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcmaterialresource/lexical/ifcmateriallayersetusage.htm
[ifcSql(TypeGroupId:5,TypeId: 843,TableId:3)] public partial class MaterialLayerSetUsage:MaterialUsageDefinition{//===================================================
public               MaterialLayerSetUsage():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ForLayerSet"><para>new ifc.MaterialLayerSet(...)</para></param>
/// <param name="LayerSetDirection"><para>LayerSetDirectionEnum</para></param>
/// <param name="DirectionSense"><para>DirectionSenseEnum</para></param>
/// <param name="OffsetFromReferenceLine"><para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="ReferenceExtent">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               MaterialLayerSetUsage(MaterialLayerSet ForLayerSet,LayerSetDirectionEnum LayerSetDirection,DirectionSenseEnum DirectionSense,LengthMeasure OffsetFromReferenceLine,PositiveLengthMeasure ReferenceExtent=null,string EndOfLineComment=null):base(){AddNext();this.ForLayerSet=ForLayerSet;this.LayerSetDirection=LayerSetDirection;this.DirectionSense=DirectionSense;this.OffsetFromReferenceLine=OffsetFromReferenceLine;this.ReferenceExtent=ReferenceExtent;this.EndOfLineComment=EndOfLineComment;}
public               MaterialLayerSetUsage(MaterialLayerSet ForLayerSet,LayerSetDirectionEnum LayerSetDirection,DirectionSenseEnum DirectionSense,LengthMeasure OffsetFromReferenceLine):base(){AddNext();this.ForLayerSet=ForLayerSet;this.LayerSetDirection=LayerSetDirection;this.DirectionSense=DirectionSense;this.OffsetFromReferenceLine=OffsetFromReferenceLine;}
[ifc(1)] public MaterialLayerSet ForLayerSet; //ENTITY
[ifc(2)] public LayerSetDirectionEnum LayerSetDirection; //ENUM
[ifc(3)] public DirectionSenseEnum DirectionSense; //ENUM
[ifc(4)] public LengthMeasure OffsetFromReferenceLine; //TYPE
[ifc(5,optional=true)] public PositiveLengthMeasure ReferenceExtent; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcmaterialresource/lexical/ifcmateriallist.htm
[ifcSql(TypeGroupId:5,TypeId: 845,TableId:3)] public partial class MaterialList:ENTITY{//=============================================================================
public               MaterialList():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Materials"><para>List1toUnbounded_Material</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               MaterialList(List1toUnbounded_Material Materials,string EndOfLineComment=null):base(){AddNext();this.Materials=Materials;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public List1toUnbounded_Material Materials; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcmaterialresource/lexical/ifcmaterialprofile.htm
[ifcSql(TypeGroupId:5,TypeId: 846,TableId:3)] public partial class MaterialProfile:MaterialDefinition{//==============================================================
public               MaterialProfile():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="_Material">[optional]<para>new ifc.Material(...)</para></param>
/// <param name="Profile"><para>new ifc.ProfileDef(...)</para><para>new ifc.ArbitraryClosedProfileDef(...)</para><para>new ifc.ArbitraryProfileDefWithVoids(...)</para><para>new ifc.ArbitraryOpenProfileDef(...)</para><para>new ifc.CenterLineProfileDef(...)</para><para>new ifc.CompositeProfileDef(...)</para><para>new ifc.DerivedProfileDef(...)</para><para>new ifc.AsymmetricIShapeProfileDef(...)</para><para>new ifc.CShapeProfileDef(...)</para><para>new ifc.CircleProfileDef(...)</para><para>new ifc.CircleHollowProfileDef(...)</para><para>new ifc.EllipseProfileDef(...)</para><para>new ifc.IShapeProfileDef(...)</para><para>new ifc.LShapeProfileDef(...)</para><para>new ifc.RectangleProfileDef(...)</para><para>new ifc.TShapeProfileDef(...)</para><para>new ifc.TrapeziumProfileDef(...)</para><para>new ifc.UShapeProfileDef(...)</para><para>new ifc.ZShapeProfileDef(...)</para><para>new ifc.CraneRailAShapeProfileDef(...)</para><para>new ifc.CraneRailFShapeProfileDef(...)</para></param>
/// <param name="Priority">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="Category">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               MaterialProfile(Label Name,Text Description,Material _Material,ProfileDef Profile,NormalisedRatioMeasure Priority=null,Label Category=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this._Material=_Material;this.Profile=Profile;this.Priority=Priority;this.Category=Category;this.EndOfLineComment=EndOfLineComment;}
public               MaterialProfile(ProfileDef Profile,string EndOfLineComment=null):base(){AddNext();this.Profile=Profile;this.EndOfLineComment=EndOfLineComment;}
[ifc(1,optional=true)] public Label Name; //TYPE
[ifc(2,optional=true)] public Text Description; //TYPE
[ifc(3,optional=true)] public Material _Material; //ENTITY
[ifc(4)] public ProfileDef Profile; //ENTITY
[ifc(5,optional=true)] public NormalisedRatioMeasure Priority; //TYPE
[ifc(6,optional=true)] public Label Category; //TYPE
/// <summary>INVERSE: ToMaterialProfileSet of MaterialProfileSet for MaterialProfiles</summary>
[ifcInverse(For:"MaterialProfiles")] public MaterialProfileSet ToMaterialProfileSet;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcmaterialresource/lexical/ifcmaterialprofileset.htm
[ifcSql(TypeGroupId:5,TypeId: 847,TableId:3)] public partial class MaterialProfileSet:MaterialDefinition{//===========================================================
public               MaterialProfileSet():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="MaterialProfiles"><para>List1toUnbounded_MaterialProfile</para></param>
/// <param name="CompositeProfile">[optional]<para>new ifc.CompositeProfileDef(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               MaterialProfileSet(Label Name,Text Description,List1toUnbounded_MaterialProfile MaterialProfiles,CompositeProfileDef CompositeProfile=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.MaterialProfiles=MaterialProfiles;this.CompositeProfile=CompositeProfile;this.EndOfLineComment=EndOfLineComment;}
public               MaterialProfileSet(List1toUnbounded_MaterialProfile MaterialProfiles,string EndOfLineComment=null):base(){AddNext();this.MaterialProfiles=MaterialProfiles;this.EndOfLineComment=EndOfLineComment;}
[ifc(1,optional=true)] public Label Name; //TYPE
[ifc(2,optional=true)] public Text Description; //TYPE
[ifc(3)] public List1toUnbounded_MaterialProfile MaterialProfiles; //ListType1d
[ifc(4,optional=true)] public CompositeProfileDef CompositeProfile; //ENTITY
public override void AssignInverseElements(){if (MaterialProfiles!=null) foreach (MaterialProfile __MaterialProfile in MaterialProfiles) if (__MaterialProfile is MaterialProfile) ((MaterialProfile)__MaterialProfile).ToMaterialProfileSet=this;
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ExtendedMaterialProperties(...)</para><para>new ifc.FuelProperties(...)</para><para>new ifc.GeneralMaterialProperties(...)</para><para>new ifc.HygroscopicMaterialProperties(...)</para><para>new ifc.MechanicalMaterialProperties(...)</para><para>new ifc.OpticalMaterialProperties(...)</para><para>new ifc.ProductsOfCombustionProperties(...)</para><para>new ifc.ThermalMaterialProperties(...)</para><para>new ifc.WaterProperties(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcmaterialresource/lexical/ifcmaterialproperties.htm
[ifcSql(TypeGroupId:5,TypeId: 851,TableId:3)] public partial class MaterialProperties:ExtendedProperties{//===========================================================
public               MaterialProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="Properties"><para>Set1toUnbounded_Property</para></param>
/// <param name="_Material"><para>new ifc.Material(...)</para><para>new ifc.MaterialConstituent(...)</para><para>new ifc.MaterialConstituentSet(...)</para><para>new ifc.MaterialLayer(...)</para><para>new ifc.MaterialLayerSet(...)</para><para>new ifc.MaterialProfile(...)</para><para>new ifc.MaterialProfileSet(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               MaterialProperties(Identifier Name,Text Description,Set1toUnbounded_Property Properties,MaterialDefinition _Material,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.Properties=Properties;this._Material=_Material;this.EndOfLineComment=EndOfLineComment;}
public               MaterialProperties(Set1toUnbounded_Property Properties,MaterialDefinition _Material,string EndOfLineComment=null):base(){AddNext();this.Properties=Properties;this._Material=_Material;this.EndOfLineComment=EndOfLineComment;}
[ifc(4)] public MaterialDefinition _Material; //ENTITY
public override void AssignInverseElements(){if (_Material!=null) {if (_Material.HasProperties==null) _Material.HasProperties=new LIST<MaterialProperties>();_Material.HasProperties.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcmaterialresource/lexical/ifcmaterialrelationship.htm
[ifcSql(TypeGroupId:5,TypeId: 852,TableId:3)] public partial class MaterialRelationship:ResourceLevelRelationship{//==================================================
public               MaterialRelationship():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatingMaterial"><para>new ifc.Material(...)</para></param>
/// <param name="RelatedMaterials"><para>Set1toUnbounded_Material</para></param>
/// <param name="Expression">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               MaterialRelationship(Label Name,Text Description,Material RelatingMaterial,Set1toUnbounded_Material RelatedMaterials,Label Expression=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.RelatingMaterial=RelatingMaterial;this.RelatedMaterials=RelatedMaterials;this.Expression=Expression;this.EndOfLineComment=EndOfLineComment;}
public               MaterialRelationship(Material RelatingMaterial,Set1toUnbounded_Material RelatedMaterials,string EndOfLineComment=null):base(){AddNext();this.RelatingMaterial=RelatingMaterial;this.RelatedMaterials=RelatedMaterials;this.EndOfLineComment=EndOfLineComment;}
[ifc(3)] public Material RelatingMaterial; //ENTITY
[ifc(4)] public Set1toUnbounded_Material RelatedMaterials; //ListType1d
[ifc(5,optional=true)] public Label Expression; //TYPE
public override void AssignInverseElements(){if (RelatingMaterial!=null) RelatingMaterial.RelatesTo=this;
                                             if (RelatedMaterials!=null) foreach (Material __Material in RelatedMaterials) if (__Material is Material) {if (((Material)__Material).IsRelatedWith==null) ((Material)__Material).IsRelatedWith=new LIST<MaterialRelationship>();((Material)__Material).IsRelatedWith.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.MaterialLayerSetUsage(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 853,TableId:3)] public partial class MaterialUsageDefinition:ENTITY{//==================================================================
public               MaterialUsageDefinition():base(){}// abstract
/// <summary>INVERSE: AssociatedTo of RelAssociatesMaterial for RelatingMaterial</summary>
[ifcInverse(For:"RelatingMaterial")] public LIST<RelAssociatesMaterial> AssociatedTo;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcmeasureresource/lexical/ifcmeasurewithunit.htm
[ifcSql(TypeGroupId:5,TypeId: 854,TableId:3)] public partial class MeasureWithUnit:ENTITY{//==========================================================================
public               MeasureWithUnit():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ValueComponent"><para>new ifc.Value(new AbsorbedDoseMeasure(...))...</para><para>new ifc.Value(new AccelerationMeasure(...))...</para><para>new ifc.Value(new AmountOfSubstanceMeasure(...))...</para><para>new ifc.Value(new AngularVelocityMeasure(...))...</para><para>new ifc.Value(new AreaDensityMeasure(...))...</para><para>new ifc.Value(new AreaMeasure(...))...</para><para>new ifc.Value(new Boolean(...))...</para><para>new ifc.Value(new ComplexNumber(...))...</para><para>new ifc.Value(new CompoundPlaneAngleMeasure(...))...</para><para>new ifc.Value(new ContextDependentMeasure(...))...</para><para>new ifc.Value(new CountMeasure(...))...</para><para>new ifc.Value(new CurvatureMeasure(...))...</para><para>new ifc.Value(new Date(...))...</para><para>new ifc.Value(new DateTime(...))...</para><para>new ifc.Value(new DescriptiveMeasure(...))...</para><para>new ifc.Value(new DoseEquivalentMeasure(...))...</para><para>new ifc.Value(new Duration(...))...</para><para>new ifc.Value(new DynamicViscosityMeasure(...))...</para><para>new ifc.Value(new ElectricCapacitanceMeasure(...))...</para><para>... (and more [truncated]) ...</para></param>
/// <param name="UnitComponent"><para>new ifc.Unit(new DerivedUnit(...))...</para><para>new ifc.Unit(new MonetaryUnit(...))...</para><para>new ifc.Unit(new NamedUnit(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               MeasureWithUnit(Value ValueComponent,Unit UnitComponent,string EndOfLineComment=null):base(){AddNext();this.ValueComponent=ValueComponent;this.UnitComponent=UnitComponent;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Value ValueComponent; //SELECT
[ifc(2)] public Unit UnitComponent; //SELECT
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedcomponentelements/lexical/ifcmechanicalfastener.htm
[ifcSql(TypeGroupId:5,TypeId: 855,TableId:3)] public partial class MechanicalFastener:ElementComponent{//=============================================================
public               MechanicalFastener():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="NominalDiameter">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="NominalLength">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="PredefinedType">[optional]<para>MechanicalFastenerTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               MechanicalFastener(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,PositiveLengthMeasure NominalDiameter=null,PositiveLengthMeasure NominalLength=null,MechanicalFastenerTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.NominalDiameter=NominalDiameter;this.NominalLength=NominalLength;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public PositiveLengthMeasure NominalDiameter; //TYPE
[ifc(10,optional=true)] public PositiveLengthMeasure NominalLength; //TYPE
[ifc(11,optional=true)] public MechanicalFastenerTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedcomponentelements/lexical/ifcmechanicalfastenertype.htm
[ifcSql(TypeGroupId:5,TypeId: 856,TableId:3)] public partial class MechanicalFastenerType:ElementComponentType{//=====================================================
public               MechanicalFastenerType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>MechanicalFastenerTypeEnum</para></param>
/// <param name="NominalDiameter">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="NominalLength">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               MechanicalFastenerType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,MechanicalFastenerTypeEnum PredefinedType,PositiveLengthMeasure NominalDiameter=null,PositiveLengthMeasure NominalLength=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.NominalDiameter=NominalDiameter;this.NominalLength=NominalLength;this.EndOfLineComment=EndOfLineComment;}
public               MechanicalFastenerType(MechanicalFastenerTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public MechanicalFastenerTypeEnum PredefinedType; //ENUM
[ifc(11,optional=true)] public PositiveLengthMeasure NominalDiameter; //TYPE
[ifc(12,optional=true)] public PositiveLengthMeasure NominalLength; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifcmember.htm
[ifcSql(TypeGroupId:5,TypeId: 859,TableId:3)] public partial class Member:BuildingElement{//==========================================================================
public               Member():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>MemberTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Member(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,MemberTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public MemberTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifcmembertype.htm
[ifcSql(TypeGroupId:5,TypeId: 861,TableId:3)] public partial class MemberType:BuildingElementType{//==================================================================
public               MemberType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>MemberTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               MemberType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,MemberTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               MemberType(MemberTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public MemberTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcconstraintresource/lexical/ifcmetric.htm
[ifcSql(TypeGroupId:5,TypeId: 862,TableId:3)] public partial class Metric:Constraint{//===============================================================================
public               Metric():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name"><para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ConstraintGrade"><para>ConstraintEnum</para></param>
/// <param name="ConstraintSource">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="CreatingActor">[optional]<para>new ifc.ActorSelect(new Organization(...))...</para><para>new ifc.ActorSelect(new Person(...))...</para><para>new ifc.ActorSelect(new PersonAndOrganization(...))...</para></param>
/// <param name="CreationTime">[optional]<para>cast to (ifc.DateTime)...</para></param>
/// <param name="UserDefinedGrade">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Benchmark"><para>BenchmarkEnum</para></param>
/// <param name="ValueSource">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="DataValue">[optional]<para>new ifc.MetricValueSelect(new AbsorbedDoseMeasure(...))...</para><para>new ifc.MetricValueSelect(new AccelerationMeasure(...))...</para><para>new ifc.MetricValueSelect(new AmountOfSubstanceMeasure(...))...</para><para>new ifc.MetricValueSelect(new AngularVelocityMeasure(...))...</para><para>new ifc.MetricValueSelect(new AreaDensityMeasure(...))...</para><para>new ifc.MetricValueSelect(new AreaMeasure(...))...</para><para>new ifc.MetricValueSelect(new Boolean(...))...</para><para>new ifc.MetricValueSelect(new ComplexNumber(...))...</para><para>new ifc.MetricValueSelect(new CompoundPlaneAngleMeasure(...))...</para><para>new ifc.MetricValueSelect(new ContextDependentMeasure(...))...</para><para>new ifc.MetricValueSelect(new CountMeasure(...))...</para><para>new ifc.MetricValueSelect(new CurvatureMeasure(...))...</para><para>new ifc.MetricValueSelect(new Date(...))...</para><para>new ifc.MetricValueSelect(new DateTime(...))...</para><para>new ifc.MetricValueSelect(new DescriptiveMeasure(...))...</para><para>new ifc.MetricValueSelect(new DoseEquivalentMeasure(...))...</para><para>new ifc.MetricValueSelect(new Duration(...))...</para><para>new ifc.MetricValueSelect(new DynamicViscosityMeasure(...))...</para><para>new ifc.MetricValueSelect(new ElectricCapacitanceMeasure(...))...</para><para>... (and more [truncated]) ...</para></param>
/// <param name="ReferencePath">[optional]<para>new ifc.Reference(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Metric(Label Name,Text Description,ConstraintEnum ConstraintGrade,Label ConstraintSource,ActorSelect CreatingActor,DateTime CreationTime,Label UserDefinedGrade,BenchmarkEnum Benchmark,Label ValueSource=null,MetricValueSelect DataValue=null,Reference ReferencePath=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.ConstraintGrade=ConstraintGrade;this.ConstraintSource=ConstraintSource;this.CreatingActor=CreatingActor;this.CreationTime=CreationTime;this.UserDefinedGrade=UserDefinedGrade;this.Benchmark=Benchmark;this.ValueSource=ValueSource;this.DataValue=DataValue;this.ReferencePath=ReferencePath;this.EndOfLineComment=EndOfLineComment;}
public               Metric(Label Name,ConstraintEnum ConstraintGrade,BenchmarkEnum Benchmark,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.ConstraintGrade=ConstraintGrade;this.Benchmark=Benchmark;this.EndOfLineComment=EndOfLineComment;}
[ifc(8)] public BenchmarkEnum Benchmark; //ENUM
[ifc(9,optional=true)] public Label ValueSource; //TYPE
[ifc(10,optional=true)] public MetricValueSelect DataValue; //SELECT
[ifc(11,optional=true)] public Reference ReferencePath; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcmeasureresource/lexical/ifcmonetaryunit.htm
[ifcSql(TypeGroupId:5,TypeId: 864,TableId:3)] public partial class MonetaryUnit:ENTITY{//=============================================================================
public               MonetaryUnit():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Currency"><para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               MonetaryUnit(Label Currency,string EndOfLineComment=null):base(){AddNext();this.Currency=Currency;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Label Currency; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcelectricaldomain/lexical/ifcmotorconnectiontype.htm
[ifcSql(TypeGroupId:5,TypeId: 866,TableId:3)] public partial class MotorConnectionType:EnergyConversionDeviceType{//==================================================
public               MotorConnectionType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>MotorConnectionTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               MotorConnectionType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,MotorConnectionTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               MotorConnectionType(MotorConnectionTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public MotorConnectionTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ContextDependentUnit(...)</para><para>new ifc.ConversionBasedUnit(...)</para><para>new ifc.SIUnit(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 867,TableId:3)] public partial class NamedUnit:ENTITY{//================================================================================
public               NamedUnit():base(){}// abstract
[ifc(1,derived=true)] public DimensionalExponents Dimensions; //ENTITY
[ifc(2)] public UnitEnum UnitType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.Actor(...)</para><para>new ifc.Occupant(...)</para><para>new ifc.Control(...)</para><para>new ifc.ActionRequest(...)</para><para>new ifc.CostItem(...)</para><para>new ifc.CostSchedule(...)</para><para>new ifc.PerformanceHistory(...)</para><para>new ifc.Permit(...)</para><para>new ifc.ProjectOrder(...)</para><para>new ifc.WorkControl(...)</para><para>new ifc.ConditionCriterion(...)</para><para>new ifc.EquipmentStandard(...)</para><para>new ifc.FurnitureStandard(...)</para><para>new ifc.ProjectOrderRecord(...)</para><para>new ifc.ScheduleTimeControl(...)</para><para>new ifc.ServiceLife(...)</para><para>new ifc.SpaceProgram(...)</para><para>new ifc.TimeSeriesSchedule(...)</para><para>new ifc.Group(...)</para><para>new ifc.Asset(...)</para><para>new ifc.Inventory(...)</para><para>new ifc.StructuralLoadGroup(...)</para><para>new ifc.StructuralResultGroup(...)</para><para>new ifc.System(...)</para><para>new ifc.Condition(...)</para><para>new ifc.Process(...)</para><para>new ifc.Product(...)</para><para>new ifc.Resource(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 868,TableId:3)] public partial class Object:ObjectDefinition{//=========================================================================
public               Object():base(){}// abstract
[ifc(5,optional=true)] public Label ObjectType; //TYPE
/// <summary>INVERSE: IsDeclaredBy of RelDefinesByObject for RelatedObjects</summary>
[ifcInverse(For:"RelatedObjects")] public RelDefinesByObject IsDeclaredBy;
/// <summary>INVERSE: Declares of RelDefinesByObject for RelatingObject</summary>
[ifcInverse(For:"RelatingObject")] public LIST<RelDefinesByObject> Declares;
/// <summary>INVERSE: IsDefinedBy of RelDefinesByProperties for RelatedObjects</summary>
[ifcInverse(For:"RelatedObjects")] public LIST<RelDefinesByProperties> IsDefinedBy;
/// <summary>INVERSE: IsTypedBy of RelDefinesByType for RelatedObjects</summary>
[ifcInverse(For:"RelatedObjects")] public RelDefinesByType IsTypedBy;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.Context(...)</para><para>new ifc.Project(...)</para><para>new ifc.Object(...)</para><para>new ifc.Actor(...)</para><para>new ifc.Occupant(...)</para><para>new ifc.Control(...)</para><para>new ifc.ActionRequest(...)</para><para>new ifc.CostItem(...)</para><para>new ifc.CostSchedule(...)</para><para>new ifc.PerformanceHistory(...)</para><para>new ifc.Permit(...)</para><para>new ifc.ProjectOrder(...)</para><para>new ifc.WorkControl(...)</para><para>new ifc.ConditionCriterion(...)</para><para>new ifc.EquipmentStandard(...)</para><para>new ifc.FurnitureStandard(...)</para><para>new ifc.ProjectOrderRecord(...)</para><para>new ifc.ScheduleTimeControl(...)</para><para>new ifc.ServiceLife(...)</para><para>new ifc.SpaceProgram(...)</para><para>new ifc.TimeSeriesSchedule(...)</para><para>new ifc.Group(...)</para><para>new ifc.Asset(...)</para><para>new ifc.Inventory(...)</para><para>new ifc.StructuralLoadGroup(...)</para><para>new ifc.StructuralResultGroup(...)</para><para>new ifc.System(...)</para><para>new ifc.Condition(...)</para><para>new ifc.Process(...)</para><para>new ifc.Product(...)</para><para>new ifc.Resource(...)</para><para>new ifc.TypeObject(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 869,TableId:3)] public partial class ObjectDefinition:Root{//===========================================================================
public               ObjectDefinition():base(){}// abstract
/// <summary>INVERSE: IsDecomposedBy of RelAggregates for RelatingObject</summary>
[ifcInverse(For:"RelatingObject")] public LIST<RelAggregates> IsDecomposedBy;
/// <summary>INVERSE: Decomposes of RelAggregates for RelatedObjects</summary>
[ifcInverse(For:"RelatedObjects")] public RelAggregates Decomposes;
/// <summary>INVERSE: HasAssignments of RelAssigns for RelatedObjects</summary>
[ifcInverse(For:"RelatedObjects")] public LIST<RelAssigns> HasAssignments;
/// <summary>INVERSE: HasAssociations of RelAssociates for RelatedObjects</summary>
[ifcInverse(For:"RelatedObjects")] public LIST<RelAssociates> HasAssociations;
/// <summary>INVERSE: HasContext of RelDeclares for RelatedDefinitions</summary>
[ifcInverse(For:"RelatedDefinitions")] public RelDeclares HasContext;
/// <summary>INVERSE: IsNestedBy of RelNests for RelatingObject</summary>
[ifcInverse(For:"RelatingObject")] public LIST<RelNests> IsNestedBy;
/// <summary>INVERSE: Nests of RelNests for RelatedObjects</summary>
[ifcInverse(For:"RelatedObjects")] public RelNests Nests;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 870,TableId:3)] public partial class ObjectPlacement:ENTITY{//==========================================================================
public               ObjectPlacement():base(){}// abstract
/// <summary>INVERSE: ReferencedByPlacements of LocalPlacement for PlacementRelTo</summary>
[ifcInverse(For:"PlacementRelTo")] public LIST<LocalPlacement> ReferencedByPlacements;
/// <summary>INVERSE: PlacesObject of Product for _ObjectPlacement</summary>
[ifcInverse(For:"_ObjectPlacement")] public LIST<Product> PlacesObject;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcconstraintresource/lexical/ifcobjective.htm
[ifcSql(TypeGroupId:5,TypeId: 871,TableId:3)] public partial class Objective:Constraint{//============================================================================
public               Objective():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name"><para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ConstraintGrade"><para>ConstraintEnum</para></param>
/// <param name="ConstraintSource">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="CreatingActor">[optional]<para>new ifc.ActorSelect(new Organization(...))...</para><para>new ifc.ActorSelect(new Person(...))...</para><para>new ifc.ActorSelect(new PersonAndOrganization(...))...</para></param>
/// <param name="CreationTime">[optional]<para>cast to (ifc.DateTime)...</para></param>
/// <param name="UserDefinedGrade">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="BenchmarkValues">[optional]<para>List1toUnbounded_Constraint</para></param>
/// <param name="LogicalAggregator">[optional]<para>LogicalOperatorEnum</para></param>
/// <param name="ObjectiveQualifier"><para>ObjectiveEnum</para></param>
/// <param name="UserDefinedQualifier">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Objective(Label Name,Text Description,ConstraintEnum ConstraintGrade,Label ConstraintSource,ActorSelect CreatingActor,DateTime CreationTime,Label UserDefinedGrade,List1toUnbounded_Constraint BenchmarkValues,LogicalOperatorEnum? LogicalAggregator,ObjectiveEnum ObjectiveQualifier,Label UserDefinedQualifier=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.ConstraintGrade=ConstraintGrade;this.ConstraintSource=ConstraintSource;this.CreatingActor=CreatingActor;this.CreationTime=CreationTime;this.UserDefinedGrade=UserDefinedGrade;this.BenchmarkValues=BenchmarkValues;this.LogicalAggregator=LogicalAggregator;this.ObjectiveQualifier=ObjectiveQualifier;this.UserDefinedQualifier=UserDefinedQualifier;this.EndOfLineComment=EndOfLineComment;}
public               Objective(Label Name,ConstraintEnum ConstraintGrade,ObjectiveEnum ObjectiveQualifier,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.ConstraintGrade=ConstraintGrade;this.ObjectiveQualifier=ObjectiveQualifier;this.EndOfLineComment=EndOfLineComment;}
[ifc(8,optional=true)] public List1toUnbounded_Constraint BenchmarkValues; //ListType1d
[ifc(9,optional=true)] public LogicalOperatorEnum? LogicalAggregator; //ENUM
[ifc(10)] public ObjectiveEnum ObjectiveQualifier; //ENUM
[ifc(11,optional=true)] public Label UserDefinedQualifier; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedfacilitieselements/lexical/ifcoccupant.htm
[ifcSql(TypeGroupId:5,TypeId: 872,TableId:3)] public partial class Occupant:Actor{//==================================================================================
public               Occupant():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="TheActor"><para>new ifc.ActorSelect(new Organization(...))...</para><para>new ifc.ActorSelect(new Person(...))...</para><para>new ifc.ActorSelect(new PersonAndOrganization(...))...</para></param>
/// <param name="PredefinedType">[optional]<para>OccupantTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Occupant(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Label ObjectType,ActorSelect TheActor,OccupantTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.TheActor=TheActor;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               Occupant(ActorSelect TheActor,string EndOfLineComment=null):base(){AddNext();this.TheActor=TheActor;this.EndOfLineComment=EndOfLineComment;}
[ifc(7,optional=true)] public OccupantTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometryresource/lexical/ifcoffsetcurve2d.htm
[ifcSql(TypeGroupId:5,TypeId: 873,TableId:3)] public partial class OffsetCurve2D:Curve{//=============================================================================
public               OffsetCurve2D():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="BasisCurve"><para>new ifc.BezierCurve(...)</para><para>new ifc.CompositeCurve(...)</para><para>new ifc.CompositeCurveOnSurface(...)</para><para>new ifc.BoundaryCurve(...)</para><para>new ifc.2DCompositeCurve(...)</para><para>new ifc.Polyline(...)</para><para>new ifc.TrimmedCurve(...)</para><para>new ifc.Circle(...)</para><para>new ifc.Ellipse(...)</para><para>new ifc.Line(...)</para><para>new ifc.OffsetCurve2D(...)</para><para>new ifc.OffsetCurve3D(...)</para></param>
/// <param name="Distance"><para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="SelfIntersect"><para>cast to (ifc.Logical)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               OffsetCurve2D(Curve BasisCurve,LengthMeasure Distance,Logical SelfIntersect,string EndOfLineComment=null):base(){AddNext();this.BasisCurve=BasisCurve;this.Distance=Distance;this.SelfIntersect=SelfIntersect;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Curve BasisCurve; //ENTITY
[ifc(2)] public LengthMeasure Distance; //TYPE
[ifc(3)] public Logical SelfIntersect; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometryresource/lexical/ifcoffsetcurve3d.htm
[ifcSql(TypeGroupId:5,TypeId: 874,TableId:3)] public partial class OffsetCurve3D:Curve{//=============================================================================
public               OffsetCurve3D():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="BasisCurve"><para>new ifc.BezierCurve(...)</para><para>new ifc.CompositeCurve(...)</para><para>new ifc.CompositeCurveOnSurface(...)</para><para>new ifc.BoundaryCurve(...)</para><para>new ifc.2DCompositeCurve(...)</para><para>new ifc.Polyline(...)</para><para>new ifc.TrimmedCurve(...)</para><para>new ifc.Circle(...)</para><para>new ifc.Ellipse(...)</para><para>new ifc.Line(...)</para><para>new ifc.OffsetCurve2D(...)</para><para>new ifc.OffsetCurve3D(...)</para></param>
/// <param name="Distance"><para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="SelfIntersect"><para>cast to (ifc.Logical)...</para></param>
/// <param name="RefDirection"><para>new ifc.Direction(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               OffsetCurve3D(Curve BasisCurve,LengthMeasure Distance,Logical SelfIntersect,Direction RefDirection,string EndOfLineComment=null):base(){AddNext();this.BasisCurve=BasisCurve;this.Distance=Distance;this.SelfIntersect=SelfIntersect;this.RefDirection=RefDirection;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Curve BasisCurve; //ENTITY
[ifc(2)] public LengthMeasure Distance; //TYPE
[ifc(3)] public Logical SelfIntersect; //TYPE
[ifc(4)] public Direction RefDirection; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifctopologyresource/lexical/ifcopenshell.htm
[ifcSql(TypeGroupId:5,TypeId: 875,TableId:3)] public partial class OpenShell:ConnectedFaceSet{//======================================================================
public               OpenShell():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="CfsFaces"><para>Set1toUnbounded_Face</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               OpenShell(Set1toUnbounded_Face CfsFaces,string EndOfLineComment=null):base(){AddNext();this.CfsFaces=CfsFaces;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifcopeningelement.htm
[ifcSql(TypeGroupId:5,TypeId: 876,TableId:3)] public partial class OpeningElement:FeatureElementSubtraction{//========================================================
public               OpeningElement():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>OpeningElementTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               OpeningElement(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,OpeningElementTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public OpeningElementTypeEnum? PredefinedType; //ENUM
/// <summary>INVERSE: HasFillings of RelFillsElement for RelatingOpeningElement</summary>
[ifcInverse(For:"RelatingOpeningElement")] public LIST<RelFillsElement> HasFillings;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcactorresource/lexical/ifcorganization.htm
[ifcSql(TypeGroupId:5,TypeId: 878,TableId:3)] public partial class Organization:ENTITY{//=============================================================================
public               Organization():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Identification">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="Name"><para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="Roles">[optional]<para>List1toUnbounded_ActorRole</para></param>
/// <param name="Addresses">[optional]<para>List1toUnbounded_Address</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Organization(Identifier Identification,Label Name,Text Description=null,List1toUnbounded_ActorRole Roles=null,List1toUnbounded_Address Addresses=null,string EndOfLineComment=null):base(){AddNext();this.Identification=Identification;this.Name=Name;this.Description=Description;this.Roles=Roles;this.Addresses=Addresses;this.EndOfLineComment=EndOfLineComment;}
public               Organization(Label Name,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.EndOfLineComment=EndOfLineComment;}
[ifc(1,optional=true)] public Identifier Identification; //TYPE
[ifc(2)] public Label Name; //TYPE
[ifc(3,optional=true)] public Text Description; //TYPE
[ifc(4,optional=true)] public List1toUnbounded_ActorRole Roles; //ListType1d
[ifc(5,optional=true)] public List1toUnbounded_Address Addresses; //ListType1d
/// <summary>INVERSE: Relates of OrganizationRelationship for RelatingOrganization</summary>
[ifcInverse(For:"RelatingOrganization")] public LIST<OrganizationRelationship> Relates;
/// <summary>INVERSE: IsRelatedBy of OrganizationRelationship for RelatedOrganizations</summary>
[ifcInverse(For:"RelatedOrganizations")] public LIST<OrganizationRelationship> IsRelatedBy;
/// <summary>INVERSE: Engages of PersonAndOrganization for TheOrganization</summary>
[ifcInverse(For:"TheOrganization")] public LIST<PersonAndOrganization> Engages;
public override void AssignInverseElements(){if (Addresses!=null) foreach (Address __Address in Addresses) if (__Address is Address) {if (((Address)__Address).OfOrganization==null) ((Address)__Address).OfOrganization=new LIST<Organization>();((Address)__Address).OfOrganization.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcactorresource/lexical/ifcorganizationrelationship.htm
[ifcSql(TypeGroupId:5,TypeId: 879,TableId:3)] public partial class OrganizationRelationship:ResourceLevelRelationship{//==============================================
public               OrganizationRelationship():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatingOrganization"><para>new ifc.Organization(...)</para></param>
/// <param name="RelatedOrganizations"><para>Set1toUnbounded_Organization</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               OrganizationRelationship(Label Name,Text Description,Organization RelatingOrganization,Set1toUnbounded_Organization RelatedOrganizations,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.RelatingOrganization=RelatingOrganization;this.RelatedOrganizations=RelatedOrganizations;this.EndOfLineComment=EndOfLineComment;}
public               OrganizationRelationship(Organization RelatingOrganization,Set1toUnbounded_Organization RelatedOrganizations,string EndOfLineComment=null):base(){AddNext();this.RelatingOrganization=RelatingOrganization;this.RelatedOrganizations=RelatedOrganizations;this.EndOfLineComment=EndOfLineComment;}
[ifc(3)] public Organization RelatingOrganization; //ENTITY
[ifc(4)] public Set1toUnbounded_Organization RelatedOrganizations; //ListType1d
public override void AssignInverseElements(){if (RelatingOrganization!=null) {if (RelatingOrganization.Relates==null) RelatingOrganization.Relates=new LIST<OrganizationRelationship>();RelatingOrganization.Relates.Add(this);}
                                             if (RelatedOrganizations!=null) foreach (Organization __Organization in RelatedOrganizations) if (__Organization is Organization) {if (((Organization)__Organization).IsRelatedBy==null) ((Organization)__Organization).IsRelatedBy=new LIST<OrganizationRelationship>();((Organization)__Organization).IsRelatedBy.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifctopologyresource/lexical/ifcorientededge.htm
[ifcSql(TypeGroupId:5,TypeId: 880,TableId:3)] public partial class OrientedEdge:Edge{//===============================================================================
public               OrientedEdge():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="EdgeStart"><para>new ifc.Vertex(...)</para><para>new ifc.VertexPoint(...)</para></param>
/// <param name="EdgeEnd"><para>new ifc.Vertex(...)</para><para>new ifc.VertexPoint(...)</para></param>
/// <param name="EdgeElement"><para>new ifc.Edge(...)</para><para>new ifc.EdgeCurve(...)</para><para>new ifc.OrientedEdge(...)</para><para>new ifc.Subedge(...)</para></param>
/// <param name="Orientation"><para>cast to (ifc.Boolean)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               OrientedEdge(Vertex EdgeStart,Vertex EdgeEnd,Edge EdgeElement,Boolean Orientation,string EndOfLineComment=null):base(){AddNext();this.EdgeStart=EdgeStart;this.EdgeEnd=EdgeEnd;this.EdgeElement=EdgeElement;this.Orientation=Orientation;this.EndOfLineComment=EndOfLineComment;}
[ifc(3)] public Edge EdgeElement; //ENTITY
[ifc(4)] public Boolean Orientation; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcelectricaldomain/lexical/ifcoutlettype.htm
[ifcSql(TypeGroupId:5,TypeId: 883,TableId:3)] public partial class OutletType:FlowTerminalType{//=====================================================================
public               OutletType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>OutletTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               OutletType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,OutletTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               OutletType(OutletTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public OutletTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcutilityresource/lexical/ifcownerhistory.htm
[ifcSql(TypeGroupId:5,TypeId: 884,TableId:3)] public partial class OwnerHistory:ENTITY{//=============================================================================
public               OwnerHistory():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="OwningUser"><para>new ifc.PersonAndOrganization(...)</para></param>
/// <param name="OwningApplication"><para>new ifc.Application(...)</para></param>
/// <param name="State">[optional]<para>StateEnum</para></param>
/// <param name="ChangeAction">[optional]<para>ChangeActionEnum</para></param>
/// <param name="LastModifiedDate">[optional]<para>cast to (ifc.TimeStamp)...</para></param>
/// <param name="LastModifyingUser">[optional]<para>new ifc.PersonAndOrganization(...)</para></param>
/// <param name="LastModifyingApplication">[optional]<para>new ifc.Application(...)</para></param>
/// <param name="CreationDate"><para>cast to (ifc.TimeStamp)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               OwnerHistory(PersonAndOrganization OwningUser,Application OwningApplication,StateEnum? State,ChangeActionEnum? ChangeAction,TimeStamp LastModifiedDate,PersonAndOrganization LastModifyingUser,Application LastModifyingApplication,TimeStamp CreationDate,string EndOfLineComment=null):base(){AddNext();this.OwningUser=OwningUser;this.OwningApplication=OwningApplication;this.State=State;this.ChangeAction=ChangeAction;this.LastModifiedDate=LastModifiedDate;this.LastModifyingUser=LastModifyingUser;this.LastModifyingApplication=LastModifyingApplication;this.CreationDate=CreationDate;this.EndOfLineComment=EndOfLineComment;}
public               OwnerHistory(PersonAndOrganization OwningUser,Application OwningApplication,TimeStamp CreationDate,string EndOfLineComment=null):base(){AddNext();this.OwningUser=OwningUser;this.OwningApplication=OwningApplication;this.CreationDate=CreationDate;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public PersonAndOrganization OwningUser; //ENTITY
[ifc(2)] public Application OwningApplication; //ENTITY
[ifc(3,optional=true)] public StateEnum? State; //ENUM
[ifc(4,optional=true)] public ChangeActionEnum? ChangeAction; //ENUM
[ifc(5,optional=true)] public TimeStamp LastModifiedDate; //TYPE
[ifc(6,optional=true)] public PersonAndOrganization LastModifyingUser; //ENTITY
[ifc(7,optional=true)] public Application LastModifyingApplication; //ENTITY
[ifc(8)] public TimeStamp CreationDate; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.AsymmetricIShapeProfileDef(...)</para><para>new ifc.CShapeProfileDef(...)</para><para>new ifc.CircleProfileDef(...)</para><para>new ifc.CircleHollowProfileDef(...)</para><para>new ifc.EllipseProfileDef(...)</para><para>new ifc.IShapeProfileDef(...)</para><para>new ifc.LShapeProfileDef(...)</para><para>new ifc.RectangleProfileDef(...)</para><para>new ifc.TShapeProfileDef(...)</para><para>new ifc.TrapeziumProfileDef(...)</para><para>new ifc.UShapeProfileDef(...)</para><para>new ifc.ZShapeProfileDef(...)</para><para>new ifc.CraneRailAShapeProfileDef(...)</para><para>new ifc.CraneRailFShapeProfileDef(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 885,TableId:3)] public partial class ParameterizedProfileDef:ProfileDef{//==============================================================
public               ParameterizedProfileDef():base(){}// abstract
[ifc(3,optional=true)] public Axis2Placement2D Position; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifctopologyresource/lexical/ifcpath.htm
[ifcSql(TypeGroupId:5,TypeId: 886,TableId:3)] public partial class Path:TopologicalRepresentationItem{//==============================================================
public               Path():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="EdgeList"><para>List1toUnboundedUnique_OrientedEdge</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Path(List1toUnboundedUnique_OrientedEdge EdgeList,string EndOfLineComment=null):base(){AddNext();this.EdgeList=EdgeList;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public List1toUnboundedUnique_OrientedEdge EdgeList; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifccontrolextension/lexical/ifcperformancehistory.htm
[ifcSql(TypeGroupId:5,TypeId: 888,TableId:3)] public partial class PerformanceHistory:Control{//======================================================================
public               PerformanceHistory():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Identification">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="LifeCyclePhase"><para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType">[optional]<para>PerformanceHistoryTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PerformanceHistory(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Label ObjectType,Identifier Identification,Label LifeCyclePhase,PerformanceHistoryTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.Identification=Identification;this.LifeCyclePhase=LifeCyclePhase;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               PerformanceHistory(Label LifeCyclePhase,string EndOfLineComment=null):base(){AddNext();this.LifeCyclePhase=LifeCyclePhase;this.EndOfLineComment=EndOfLineComment;}
[ifc(7)] public Label LifeCyclePhase; //TYPE
[ifc(8,optional=true)] public PerformanceHistoryTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcarchitecturedomain/lexical/ifcpermeablecoveringproperties.htm
[ifcSql(TypeGroupId:5,TypeId: 889,TableId:3)] public partial class PermeableCoveringProperties:PreDefinedPropertySet{//===============================================
public               PermeableCoveringProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="OperationType"><para>PermeableCoveringOperationEnum</para></param>
/// <param name="PanelPosition"><para>WindowPanelPositionEnum</para></param>
/// <param name="FrameDepth">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="FrameThickness">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="ShapeAspectStyle">[optional]<para>new ifc.ShapeAspect(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PermeableCoveringProperties(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,PermeableCoveringOperationEnum OperationType,WindowPanelPositionEnum PanelPosition,PositiveLengthMeasure FrameDepth=null,PositiveLengthMeasure FrameThickness=null,ShapeAspect ShapeAspectStyle=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.OperationType=OperationType;this.PanelPosition=PanelPosition;this.FrameDepth=FrameDepth;this.FrameThickness=FrameThickness;this.ShapeAspectStyle=ShapeAspectStyle;this.EndOfLineComment=EndOfLineComment;}
public               PermeableCoveringProperties(PermeableCoveringOperationEnum OperationType,WindowPanelPositionEnum PanelPosition,string EndOfLineComment=null):base(){AddNext();this.OperationType=OperationType;this.PanelPosition=PanelPosition;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public PermeableCoveringOperationEnum OperationType; //ENUM
[ifc(6)] public WindowPanelPositionEnum PanelPosition; //ENUM
[ifc(7,optional=true)] public PositiveLengthMeasure FrameDepth; //TYPE
[ifc(8,optional=true)] public PositiveLengthMeasure FrameThickness; //TYPE
[ifc(9,optional=true)] public ShapeAspect ShapeAspectStyle; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedmgmtelements/lexical/ifcpermit.htm
[ifcSql(TypeGroupId:5,TypeId: 890,TableId:3)] public partial class Permit:Control{//==================================================================================
public               Permit():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Identification">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>PermitTypeEnum</para></param>
/// <param name="Status">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="LongDescription">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Permit(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,Identifier Identification=null,PermitTypeEnum? PredefinedType=null,Label Status=null,Text LongDescription=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.Identification=Identification;this.PredefinedType=PredefinedType;this.Status=Status;this.LongDescription=LongDescription;this.EndOfLineComment=EndOfLineComment;}
[ifc(7,optional=true)] public PermitTypeEnum? PredefinedType; //ENUM
[ifc(8,optional=true)] public Label Status; //TYPE
[ifc(9,optional=true)] public Text LongDescription; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcactorresource/lexical/ifcperson.htm
[ifcSql(TypeGroupId:5,TypeId: 891,TableId:3)] public partial class Person:ENTITY{//===================================================================================
public               Person():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Identification">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="FamilyName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="GivenName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="MiddleNames">[optional]<para>List1toUnbounded_Label</para></param>
/// <param name="PrefixTitles">[optional]<para>List1toUnbounded_Label</para></param>
/// <param name="SuffixTitles">[optional]<para>List1toUnbounded_Label</para></param>
/// <param name="Roles">[optional]<para>List1toUnbounded_ActorRole</para></param>
/// <param name="Addresses">[optional]<para>List1toUnbounded_Address</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Person(Identifier Identification=null,Label FamilyName=null,Label GivenName=null,List1toUnbounded_Label MiddleNames=null,List1toUnbounded_Label PrefixTitles=null,List1toUnbounded_Label SuffixTitles=null,List1toUnbounded_ActorRole Roles=null,List1toUnbounded_Address Addresses=null,string EndOfLineComment=null):base(){AddNext();this.Identification=Identification;this.FamilyName=FamilyName;this.GivenName=GivenName;this.MiddleNames=MiddleNames;this.PrefixTitles=PrefixTitles;this.SuffixTitles=SuffixTitles;this.Roles=Roles;this.Addresses=Addresses;this.EndOfLineComment=EndOfLineComment;}
[ifc(1,optional=true)] public Identifier Identification; //TYPE
[ifc(2,optional=true)] public Label FamilyName; //TYPE
[ifc(3,optional=true)] public Label GivenName; //TYPE
[ifc(4,optional=true)] public List1toUnbounded_Label MiddleNames; //ListType1d
[ifc(5,optional=true)] public List1toUnbounded_Label PrefixTitles; //ListType1d
[ifc(6,optional=true)] public List1toUnbounded_Label SuffixTitles; //ListType1d
[ifc(7,optional=true)] public List1toUnbounded_ActorRole Roles; //ListType1d
[ifc(8,optional=true)] public List1toUnbounded_Address Addresses; //ListType1d
/// <summary>INVERSE: EngagedIn of PersonAndOrganization for ThePerson</summary>
[ifcInverse(For:"ThePerson")] public LIST<PersonAndOrganization> EngagedIn;
public override void AssignInverseElements(){if (Addresses!=null) foreach (Address __Address in Addresses) if (__Address is Address) {if (((Address)__Address).OfPerson==null) ((Address)__Address).OfPerson=new LIST<Person>();((Address)__Address).OfPerson.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcactorresource/lexical/ifcpersonandorganization.htm
[ifcSql(TypeGroupId:5,TypeId: 892,TableId:3)] public partial class PersonAndOrganization:ENTITY{//====================================================================
public               PersonAndOrganization():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ThePerson"><para>new ifc.Person(...)</para></param>
/// <param name="TheOrganization"><para>new ifc.Organization(...)</para></param>
/// <param name="Roles">[optional]<para>List1toUnbounded_ActorRole</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PersonAndOrganization(Person ThePerson,Organization TheOrganization,List1toUnbounded_ActorRole Roles=null,string EndOfLineComment=null):base(){AddNext();this.ThePerson=ThePerson;this.TheOrganization=TheOrganization;this.Roles=Roles;this.EndOfLineComment=EndOfLineComment;}
public               PersonAndOrganization(Person ThePerson,Organization TheOrganization):base(){AddNext();this.ThePerson=ThePerson;this.TheOrganization=TheOrganization;}
[ifc(1)] public Person ThePerson; //ENTITY
[ifc(2)] public Organization TheOrganization; //ENTITY
[ifc(3,optional=true)] public List1toUnbounded_ActorRole Roles; //ListType1d
public override void AssignInverseElements(){if (TheOrganization!=null) {if (TheOrganization.Engages==null) TheOrganization.Engages=new LIST<PersonAndOrganization>();TheOrganization.Engages.Add(this);}
                                             if (ThePerson!=null) {if (ThePerson.EngagedIn==null) ThePerson.EngagedIn=new LIST<PersonAndOrganization>();ThePerson.EngagedIn.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcquantityresource/lexical/ifcphysicalcomplexquantity.htm
[ifcSql(TypeGroupId:5,TypeId: 893,TableId:3)] public partial class PhysicalComplexQuantity:PhysicalQuantity{//========================================================
public               PhysicalComplexQuantity():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name"><para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="HasQuantities"><para>Set1toUnbounded_PhysicalQuantity</para></param>
/// <param name="Discrimination"><para>cast to (ifc.Label)...</para></param>
/// <param name="Quality">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Usage">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PhysicalComplexQuantity(Label Name,Text Description,Set1toUnbounded_PhysicalQuantity HasQuantities,Label Discrimination,Label Quality=null,Label Usage=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.HasQuantities=HasQuantities;this.Discrimination=Discrimination;this.Quality=Quality;this.Usage=Usage;this.EndOfLineComment=EndOfLineComment;}
public               PhysicalComplexQuantity(Label Name,Set1toUnbounded_PhysicalQuantity HasQuantities,Label Discrimination,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.HasQuantities=HasQuantities;this.Discrimination=Discrimination;this.EndOfLineComment=EndOfLineComment;}
[ifc(3)] public Set1toUnbounded_PhysicalQuantity HasQuantities; //ListType1d
[ifc(4)] public Label Discrimination; //TYPE
[ifc(5,optional=true)] public Label Quality; //TYPE
[ifc(6,optional=true)] public Label Usage; //TYPE
public override void AssignInverseElements(){if (HasQuantities!=null) foreach (PhysicalQuantity __PhysicalQuantity in HasQuantities) if (__PhysicalQuantity is PhysicalQuantity) ((PhysicalQuantity)__PhysicalQuantity).PartOfComplex=this;
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.PhysicalComplexQuantity(...)</para><para>new ifc.PhysicalSimpleQuantity(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 894,TableId:3)] public partial class PhysicalQuantity:ENTITY{//=========================================================================
public               PhysicalQuantity():base(){}// abstract
[ifc(1)] public Label Name; //TYPE
[ifc(2,optional=true)] public Text Description; //TYPE
/// <summary>INVERSE: HasExternalReferences of ExternalReferenceRelationship for RelatedResourceObjects</summary>
[ifcInverse(For:"RelatedResourceObjects")] public LIST<ExternalReferenceRelationship> HasExternalReferences;
/// <summary>INVERSE: PartOfComplex of PhysicalComplexQuantity for HasQuantities</summary>
[ifcInverse(For:"HasQuantities")] public PhysicalComplexQuantity PartOfComplex;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.QuantityArea(...)</para><para>new ifc.QuantityCount(...)</para><para>new ifc.QuantityLength(...)</para><para>new ifc.QuantityTime(...)</para><para>new ifc.QuantityVolume(...)</para><para>new ifc.QuantityWeight(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 895,TableId:3)] public partial class PhysicalSimpleQuantity:PhysicalQuantity{//=========================================================
public               PhysicalSimpleQuantity():base(){}// abstract
[ifc(3,optional=true)] public NamedUnit Unit; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralelementsdomain/lexical/ifcpile.htm
[ifcSql(TypeGroupId:5,TypeId: 896,TableId:3)] public partial class Pile:BuildingElement{//============================================================================
public               Pile():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>PileTypeEnum</para></param>
/// <param name="ConstructionType">[optional]<para>PileConstructionEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Pile(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,PileTypeEnum? PredefinedType=null,PileConstructionEnum? ConstructionType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.PredefinedType=PredefinedType;this.ConstructionType=ConstructionType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public PileTypeEnum? PredefinedType; //ENUM
[ifc(10,optional=true)] public PileConstructionEnum? ConstructionType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifcpipefittingtype.htm
[ifcSql(TypeGroupId:5,TypeId: 899,TableId:3)] public partial class PipeFittingType:FlowFittingType{//=================================================================
public               PipeFittingType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>PipeFittingTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PipeFittingType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,PipeFittingTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               PipeFittingType(PipeFittingTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public PipeFittingTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifcpipesegmenttype.htm
[ifcSql(TypeGroupId:5,TypeId: 901,TableId:3)] public partial class PipeSegmentType:FlowSegmentType{//=================================================================
public               PipeSegmentType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>PipeSegmentTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PipeSegmentType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,PipeSegmentTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               PipeSegmentType(PipeSegmentTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public PipeSegmentTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifcpixeltexture.htm
[ifcSql(TypeGroupId:5,TypeId: 902,TableId:3)] public partial class PixelTexture:SurfaceTexture{//=====================================================================
public               PixelTexture():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="RepeatS"><para>cast to (ifc.Boolean)...</para></param>
/// <param name="RepeatT"><para>cast to (ifc.Boolean)...</para></param>
/// <param name="Mode">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="TextureTransform">[optional]<para>new ifc.CartesianTransformationOperator2D(...)</para><para>new ifc.CartesianTransformationOperator2DnonUniform(...)</para></param>
/// <param name="Parameter">[optional]<para>List1toUnbounded_Identifier</para></param>
/// <param name="Width"><para>cast to (ifc.Integer)...</para></param>
/// <param name="Height"><para>cast to (ifc.Integer)...</para></param>
/// <param name="ColourComponents"><para>cast to (ifc.Integer)...</para></param>
/// <param name="Pixel"><para>List1toUnbounded_Binary</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PixelTexture(Boolean RepeatS,Boolean RepeatT,Identifier Mode,CartesianTransformationOperator2D TextureTransform,List1toUnbounded_Identifier Parameter,Integer Width,Integer Height,Integer ColourComponents,List1toUnbounded_Binary Pixel,string EndOfLineComment=null):base(){AddNext();this.RepeatS=RepeatS;this.RepeatT=RepeatT;this.Mode=Mode;this.TextureTransform=TextureTransform;this.Parameter=Parameter;this.Width=Width;this.Height=Height;this.ColourComponents=ColourComponents;this.Pixel=Pixel;this.EndOfLineComment=EndOfLineComment;}
public               PixelTexture(Boolean RepeatS,Boolean RepeatT,Integer Width,Integer Height,Integer ColourComponents,List1toUnbounded_Binary Pixel,string EndOfLineComment=null):base(){AddNext();this.RepeatS=RepeatS;this.RepeatT=RepeatT;this.Width=Width;this.Height=Height;this.ColourComponents=ColourComponents;this.Pixel=Pixel;this.EndOfLineComment=EndOfLineComment;}
[ifc(6)] public Integer Width; //TYPE
[ifc(7)] public Integer Height; //TYPE
[ifc(8)] public Integer ColourComponents; //TYPE
[ifc(9)] public List1toUnbounded_Binary Pixel; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.Axis1Placement(...)</para><para>new ifc.Axis2Placement2D(...)</para><para>new ifc.Axis2Placement3D(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 903,TableId:3)] public partial class Placement:GeometricRepresentationItem{//===========================================================
public               Placement():base(){}// abstract
[ifc(1)] public CartesianPoint Location; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationdefinitionresource/lexical/ifcplanarbox.htm
[ifcSql(TypeGroupId:5,TypeId: 904,TableId:3)] public partial class PlanarBox:PlanarExtent{//==========================================================================
public               PlanarBox():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="SizeInX"><para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="SizeInY"><para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="_Placement"><para>new ifc.Axis2Placement(new Axis2Placement2D(...))...</para><para>new ifc.Axis2Placement(new Axis2Placement3D(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PlanarBox(LengthMeasure SizeInX,LengthMeasure SizeInY,Axis2Placement _Placement,string EndOfLineComment=null):base(){AddNext();this.SizeInX=SizeInX;this.SizeInY=SizeInY;this._Placement=_Placement;this.EndOfLineComment=EndOfLineComment;}
[ifc(3)] public Axis2Placement _Placement; //SELECT
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.PlanarBox(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationdefinitionresource/lexical/ifcplanarextent.htm
[ifcSql(TypeGroupId:5,TypeId: 905,TableId:3)] public partial class PlanarExtent:GeometricRepresentationItem{//========================================================
public               PlanarExtent():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="SizeInX"><para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="SizeInY"><para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PlanarExtent(LengthMeasure SizeInX,LengthMeasure SizeInY,string EndOfLineComment=null):base(){AddNext();this.SizeInX=SizeInX;this.SizeInY=SizeInY;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public LengthMeasure SizeInX; //TYPE
[ifc(2)] public LengthMeasure SizeInY; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometryresource/lexical/ifcplane.htm
[ifcSql(TypeGroupId:5,TypeId: 906,TableId:3)] public partial class Plane:ElementarySurface{//=========================================================================
public               Plane():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Position"><para>new ifc.Axis2Placement3D(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Plane(Axis2Placement3D Position,string EndOfLineComment=null):base(){AddNext();this.Position=Position;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifcplate.htm
[ifcSql(TypeGroupId:5,TypeId: 907,TableId:3)] public partial class Plate:BuildingElement{//===========================================================================
public               Plate():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>PlateTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Plate(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,PlateTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public PlateTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifcplatetype.htm
[ifcSql(TypeGroupId:5,TypeId: 909,TableId:3)] public partial class PlateType:BuildingElementType{//===================================================================
public               PlateType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>PlateTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PlateType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,PlateTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               PlateType(PlateTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public PlateTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.CartesianPoint(...)</para><para>new ifc.PointOnCurve(...)</para><para>new ifc.PointOnSurface(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 910,TableId:3)] public partial class Point:GeometricRepresentationItem{//===============================================================
public               Point():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometryresource/lexical/ifcpointoncurve.htm
[ifcSql(TypeGroupId:5,TypeId: 911,TableId:3)] public partial class PointOnCurve:Point{//==============================================================================
public               PointOnCurve():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="BasisCurve"><para>new ifc.BezierCurve(...)</para><para>new ifc.CompositeCurve(...)</para><para>new ifc.CompositeCurveOnSurface(...)</para><para>new ifc.BoundaryCurve(...)</para><para>new ifc.2DCompositeCurve(...)</para><para>new ifc.Polyline(...)</para><para>new ifc.TrimmedCurve(...)</para><para>new ifc.Circle(...)</para><para>new ifc.Ellipse(...)</para><para>new ifc.Line(...)</para><para>new ifc.OffsetCurve2D(...)</para><para>new ifc.OffsetCurve3D(...)</para></param>
/// <param name="PointParameter"><para>cast to (ifc.ParameterValue)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PointOnCurve(Curve BasisCurve,ParameterValue PointParameter,string EndOfLineComment=null):base(){AddNext();this.BasisCurve=BasisCurve;this.PointParameter=PointParameter;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Curve BasisCurve; //ENTITY
[ifc(2)] public ParameterValue PointParameter; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometryresource/lexical/ifcpointonsurface.htm
[ifcSql(TypeGroupId:5,TypeId: 912,TableId:3)] public partial class PointOnSurface:Point{//============================================================================
public               PointOnSurface():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="BasisSurface"><para>new ifc.CurveBoundedPlane(...)</para><para>new ifc.RectangularTrimmedSurface(...)</para><para>new ifc.Plane(...)</para></param>
/// <param name="PointParameterU"><para>cast to (ifc.ParameterValue)...</para></param>
/// <param name="PointParameterV"><para>cast to (ifc.ParameterValue)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PointOnSurface(Surface BasisSurface,ParameterValue PointParameterU,ParameterValue PointParameterV,string EndOfLineComment=null):base(){AddNext();this.BasisSurface=BasisSurface;this.PointParameterU=PointParameterU;this.PointParameterV=PointParameterV;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Surface BasisSurface; //ENTITY
[ifc(2)] public ParameterValue PointParameterU; //TYPE
[ifc(3)] public ParameterValue PointParameterV; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifctopologyresource/lexical/ifcpolyloop.htm
[ifcSql(TypeGroupId:5,TypeId: 913,TableId:3)] public partial class PolyLoop:Loop{//===================================================================================
public               PolyLoop():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Polygon"><para>List3toUnboundedUnique_CartesianPoint</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PolyLoop(List3toUnboundedUnique_CartesianPoint Polygon,string EndOfLineComment=null):base(){AddNext();this.Polygon=Polygon;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public List3toUnboundedUnique_CartesianPoint Polygon; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricmodelresource/lexical/ifcpolygonalboundedhalfspace.htm
[ifcSql(TypeGroupId:5,TypeId: 914,TableId:3)] public partial class PolygonalBoundedHalfSpace:HalfSpaceSolid{//========================================================
public               PolygonalBoundedHalfSpace():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="BaseSurface"><para>new ifc.CurveBoundedPlane(...)</para><para>new ifc.RectangularTrimmedSurface(...)</para><para>new ifc.Plane(...)</para></param>
/// <param name="AgreementFlag"><para>cast to (ifc.Boolean)...</para></param>
/// <param name="Position"><para>new ifc.Axis2Placement3D(...)</para></param>
/// <param name="PolygonalBoundary"><para>new ifc.BezierCurve(...)</para><para>new ifc.CompositeCurve(...)</para><para>new ifc.Polyline(...)</para><para>new ifc.TrimmedCurve(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PolygonalBoundedHalfSpace(Surface BaseSurface,Boolean AgreementFlag,Axis2Placement3D Position,BoundedCurve PolygonalBoundary,string EndOfLineComment=null):base(){AddNext();this.BaseSurface=BaseSurface;this.AgreementFlag=AgreementFlag;this.Position=Position;this.PolygonalBoundary=PolygonalBoundary;this.EndOfLineComment=EndOfLineComment;}
[ifc(3)] public Axis2Placement3D Position; //ENTITY
[ifc(4)] public BoundedCurve PolygonalBoundary; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometryresource/lexical/ifcpolyline.htm
[ifcSql(TypeGroupId:5,TypeId: 915,TableId:3)] public partial class Polyline:BoundedCurve{//===========================================================================
public               Polyline():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Points"><para>List2toUnbounded_CartesianPoint</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Polyline(List2toUnbounded_CartesianPoint Points,string EndOfLineComment=null):base(){AddNext();this.Points=Points;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public List2toUnbounded_CartesianPoint Points; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.DistributionPort(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 916,TableId:3)] public partial class Port:Product{//====================================================================================
public               Port():base(){}// abstract
/// <summary>INVERSE: ContainedIn of RelConnectsPortToElement for RelatingPort</summary>
[ifcInverse(For:"RelatingPort")] public RelConnectsPortToElement ContainedIn;
/// <summary>INVERSE: ConnectedTo of RelConnectsPorts for RelatingPort</summary>
[ifcInverse(For:"RelatingPort")] public RelConnectsPorts ConnectedTo;
/// <summary>INVERSE: ConnectedFrom of RelConnectsPorts for RelatedPort</summary>
[ifcInverse(For:"RelatedPort")] public RelConnectsPorts ConnectedFrom;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.Alignment(...)</para><para>new ifc.Grid(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 917,TableId:3)] public partial class PositioningElement:Product{//======================================================================
public               PositioningElement():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcactorresource/lexical/ifcpostaladdress.htm
[ifcSql(TypeGroupId:5,TypeId: 918,TableId:3)] public partial class PostalAddress:Address{//===========================================================================
public               PostalAddress():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Purpose">[optional]<para>AddressTypeEnum</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="UserDefinedPurpose">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="InternalLocation">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="AddressLines">[optional]<para>List1toUnbounded_Label</para></param>
/// <param name="PostalBox">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Town">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Region">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PostalCode">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Country">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PostalAddress(AddressTypeEnum? Purpose=null,Text Description=null,Label UserDefinedPurpose=null,Label InternalLocation=null,List1toUnbounded_Label AddressLines=null,Label PostalBox=null,Label Town=null,Label Region=null,Label PostalCode=null,Label Country=null,string EndOfLineComment=null):base(){AddNext();this.Purpose=Purpose;this.Description=Description;this.UserDefinedPurpose=UserDefinedPurpose;this.InternalLocation=InternalLocation;this.AddressLines=AddressLines;this.PostalBox=PostalBox;this.Town=Town;this.Region=Region;this.PostalCode=PostalCode;this.Country=Country;this.EndOfLineComment=EndOfLineComment;}
[ifc(4,optional=true)] public Label InternalLocation; //TYPE
[ifc(5,optional=true)] public List1toUnbounded_Label AddressLines; //ListType1d
[ifc(6,optional=true)] public Label PostalBox; //TYPE
[ifc(7,optional=true)] public Label Town; //TYPE
[ifc(8,optional=true)] public Label Region; //TYPE
[ifc(9,optional=true)] public Label PostalCode; //TYPE
[ifc(10,optional=true)] public Label Country; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.DraughtingPreDefinedColour(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 919,TableId:3)] public partial class PreDefinedColour:PreDefinedItem{//=================================================================
public               PreDefinedColour():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.DraughtingPreDefinedCurveFont(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 920,TableId:3)] public partial class PreDefinedCurveFont:PreDefinedItem{//==============================================================
public               PreDefinedCurveFont():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.PreDefinedColour(...)</para><para>new ifc.DraughtingPreDefinedColour(...)</para><para>new ifc.PreDefinedCurveFont(...)</para><para>new ifc.DraughtingPreDefinedCurveFont(...)</para><para>new ifc.PreDefinedTextFont(...)</para><para>new ifc.PreDefinedSymbol(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 921,TableId:3)] public partial class PreDefinedItem:PresentationItem{//=================================================================
public               PreDefinedItem():base(){}// abstract
[ifc(1)] public Label Name; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ReinforcementBarProperties(...)</para><para>new ifc.SectionProperties(...)</para><para>new ifc.SectionReinforcementProperties(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 922,TableId:3)] public partial class PreDefinedProperties:PropertyAbstraction{//========================================================
public               PreDefinedProperties():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.DoorLiningProperties(...)</para><para>new ifc.DoorPanelProperties(...)</para><para>new ifc.PermeableCoveringProperties(...)</para><para>new ifc.ReinforcementDefinitionProperties(...)</para><para>new ifc.WindowLiningProperties(...)</para><para>new ifc.WindowPanelProperties(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 923,TableId:3)] public partial class PreDefinedPropertySet:PropertySetDefinition{//=====================================================
public               PreDefinedPropertySet():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.TextStyleFontModel(...)</para><para>new ifc.DraughtingPreDefinedTextFont(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 924,TableId:3)] public partial class PreDefinedTextFont:PreDefinedItem{//===============================================================
public               PreDefinedTextFont():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ColourRgbList(...)</para><para>new ifc.ColourSpecification(...)</para><para>new ifc.ColourRgb(...)</para><para>new ifc.CurveStyleFont(...)</para><para>new ifc.CurveStyleFontAndScaling(...)</para><para>new ifc.CurveStyleFontPattern(...)</para><para>new ifc.IndexedColourMap(...)</para><para>new ifc.PreDefinedItem(...)</para><para>new ifc.PreDefinedColour(...)</para><para>new ifc.DraughtingPreDefinedColour(...)</para><para>new ifc.PreDefinedCurveFont(...)</para><para>new ifc.DraughtingPreDefinedCurveFont(...)</para><para>new ifc.PreDefinedTextFont(...)</para><para>new ifc.TextStyleFontModel(...)</para><para>new ifc.DraughtingPreDefinedTextFont(...)</para><para>new ifc.PreDefinedSymbol(...)</para><para>new ifc.SurfaceStyleLighting(...)</para><para>new ifc.SurfaceStyleRefraction(...)</para><para>new ifc.SurfaceStyleShading(...)</para><para>new ifc.SurfaceStyleWithTextures(...)</para><para>new ifc.SurfaceTexture(...)</para><para>new ifc.TextStyleForDefinedFont(...)</para><para>new ifc.TextStyleTextModel(...)</para><para>new ifc.TextureCoordinate(...)</para><para>new ifc.TextureVertex(...)</para><para>new ifc.TextureVertexList(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 925,TableId:3)] public partial class PresentationItem:ENTITY{//=========================================================================
public               PresentationItem():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.PresentationLayerWithStyle(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationorganizationresource/lexical/ifcpresentationlayerassignment.htm
[ifcSql(TypeGroupId:5,TypeId: 926,TableId:3)] public partial class PresentationLayerAssignment:ENTITY{//==============================================================
public               PresentationLayerAssignment():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name"><para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="AssignedItems"><para>Set1toUnbounded_LayeredItem</para></param>
/// <param name="Identifier">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PresentationLayerAssignment(Label Name,Text Description,Set1toUnbounded_LayeredItem AssignedItems,Identifier Identifier=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.AssignedItems=AssignedItems;this.Identifier=Identifier;this.EndOfLineComment=EndOfLineComment;}
public               PresentationLayerAssignment(Label Name,Set1toUnbounded_LayeredItem AssignedItems,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.AssignedItems=AssignedItems;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Label Name; //TYPE
[ifc(2,optional=true)] public Text Description; //TYPE
[ifc(3)] public Set1toUnbounded_LayeredItem AssignedItems; //ListType1d
[ifc(4,optional=true)] public Identifier Identifier; //TYPE
public override void AssignInverseElements(){if (AssignedItems!=null) foreach (LayeredItem __LayeredItem in AssignedItems) if (__LayeredItem.SelectType()==typeof(Representation)) {if (((Representation)__LayeredItem).LayerAssignments==null) ((Representation)__LayeredItem).LayerAssignments=new LIST<PresentationLayerAssignment>();((Representation)__LayeredItem).LayerAssignments.Add(this);}
                                             if (AssignedItems!=null) foreach (LayeredItem __LayeredItem in AssignedItems) if (__LayeredItem.SelectType()==typeof(RepresentationItem)) ((RepresentationItem)__LayeredItem).LayerAssignment=this;
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationorganizationresource/lexical/ifcpresentationlayerwithstyle.htm
[ifcSql(TypeGroupId:5,TypeId: 927,TableId:3)] public partial class PresentationLayerWithStyle:PresentationLayerAssignment{//==========================================
public               PresentationLayerWithStyle():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name"><para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="AssignedItems"><para>Set1toUnbounded_LayeredItem</para></param>
/// <param name="Identifier">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="LayerOn"><para>cast to (ifc.Logical)...</para></param>
/// <param name="LayerFrozen"><para>cast to (ifc.Logical)...</para></param>
/// <param name="LayerBlocked"><para>cast to (ifc.Logical)...</para></param>
/// <param name="LayerStyles"><para>Set0toUnbounded_PresentationStyle</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PresentationLayerWithStyle(Label Name,Text Description,Set1toUnbounded_LayeredItem AssignedItems,Identifier Identifier,Logical LayerOn,Logical LayerFrozen,Logical LayerBlocked,Set0toUnbounded_PresentationStyle LayerStyles,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.AssignedItems=AssignedItems;this.Identifier=Identifier;this.LayerOn=LayerOn;this.LayerFrozen=LayerFrozen;this.LayerBlocked=LayerBlocked;this.LayerStyles=LayerStyles;this.EndOfLineComment=EndOfLineComment;}
public               PresentationLayerWithStyle(Label Name,Set1toUnbounded_LayeredItem AssignedItems,Logical LayerOn,Logical LayerFrozen,Logical LayerBlocked,Set0toUnbounded_PresentationStyle LayerStyles,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.AssignedItems=AssignedItems;this.LayerOn=LayerOn;this.LayerFrozen=LayerFrozen;this.LayerBlocked=LayerBlocked;this.LayerStyles=LayerStyles;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public Logical LayerOn; //TYPE
[ifc(6)] public Logical LayerFrozen; //TYPE
[ifc(7)] public Logical LayerBlocked; //TYPE
[ifc(8)] public Set0toUnbounded_PresentationStyle LayerStyles; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.CurveStyle(...)</para><para>new ifc.FillAreaStyle(...)</para><para>new ifc.SurfaceStyle(...)</para><para>new ifc.TextStyle(...)</para><para>new ifc.SymbolStyle(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 928,TableId:3)] public partial class PresentationStyle:ENTITY{//========================================================================
public               PresentationStyle():base(){}// abstract
[ifc(1,optional=true)] public Label Name; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifcpresentationstyleassignment.htm
[ifcSql(TypeGroupId:5,TypeId: 929,TableId:3)] public partial class PresentationStyleAssignment:ENTITY{//==============================================================
public               PresentationStyleAssignment():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Styles"><para>Set1toUnbounded_PresentationStyleSelect</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PresentationStyleAssignment(Set1toUnbounded_PresentationStyleSelect Styles,string EndOfLineComment=null):base(){AddNext();this.Styles=Styles;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Set1toUnbounded_PresentationStyleSelect Styles; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcprocessextension/lexical/ifcprocedure.htm
[ifcSql(TypeGroupId:5,TypeId: 930,TableId:3)] public partial class Procedure:Process{//===============================================================================
public               Procedure():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Identification">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="LongDescription">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="PredefinedType">[optional]<para>ProcedureTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Procedure(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,Identifier Identification=null,Text LongDescription=null,ProcedureTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.Identification=Identification;this.LongDescription=LongDescription;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(8,optional=true)] public ProcedureTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.Procedure(...)</para><para>new ifc.Task(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 932,TableId:3)] public partial class Process:Object{//==================================================================================
public               Process():base(){}// abstract
[ifc(6,optional=true)] public Identifier Identification; //TYPE
[ifc(7,optional=true)] public Text LongDescription; //TYPE
/// <summary>INVERSE: OperatesOn of RelAssignsToProcess for RelatingProcess</summary>
[ifcInverse(For:"RelatingProcess")] public LIST<RelAssignsToProcess> OperatesOn;
/// <summary>INVERSE: IsPredecessorTo of RelSequence for RelatingProcess</summary>
[ifcInverse(For:"RelatingProcess")] public LIST<RelSequence> IsPredecessorTo;
/// <summary>INVERSE: IsSuccessorFrom of RelSequence for RelatedProcess</summary>
[ifcInverse(For:"RelatedProcess")] public LIST<RelSequence> IsSuccessorFrom;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.Annotation(...)</para><para>new ifc.Element(...)</para><para>new ifc.BuildingElement(...)</para><para>new ifc.Beam(...)</para><para>new ifc.BuildingElementProxy(...)</para><para>new ifc.Column(...)</para><para>new ifc.Covering(...)</para><para>new ifc.CurtainWall(...)</para><para>new ifc.Door(...)</para><para>new ifc.Footing(...)</para><para>new ifc.Member(...)</para><para>new ifc.Pile(...)</para><para>new ifc.Plate(...)</para><para>new ifc.Railing(...)</para><para>new ifc.Ramp(...)</para><para>new ifc.RampFlight(...)</para><para>new ifc.Roof(...)</para><para>new ifc.Slab(...)</para><para>new ifc.Stair(...)</para><para>new ifc.StairFlight(...)</para><para>new ifc.Wall(...)</para><para>new ifc.Window(...)</para><para>new ifc.BuildingElementComponent(...)</para><para>new ifc.DistributionElement(...)</para><para>new ifc.DistributionControlElement(...)</para><para>new ifc.Sensor(...)</para><para>new ifc.DistributionFlowElement(...)</para><para>new ifc.DistributionChamberElement(...)</para><para>new ifc.EnergyConversionDevice(...)</para><para>new ifc.FlowController(...)</para><para>new ifc.ElectricDistributionPoint(...)</para><para>new ifc.FlowFitting(...)</para><para>new ifc.DuctFitting(...)</para><para>new ifc.FlowMovingDevice(...)</para><para>new ifc.Fan(...)</para><para>new ifc.FlowSegment(...)</para><para>new ifc.FlowStorageDevice(...)</para><para>new ifc.FlowTerminal(...)</para><para>new ifc.FlowTreatmentDevice(...)</para><para>new ifc.Interceptor(...)</para><para>new ifc.ElementAssembly(...)</para><para>new ifc.ElementComponent(...)</para><para>new ifc.BuildingElementPart(...)</para><para>new ifc.DiscreteAccessory(...)</para><para>new ifc.Fastener(...)</para><para>new ifc.MechanicalFastener(...)</para><para>new ifc.ReinforcingElement(...)</para><para>new ifc.FeatureElement(...)</para><para>new ifc.FeatureElementAddition(...)</para><para>new ifc.ProjectionElement(...)</para><para>new ifc.FeatureElementSubtraction(...)</para><para>new ifc.OpeningElement(...)</para><para>new ifc.EdgeFeature(...)</para><para>new ifc.FurnishingElement(...)</para><para>new ifc.TransportElement(...)</para><para>new ifc.VirtualElement(...)</para><para>new ifc.ElectricalElement(...)</para><para>new ifc.EquipmentElement(...)</para><para>new ifc.Port(...)</para><para>new ifc.DistributionPort(...)</para><para>new ifc.PositioningElement(...)</para><para>new ifc.Alignment(...)</para><para>new ifc.Grid(...)</para><para>new ifc.Proxy(...)</para><para>new ifc.SpatialElement(...)</para><para>new ifc.StructuralActivity(...)</para><para>new ifc.StructuralItem(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 933,TableId:3)] public partial class Product:Object{//==================================================================================
public               Product():base(){}// abstract
[ifc(6,optional=true)] public ObjectPlacement _ObjectPlacement; //ENTITY
[ifc(7,optional=true)] public ProductRepresentation _Representation; //ENTITY
/// <summary>INVERSE: ReferencedBy of RelAssignsToProduct for RelatingProduct</summary>
[ifcInverse(For:"RelatingProduct")] public LIST<RelAssignsToProduct> ReferencedBy;
public override void AssignInverseElements(){if (_ObjectPlacement!=null) {if (_ObjectPlacement.PlacesObject==null) _ObjectPlacement.PlacesObject=new LIST<Product>();_ObjectPlacement.PlacesObject.Add(this);}
                                             if (_Representation!=null) if (_Representation is ProductDefinitionShape) {if (((ProductDefinitionShape)_Representation).ShapeOfProduct==null) ((ProductDefinitionShape)_Representation).ShapeOfProduct=new LIST<Product>();((ProductDefinitionShape)_Representation).ShapeOfProduct.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcrepresentationresource/lexical/ifcproductdefinitionshape.htm
[ifcSql(TypeGroupId:5,TypeId: 934,TableId:3)] public partial class ProductDefinitionShape:ProductRepresentation{//====================================================
public               ProductDefinitionShape():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="Representations"><para>List1toUnbounded_Representation</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ProductDefinitionShape(Label Name,Text Description,List1toUnbounded_Representation Representations,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.Representations=Representations;this.EndOfLineComment=EndOfLineComment;}
public               ProductDefinitionShape(List1toUnbounded_Representation Representations,string EndOfLineComment=null):base(){AddNext();this.Representations=Representations;this.EndOfLineComment=EndOfLineComment;}
/// <summary>INVERSE: ShapeOfProduct of Product for _Representation</summary>
[ifcInverse(For:"_Representation")] public LIST<Product> ShapeOfProduct;
/// <summary>INVERSE: HasShapeAspects of ShapeAspect for PartOfProductDefinitionShape</summary>
[ifcInverse(For:"PartOfProductDefinitionShape")] public LIST<ShapeAspect> HasShapeAspects;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 935,TableId:3)] public partial class ProductRepresentation:ENTITY{//====================================================================
public               ProductRepresentation():base(){}// abstract
[ifc(1,optional=true)] public Label Name; //TYPE
[ifc(2,optional=true)] public Text Description; //TYPE
[ifc(3)] public List1toUnbounded_Representation Representations; //ListType1d
public override void AssignInverseElements(){if (Representations!=null) foreach (Representation __Representation in Representations) if (__Representation is Representation) {if (((Representation)__Representation).OfProductRepresentation==null) ((Representation)__Representation).OfProductRepresentation=new LIST<ProductRepresentation>();((Representation)__Representation).OfProductRepresentation.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ArbitraryClosedProfileDef(...)</para><para>new ifc.ArbitraryProfileDefWithVoids(...)</para><para>new ifc.ArbitraryOpenProfileDef(...)</para><para>new ifc.CenterLineProfileDef(...)</para><para>new ifc.CompositeProfileDef(...)</para><para>new ifc.DerivedProfileDef(...)</para><para>new ifc.ParameterizedProfileDef(...)</para><para>new ifc.AsymmetricIShapeProfileDef(...)</para><para>new ifc.CShapeProfileDef(...)</para><para>new ifc.CircleProfileDef(...)</para><para>new ifc.CircleHollowProfileDef(...)</para><para>new ifc.EllipseProfileDef(...)</para><para>new ifc.IShapeProfileDef(...)</para><para>new ifc.LShapeProfileDef(...)</para><para>new ifc.RectangleProfileDef(...)</para><para>new ifc.TShapeProfileDef(...)</para><para>new ifc.TrapeziumProfileDef(...)</para><para>new ifc.UShapeProfileDef(...)</para><para>new ifc.ZShapeProfileDef(...)</para><para>new ifc.CraneRailAShapeProfileDef(...)</para><para>new ifc.CraneRailFShapeProfileDef(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcprofileresource/lexical/ifcprofiledef.htm
[ifcSql(TypeGroupId:5,TypeId: 936,TableId:3)] public partial class ProfileDef:ENTITY{//===============================================================================
public               ProfileDef():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ProfileType"><para>ProfileTypeEnum</para></param>
/// <param name="ProfileName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ProfileDef(ProfileTypeEnum ProfileType,Label ProfileName=null,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.ProfileName=ProfileName;this.EndOfLineComment=EndOfLineComment;}
public               ProfileDef(ProfileTypeEnum ProfileType):base(){AddNext();this.ProfileType=ProfileType;}
[ifc(1)] public ProfileTypeEnum ProfileType; //ENUM
[ifc(2,optional=true)] public Label ProfileName; //TYPE
/// <summary>INVERSE: HasExternalReference of ExternalReferenceRelationship for RelatedResourceObjects</summary>
[ifcInverse(For:"RelatedResourceObjects")] public LIST<ExternalReferenceRelationship> HasExternalReference;
/// <summary>INVERSE: HasProperties of ProfileProperties for ProfileDefinition</summary>
[ifcInverse(For:"ProfileDefinition")] public LIST<ProfileProperties> HasProperties;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.GeneralProfileProperties(...)</para><para>new ifc.RibPlateProfileProperties(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcprofileresource/lexical/ifcprofileproperties.htm
[ifcSql(TypeGroupId:5,TypeId: 937,TableId:3)] public partial class ProfileProperties:ExtendedProperties{//============================================================
public               ProfileProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="Properties"><para>Set1toUnbounded_Property</para></param>
/// <param name="ProfileDefinition"><para>new ifc.ProfileDef(...)</para><para>new ifc.ArbitraryClosedProfileDef(...)</para><para>new ifc.ArbitraryProfileDefWithVoids(...)</para><para>new ifc.ArbitraryOpenProfileDef(...)</para><para>new ifc.CenterLineProfileDef(...)</para><para>new ifc.CompositeProfileDef(...)</para><para>new ifc.DerivedProfileDef(...)</para><para>new ifc.AsymmetricIShapeProfileDef(...)</para><para>new ifc.CShapeProfileDef(...)</para><para>new ifc.CircleProfileDef(...)</para><para>new ifc.CircleHollowProfileDef(...)</para><para>new ifc.EllipseProfileDef(...)</para><para>new ifc.IShapeProfileDef(...)</para><para>new ifc.LShapeProfileDef(...)</para><para>new ifc.RectangleProfileDef(...)</para><para>new ifc.TShapeProfileDef(...)</para><para>new ifc.TrapeziumProfileDef(...)</para><para>new ifc.UShapeProfileDef(...)</para><para>new ifc.ZShapeProfileDef(...)</para><para>new ifc.CraneRailAShapeProfileDef(...)</para><para>new ifc.CraneRailFShapeProfileDef(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ProfileProperties(Identifier Name,Text Description,Set1toUnbounded_Property Properties,ProfileDef ProfileDefinition,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.Properties=Properties;this.ProfileDefinition=ProfileDefinition;this.EndOfLineComment=EndOfLineComment;}
public               ProfileProperties(Set1toUnbounded_Property Properties,ProfileDef ProfileDefinition,string EndOfLineComment=null):base(){AddNext();this.Properties=Properties;this.ProfileDefinition=ProfileDefinition;this.EndOfLineComment=EndOfLineComment;}
[ifc(4)] public ProfileDef ProfileDefinition; //ENTITY
public override void AssignInverseElements(){if (ProfileDefinition!=null) {if (ProfileDefinition.HasProperties==null) ProfileDefinition.HasProperties=new LIST<ProfileProperties>();ProfileDefinition.HasProperties.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifckernel/lexical/ifcproject.htm
[ifcSql(TypeGroupId:5,TypeId: 938,TableId:3)] public partial class Project:Context{//=================================================================================
public               Project():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="LongName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Phase">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="RepresentationContexts">[optional]<para>Set1toUnbounded_RepresentationContext</para></param>
/// <param name="UnitsInContext">[optional]<para>new ifc.UnitAssignment(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Project(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,Label LongName=null,Label Phase=null,Set1toUnbounded_RepresentationContext RepresentationContexts=null,UnitAssignment UnitsInContext=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.LongName=LongName;this.Phase=Phase;this.RepresentationContexts=RepresentationContexts;this.UnitsInContext=UnitsInContext;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedmgmtelements/lexical/ifcprojectorder.htm
[ifcSql(TypeGroupId:5,TypeId: 940,TableId:3)] public partial class ProjectOrder:Control{//============================================================================
public               ProjectOrder():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Identification">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>ProjectOrderTypeEnum</para></param>
/// <param name="Status">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="LongDescription">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ProjectOrder(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,Identifier Identification=null,ProjectOrderTypeEnum? PredefinedType=null,Label Status=null,Text LongDescription=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.Identification=Identification;this.PredefinedType=PredefinedType;this.Status=Status;this.LongDescription=LongDescription;this.EndOfLineComment=EndOfLineComment;}
[ifc(7,optional=true)] public ProjectOrderTypeEnum? PredefinedType; //ENUM
[ifc(8,optional=true)] public Label Status; //TYPE
[ifc(9,optional=true)] public Text LongDescription; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifcprojectionelement.htm
[ifcSql(TypeGroupId:5,TypeId: 942,TableId:3)] public partial class ProjectionElement:FeatureElementAddition{//========================================================
public               ProjectionElement():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>ProjectionElementTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ProjectionElement(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,ProjectionElementTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public ProjectionElementTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ComplexProperty(...)</para><para>new ifc.SimpleProperty(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 943,TableId:3)] public partial class Property:PropertyAbstraction{//====================================================================
public               Property():base(){}// abstract
[ifc(1)] public Identifier Name; //TYPE
[ifc(2,optional=true)] public Text Description; //TYPE
/// <summary>INVERSE: PartOfComplex of ComplexProperty for HasProperties</summary>
[ifcInverse(For:"HasProperties")] public LIST<ComplexProperty> PartOfComplex;
/// <summary>INVERSE: PropertyForDependance of PropertyDependencyRelationship for DependingProperty</summary>
[ifcInverse(For:"DependingProperty")] public LIST<PropertyDependencyRelationship> PropertyForDependance;
/// <summary>INVERSE: PropertyDependsOn of PropertyDependencyRelationship for DependantProperty</summary>
[ifcInverse(For:"DependantProperty")] public LIST<PropertyDependencyRelationship> PropertyDependsOn;
/// <summary>INVERSE: PartOfPset of PropertySet for HasProperties</summary>
[ifcInverse(For:"HasProperties")] public LIST<PropertySet> PartOfPset;
/// <summary>INVERSE: HasApprovals of ResourceApprovalRelationship for RelatedResourceObjects</summary>
[ifcInverse(For:"RelatedResourceObjects")] public LIST<ResourceApprovalRelationship> HasApprovals;
/// <summary>INVERSE: HasConstraints of ResourceConstraintRelationship for RelatedResourceObjects</summary>
[ifcInverse(For:"RelatedResourceObjects")] public LIST<ResourceConstraintRelationship> HasConstraints;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ExtendedProperties(...)</para><para>new ifc.MaterialProperties(...)</para><para>new ifc.ExtendedMaterialProperties(...)</para><para>new ifc.FuelProperties(...)</para><para>new ifc.GeneralMaterialProperties(...)</para><para>new ifc.HygroscopicMaterialProperties(...)</para><para>new ifc.MechanicalMaterialProperties(...)</para><para>new ifc.OpticalMaterialProperties(...)</para><para>new ifc.ProductsOfCombustionProperties(...)</para><para>new ifc.ThermalMaterialProperties(...)</para><para>new ifc.WaterProperties(...)</para><para>new ifc.ProfileProperties(...)</para><para>new ifc.GeneralProfileProperties(...)</para><para>new ifc.RibPlateProfileProperties(...)</para><para>new ifc.PreDefinedProperties(...)</para><para>new ifc.ReinforcementBarProperties(...)</para><para>new ifc.SectionProperties(...)</para><para>new ifc.SectionReinforcementProperties(...)</para><para>new ifc.Property(...)</para><para>new ifc.ComplexProperty(...)</para><para>new ifc.SimpleProperty(...)</para><para>new ifc.PropertyEnumeration(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 944,TableId:3)] public partial class PropertyAbstraction:ENTITY{//======================================================================
public               PropertyAbstraction():base(){}// abstract
/// <summary>INVERSE: HasExternalReferences of ExternalReferenceRelationship for RelatedResourceObjects</summary>
[ifcInverse(For:"RelatedResourceObjects")] public LIST<ExternalReferenceRelationship> HasExternalReferences;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpropertyresource/lexical/ifcpropertyboundedvalue.htm
[ifcSql(TypeGroupId:5,TypeId: 945,TableId:3)] public partial class PropertyBoundedValue:SimpleProperty{//=============================================================
public               PropertyBoundedValue():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name"><para>cast to (ifc.Identifier)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="UpperBoundValue">[optional]<para>new ifc.Value(new AbsorbedDoseMeasure(...))...</para><para>new ifc.Value(new AccelerationMeasure(...))...</para><para>new ifc.Value(new AmountOfSubstanceMeasure(...))...</para><para>new ifc.Value(new AngularVelocityMeasure(...))...</para><para>new ifc.Value(new AreaDensityMeasure(...))...</para><para>new ifc.Value(new AreaMeasure(...))...</para><para>new ifc.Value(new Boolean(...))...</para><para>new ifc.Value(new ComplexNumber(...))...</para><para>new ifc.Value(new CompoundPlaneAngleMeasure(...))...</para><para>new ifc.Value(new ContextDependentMeasure(...))...</para><para>new ifc.Value(new CountMeasure(...))...</para><para>new ifc.Value(new CurvatureMeasure(...))...</para><para>new ifc.Value(new Date(...))...</para><para>new ifc.Value(new DateTime(...))...</para><para>new ifc.Value(new DescriptiveMeasure(...))...</para><para>new ifc.Value(new DoseEquivalentMeasure(...))...</para><para>new ifc.Value(new Duration(...))...</para><para>new ifc.Value(new DynamicViscosityMeasure(...))...</para><para>new ifc.Value(new ElectricCapacitanceMeasure(...))...</para><para>... (and more [truncated]) ...</para></param>
/// <param name="LowerBoundValue">[optional]<para>new ifc.Value(new AbsorbedDoseMeasure(...))...</para><para>new ifc.Value(new AccelerationMeasure(...))...</para><para>new ifc.Value(new AmountOfSubstanceMeasure(...))...</para><para>new ifc.Value(new AngularVelocityMeasure(...))...</para><para>new ifc.Value(new AreaDensityMeasure(...))...</para><para>new ifc.Value(new AreaMeasure(...))...</para><para>new ifc.Value(new Boolean(...))...</para><para>new ifc.Value(new ComplexNumber(...))...</para><para>new ifc.Value(new CompoundPlaneAngleMeasure(...))...</para><para>new ifc.Value(new ContextDependentMeasure(...))...</para><para>new ifc.Value(new CountMeasure(...))...</para><para>new ifc.Value(new CurvatureMeasure(...))...</para><para>new ifc.Value(new Date(...))...</para><para>new ifc.Value(new DateTime(...))...</para><para>new ifc.Value(new DescriptiveMeasure(...))...</para><para>new ifc.Value(new DoseEquivalentMeasure(...))...</para><para>new ifc.Value(new Duration(...))...</para><para>new ifc.Value(new DynamicViscosityMeasure(...))...</para><para>new ifc.Value(new ElectricCapacitanceMeasure(...))...</para><para>... (and more [truncated]) ...</para></param>
/// <param name="Unit">[optional]<para>new ifc.Unit(new DerivedUnit(...))...</para><para>new ifc.Unit(new MonetaryUnit(...))...</para><para>new ifc.Unit(new NamedUnit(...))...</para></param>
/// <param name="SetPointValue">[optional]<para>new ifc.Value(new AbsorbedDoseMeasure(...))...</para><para>new ifc.Value(new AccelerationMeasure(...))...</para><para>new ifc.Value(new AmountOfSubstanceMeasure(...))...</para><para>new ifc.Value(new AngularVelocityMeasure(...))...</para><para>new ifc.Value(new AreaDensityMeasure(...))...</para><para>new ifc.Value(new AreaMeasure(...))...</para><para>new ifc.Value(new Boolean(...))...</para><para>new ifc.Value(new ComplexNumber(...))...</para><para>new ifc.Value(new CompoundPlaneAngleMeasure(...))...</para><para>new ifc.Value(new ContextDependentMeasure(...))...</para><para>new ifc.Value(new CountMeasure(...))...</para><para>new ifc.Value(new CurvatureMeasure(...))...</para><para>new ifc.Value(new Date(...))...</para><para>new ifc.Value(new DateTime(...))...</para><para>new ifc.Value(new DescriptiveMeasure(...))...</para><para>new ifc.Value(new DoseEquivalentMeasure(...))...</para><para>new ifc.Value(new Duration(...))...</para><para>new ifc.Value(new DynamicViscosityMeasure(...))...</para><para>new ifc.Value(new ElectricCapacitanceMeasure(...))...</para><para>... (and more [truncated]) ...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PropertyBoundedValue(Identifier Name,Text Description=null,Value UpperBoundValue=null,Value LowerBoundValue=null,Unit Unit=null,Value SetPointValue=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.UpperBoundValue=UpperBoundValue;this.LowerBoundValue=LowerBoundValue;this.Unit=Unit;this.SetPointValue=SetPointValue;this.EndOfLineComment=EndOfLineComment;}
public               PropertyBoundedValue(Identifier Name,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.EndOfLineComment=EndOfLineComment;}
[ifc(3,optional=true)] public Value UpperBoundValue; //SELECT
[ifc(4,optional=true)] public Value LowerBoundValue; //SELECT
[ifc(5,optional=true)] public Unit Unit; //SELECT
[ifc(6,optional=true)] public Value SetPointValue; //SELECT
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.PropertySetDefinition(...)</para><para>new ifc.PropertyTemplateDefinition(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 946,TableId:3)] public partial class PropertyDefinition:Root{//=========================================================================
public               PropertyDefinition():base(){}// abstract
/// <summary>INVERSE: HasAssociations of RelAssociates for RelatedObjects</summary>
[ifcInverse(For:"RelatedObjects")] public LIST<RelAssociates> HasAssociations;
/// <summary>INVERSE: HasContext of RelDeclares for RelatedDefinitions</summary>
[ifcInverse(For:"RelatedDefinitions")] public RelDeclares HasContext;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpropertyresource/lexical/ifcpropertydependencyrelationship.htm
[ifcSql(TypeGroupId:5,TypeId: 947,TableId:3)] public partial class PropertyDependencyRelationship:ResourceLevelRelationship{//========================================
public               PropertyDependencyRelationship():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="DependingProperty"><para>new ifc.ComplexProperty(...)</para></param>
/// <param name="DependantProperty"><para>new ifc.ComplexProperty(...)</para></param>
/// <param name="Expression">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PropertyDependencyRelationship(Label Name,Text Description,Property DependingProperty,Property DependantProperty,Text Expression=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.DependingProperty=DependingProperty;this.DependantProperty=DependantProperty;this.Expression=Expression;this.EndOfLineComment=EndOfLineComment;}
public               PropertyDependencyRelationship(Property DependingProperty,Property DependantProperty,string EndOfLineComment=null):base(){AddNext();this.DependingProperty=DependingProperty;this.DependantProperty=DependantProperty;this.EndOfLineComment=EndOfLineComment;}
[ifc(3)] public Property DependingProperty; //ENTITY
[ifc(4)] public Property DependantProperty; //ENTITY
[ifc(5,optional=true)] public Text Expression; //TYPE
public override void AssignInverseElements(){if (DependingProperty!=null) {if (DependingProperty.PropertyForDependance==null) DependingProperty.PropertyForDependance=new LIST<PropertyDependencyRelationship>();DependingProperty.PropertyForDependance.Add(this);}
                                             if (DependantProperty!=null) {if (DependantProperty.PropertyDependsOn==null) DependantProperty.PropertyDependsOn=new LIST<PropertyDependencyRelationship>();DependantProperty.PropertyDependsOn.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpropertyresource/lexical/ifcpropertyenumeratedvalue.htm
[ifcSql(TypeGroupId:5,TypeId: 948,TableId:3)] public partial class PropertyEnumeratedValue:SimpleProperty{//==========================================================
public               PropertyEnumeratedValue():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name"><para>cast to (ifc.Identifier)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="EnumerationValues">[optional]<para>List1toUnbounded_Value</para></param>
/// <param name="EnumerationReference">[optional]<para>new ifc.PropertyEnumeration(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PropertyEnumeratedValue(Identifier Name,Text Description=null,List1toUnbounded_Value EnumerationValues=null,PropertyEnumeration EnumerationReference=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.EnumerationValues=EnumerationValues;this.EnumerationReference=EnumerationReference;this.EndOfLineComment=EndOfLineComment;}
public               PropertyEnumeratedValue(Identifier Name,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.EndOfLineComment=EndOfLineComment;}
[ifc(3,optional=true)] public List1toUnbounded_Value EnumerationValues; //ListType1d
[ifc(4,optional=true)] public PropertyEnumeration EnumerationReference; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpropertyresource/lexical/ifcpropertyenumeration.htm
[ifcSql(TypeGroupId:5,TypeId: 949,TableId:3)] public partial class PropertyEnumeration:PropertyAbstraction{//=========================================================
public               PropertyEnumeration():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name"><para>cast to (ifc.Label)...</para></param>
/// <param name="EnumerationValues"><para>List1toUnboundedUnique_Value</para></param>
/// <param name="Unit">[optional]<para>new ifc.Unit(new DerivedUnit(...))...</para><para>new ifc.Unit(new MonetaryUnit(...))...</para><para>new ifc.Unit(new NamedUnit(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PropertyEnumeration(Label Name,List1toUnboundedUnique_Value EnumerationValues,Unit Unit=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.EnumerationValues=EnumerationValues;this.Unit=Unit;this.EndOfLineComment=EndOfLineComment;}
public               PropertyEnumeration(Label Name,List1toUnboundedUnique_Value EnumerationValues):base(){AddNext();this.Name=Name;this.EnumerationValues=EnumerationValues;}
[ifc(1)] public Label Name; //TYPE
[ifc(2)] public List1toUnboundedUnique_Value EnumerationValues; //ListType1d
[ifc(3,optional=true)] public Unit Unit; //SELECT
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpropertyresource/lexical/ifcpropertylistvalue.htm
[ifcSql(TypeGroupId:5,TypeId: 950,TableId:3)] public partial class PropertyListValue:SimpleProperty{//================================================================
public               PropertyListValue():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name"><para>cast to (ifc.Identifier)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ListValues">[optional]<para>List1toUnbounded_Value</para></param>
/// <param name="Unit">[optional]<para>new ifc.Unit(new DerivedUnit(...))...</para><para>new ifc.Unit(new MonetaryUnit(...))...</para><para>new ifc.Unit(new NamedUnit(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PropertyListValue(Identifier Name,Text Description=null,List1toUnbounded_Value ListValues=null,Unit Unit=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.ListValues=ListValues;this.Unit=Unit;this.EndOfLineComment=EndOfLineComment;}
public               PropertyListValue(Identifier Name,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.EndOfLineComment=EndOfLineComment;}
[ifc(3,optional=true)] public List1toUnbounded_Value ListValues; //ListType1d
[ifc(4,optional=true)] public Unit Unit; //SELECT
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpropertyresource/lexical/ifcpropertyreferencevalue.htm
[ifcSql(TypeGroupId:5,TypeId: 951,TableId:3)] public partial class PropertyReferenceValue:SimpleProperty{//===========================================================
public               PropertyReferenceValue():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name"><para>cast to (ifc.Identifier)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="UsageName">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="PropertyReference">[optional]<para>new ifc.ObjectReferenceSelect(new Address(...))...</para><para>new ifc.ObjectReferenceSelect(new AppliedValue(...))...</para><para>new ifc.ObjectReferenceSelect(new ExternalReference(...))...</para><para>new ifc.ObjectReferenceSelect(new MaterialDefinition(...))...</para><para>new ifc.ObjectReferenceSelect(new Organization(...))...</para><para>new ifc.ObjectReferenceSelect(new Person(...))...</para><para>new ifc.ObjectReferenceSelect(new PersonAndOrganization(...))...</para><para>new ifc.ObjectReferenceSelect(new Table(...))...</para><para>new ifc.ObjectReferenceSelect(new TimeSeries(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PropertyReferenceValue(Identifier Name,Text Description=null,Text UsageName=null,ObjectReferenceSelect PropertyReference=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.UsageName=UsageName;this.PropertyReference=PropertyReference;this.EndOfLineComment=EndOfLineComment;}
public               PropertyReferenceValue(Identifier Name,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.EndOfLineComment=EndOfLineComment;}
[ifc(3,optional=true)] public Text UsageName; //TYPE
[ifc(4,optional=true)] public ObjectReferenceSelect PropertyReference; //SELECT
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifckernel/lexical/ifcpropertyset.htm
[ifcSql(TypeGroupId:5,TypeId: 952,TableId:3)] public partial class PropertySet:PropertySetDefinition{//===============================================================
public               PropertySet():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="HasProperties"><para>Set1toUnbounded_Property</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PropertySet(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Set1toUnbounded_Property HasProperties,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.HasProperties=HasProperties;this.EndOfLineComment=EndOfLineComment;}
public               PropertySet(Set1toUnbounded_Property HasProperties,string EndOfLineComment=null):base(){AddNext();this.HasProperties=HasProperties;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public Set1toUnbounded_Property HasProperties; //ListType1d
public override void AssignInverseElements(){if (HasProperties!=null) foreach (Property __Property in HasProperties) if (__Property is Property) {if (((Property)__Property).PartOfPset==null) ((Property)__Property).PartOfPset=new LIST<PropertySet>();((Property)__Property).PartOfPset.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.PreDefinedPropertySet(...)</para><para>new ifc.DoorLiningProperties(...)</para><para>new ifc.DoorPanelProperties(...)</para><para>new ifc.PermeableCoveringProperties(...)</para><para>new ifc.ReinforcementDefinitionProperties(...)</para><para>new ifc.WindowLiningProperties(...)</para><para>new ifc.WindowPanelProperties(...)</para><para>new ifc.PropertySet(...)</para><para>new ifc.QuantitySet(...)</para><para>new ifc.EnergyProperties(...)</para><para>new ifc.FluidFlowProperties(...)</para><para>new ifc.ServiceLifeFactor(...)</para><para>new ifc.SoundProperties(...)</para><para>new ifc.SoundValue(...)</para><para>new ifc.SpaceThermalLoadProperties(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 953,TableId:3)] public partial class PropertySetDefinition:PropertyDefinition{//========================================================
public               PropertySetDefinition():base(){}// abstract
/// <summary>INVERSE: DefinesOccurrence of RelDefinesByProperties for RelatingPropertyDefinition</summary>
[ifcInverse(For:"RelatingPropertyDefinition")] public LIST<RelDefinesByProperties> DefinesOccurrence;
/// <summary>INVERSE: IsDefinedBy of RelDefinesByTemplate for RelatedPropertySets</summary>
[ifcInverse(For:"RelatedPropertySets")] public LIST<RelDefinesByTemplate> IsDefinedBy;
/// <summary>INVERSE: DefinesType of TypeObject for HasPropertySets</summary>
[ifcInverse(For:"HasPropertySets")] public LIST<TypeObject> DefinesType;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifckernel/lexical/ifcpropertysettemplate.htm
[ifcSql(TypeGroupId:5,TypeId: 954,TableId:3)] public partial class PropertySetTemplate:PropertyTemplateDefinition{//==================================================
public               PropertySetTemplate():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="TemplateType">[optional]<para>PropertySetTemplateTypeEnum</para></param>
/// <param name="ApplicableEntity">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertyTemplates"><para>Set1toUnbounded_PropertyTemplate</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PropertySetTemplate(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,PropertySetTemplateTypeEnum? TemplateType,Identifier ApplicableEntity,Set1toUnbounded_PropertyTemplate HasPropertyTemplates,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.TemplateType=TemplateType;this.ApplicableEntity=ApplicableEntity;this.HasPropertyTemplates=HasPropertyTemplates;this.EndOfLineComment=EndOfLineComment;}
public               PropertySetTemplate(Set1toUnbounded_PropertyTemplate HasPropertyTemplates,string EndOfLineComment=null):base(){AddNext();this.HasPropertyTemplates=HasPropertyTemplates;this.EndOfLineComment=EndOfLineComment;}
[ifc(5,optional=true)] public PropertySetTemplateTypeEnum? TemplateType; //ENUM
[ifc(6,optional=true)] public Identifier ApplicableEntity; //TYPE
[ifc(7)] public Set1toUnbounded_PropertyTemplate HasPropertyTemplates; //ListType1d
/// <summary>INVERSE: Defines of RelDefinesByTemplate for RelatingTemplate</summary>
[ifcInverse(For:"RelatingTemplate")] public LIST<RelDefinesByTemplate> Defines;
public override void AssignInverseElements(){if (HasPropertyTemplates!=null) foreach (PropertyTemplate __PropertyTemplate in HasPropertyTemplates) if (__PropertyTemplate is PropertyTemplate) {if (((PropertyTemplate)__PropertyTemplate).PartOfPsetTemplate==null) ((PropertyTemplate)__PropertyTemplate).PartOfPsetTemplate=new LIST<PropertySetTemplate>();((PropertyTemplate)__PropertyTemplate).PartOfPsetTemplate.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpropertyresource/lexical/ifcpropertysinglevalue.htm
[ifcSql(TypeGroupId:5,TypeId: 955,TableId:3)] public partial class PropertySingleValue:SimpleProperty{//==============================================================
public               PropertySingleValue():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name"><para>cast to (ifc.Identifier)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="NominalValue">[optional]<para>new ifc.Value(new AbsorbedDoseMeasure(...))...</para><para>new ifc.Value(new AccelerationMeasure(...))...</para><para>new ifc.Value(new AmountOfSubstanceMeasure(...))...</para><para>new ifc.Value(new AngularVelocityMeasure(...))...</para><para>new ifc.Value(new AreaDensityMeasure(...))...</para><para>new ifc.Value(new AreaMeasure(...))...</para><para>new ifc.Value(new Boolean(...))...</para><para>new ifc.Value(new ComplexNumber(...))...</para><para>new ifc.Value(new CompoundPlaneAngleMeasure(...))...</para><para>new ifc.Value(new ContextDependentMeasure(...))...</para><para>new ifc.Value(new CountMeasure(...))...</para><para>new ifc.Value(new CurvatureMeasure(...))...</para><para>new ifc.Value(new Date(...))...</para><para>new ifc.Value(new DateTime(...))...</para><para>new ifc.Value(new DescriptiveMeasure(...))...</para><para>new ifc.Value(new DoseEquivalentMeasure(...))...</para><para>new ifc.Value(new Duration(...))...</para><para>new ifc.Value(new DynamicViscosityMeasure(...))...</para><para>new ifc.Value(new ElectricCapacitanceMeasure(...))...</para><para>... (and more [truncated]) ...</para></param>
/// <param name="Unit">[optional]<para>new ifc.Unit(new DerivedUnit(...))...</para><para>new ifc.Unit(new MonetaryUnit(...))...</para><para>new ifc.Unit(new NamedUnit(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PropertySingleValue(Identifier Name,Text Description=null,Value NominalValue=null,Unit Unit=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.NominalValue=NominalValue;this.Unit=Unit;this.EndOfLineComment=EndOfLineComment;}
public               PropertySingleValue(Identifier Name,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.EndOfLineComment=EndOfLineComment;}
[ifc(3,optional=true)] public Value NominalValue; //SELECT
[ifc(4,optional=true)] public Unit Unit; //SELECT
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpropertyresource/lexical/ifcpropertytablevalue.htm
[ifcSql(TypeGroupId:5,TypeId: 956,TableId:3)] public partial class PropertyTableValue:SimpleProperty{//===============================================================
public               PropertyTableValue():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name"><para>cast to (ifc.Identifier)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="DefiningValues">[optional]<para>List1toUnboundedUnique_Value</para></param>
/// <param name="DefinedValues">[optional]<para>List1toUnbounded_Value</para></param>
/// <param name="Expression">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="DefiningUnit">[optional]<para>new ifc.Unit(new DerivedUnit(...))...</para><para>new ifc.Unit(new MonetaryUnit(...))...</para><para>new ifc.Unit(new NamedUnit(...))...</para></param>
/// <param name="DefinedUnit">[optional]<para>new ifc.Unit(new DerivedUnit(...))...</para><para>new ifc.Unit(new MonetaryUnit(...))...</para><para>new ifc.Unit(new NamedUnit(...))...</para></param>
/// <param name="CurveInterpolation">[optional]<para>CurveInterpolationEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PropertyTableValue(Identifier Name,Text Description=null,List1toUnboundedUnique_Value DefiningValues=null,List1toUnbounded_Value DefinedValues=null,Text Expression=null,Unit DefiningUnit=null,Unit DefinedUnit=null,CurveInterpolationEnum? CurveInterpolation=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.DefiningValues=DefiningValues;this.DefinedValues=DefinedValues;this.Expression=Expression;this.DefiningUnit=DefiningUnit;this.DefinedUnit=DefinedUnit;this.CurveInterpolation=CurveInterpolation;this.EndOfLineComment=EndOfLineComment;}
public               PropertyTableValue(Identifier Name,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.EndOfLineComment=EndOfLineComment;}
[ifc(3,optional=true)] public List1toUnboundedUnique_Value DefiningValues; //ListType1d
[ifc(4,optional=true)] public List1toUnbounded_Value DefinedValues; //ListType1d
[ifc(5,optional=true)] public Text Expression; //TYPE
[ifc(6,optional=true)] public Unit DefiningUnit; //SELECT
[ifc(7,optional=true)] public Unit DefinedUnit; //SELECT
[ifc(8,optional=true)] public CurveInterpolationEnum? CurveInterpolation; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ComplexPropertyTemplate(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 957,TableId:3)] public partial class PropertyTemplate:PropertyTemplateDefinition{//=====================================================
public               PropertyTemplate():base(){}// abstract
/// <summary>INVERSE: PartOfComplexTemplate of ComplexPropertyTemplate for HasPropertyTemplates</summary>
[ifcInverse(For:"HasPropertyTemplates")] public LIST<ComplexPropertyTemplate> PartOfComplexTemplate;
/// <summary>INVERSE: PartOfPsetTemplate of PropertySetTemplate for HasPropertyTemplates</summary>
[ifcInverse(For:"HasPropertyTemplates")] public LIST<PropertySetTemplate> PartOfPsetTemplate;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.PropertySetTemplate(...)</para><para>new ifc.PropertyTemplate(...)</para><para>new ifc.ComplexPropertyTemplate(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 958,TableId:3)] public partial class PropertyTemplateDefinition:PropertyDefinition{//===================================================
public               PropertyTemplateDefinition():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcelectricaldomain/lexical/ifcprotectivedevicetype.htm
[ifcSql(TypeGroupId:5,TypeId: 962,TableId:3)] public partial class ProtectiveDeviceType:FlowControllerType{//=========================================================
public               ProtectiveDeviceType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>ProtectiveDeviceTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ProtectiveDeviceType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,ProtectiveDeviceTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               ProtectiveDeviceType(ProtectiveDeviceTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public ProtectiveDeviceTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifckernel/lexical/ifcproxy.htm
[ifcSql(TypeGroupId:5,TypeId: 963,TableId:3)] public partial class Proxy:Product{//===================================================================================
public               Proxy():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="ProxyType"><para>ObjectTypeEnum</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Proxy(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Label ObjectType,ObjectPlacement _ObjectPlacement,ProductRepresentation _Representation,ObjectTypeEnum ProxyType,Label Tag=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.ProxyType=ProxyType;this.Tag=Tag;this.EndOfLineComment=EndOfLineComment;}
public               Proxy(ObjectTypeEnum ProxyType,string EndOfLineComment=null):base(){AddNext();this.ProxyType=ProxyType;this.EndOfLineComment=EndOfLineComment;}
[ifc(8)] public ObjectTypeEnum ProxyType; //ENUM
[ifc(9,optional=true)] public Label Tag; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifcpumptype.htm
[ifcSql(TypeGroupId:5,TypeId: 965,TableId:3)] public partial class PumpType:FlowMovingDeviceType{//===================================================================
public               PumpType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>PumpTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PumpType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,PumpTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               PumpType(PumpTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public PumpTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcquantityresource/lexical/ifcquantityarea.htm
[ifcSql(TypeGroupId:5,TypeId: 966,TableId:3)] public partial class QuantityArea:PhysicalSimpleQuantity{//=============================================================
public               QuantityArea():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name"><para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="Unit">[optional]<para>new ifc.ContextDependentUnit(...)</para><para>new ifc.ConversionBasedUnit(...)</para><para>new ifc.SIUnit(...)</para></param>
/// <param name="AreaValue"><para>cast to (ifc.AreaMeasure)...</para></param>
/// <param name="Formula">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               QuantityArea(Label Name,Text Description,NamedUnit Unit,AreaMeasure AreaValue,Label Formula=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.Unit=Unit;this.AreaValue=AreaValue;this.Formula=Formula;this.EndOfLineComment=EndOfLineComment;}
public               QuantityArea(Label Name,AreaMeasure AreaValue,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.AreaValue=AreaValue;this.EndOfLineComment=EndOfLineComment;}
[ifc(4)] public AreaMeasure AreaValue; //TYPE
[ifc(5,optional=true)] public Label Formula; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcquantityresource/lexical/ifcquantitycount.htm
[ifcSql(TypeGroupId:5,TypeId: 967,TableId:3)] public partial class QuantityCount:PhysicalSimpleQuantity{//============================================================
public               QuantityCount():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name"><para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="Unit">[optional]<para>new ifc.ContextDependentUnit(...)</para><para>new ifc.ConversionBasedUnit(...)</para><para>new ifc.SIUnit(...)</para></param>
/// <param name="CountValue"><para>cast to (ifc.CountMeasure)...</para></param>
/// <param name="Formula">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               QuantityCount(Label Name,Text Description,NamedUnit Unit,CountMeasure CountValue,Label Formula=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.Unit=Unit;this.CountValue=CountValue;this.Formula=Formula;this.EndOfLineComment=EndOfLineComment;}
public               QuantityCount(Label Name,CountMeasure CountValue,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.CountValue=CountValue;this.EndOfLineComment=EndOfLineComment;}
[ifc(4)] public CountMeasure CountValue; //TYPE
[ifc(5,optional=true)] public Label Formula; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcquantityresource/lexical/ifcquantitylength.htm
[ifcSql(TypeGroupId:5,TypeId: 968,TableId:3)] public partial class QuantityLength:PhysicalSimpleQuantity{//===========================================================
public               QuantityLength():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name"><para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="Unit">[optional]<para>new ifc.ContextDependentUnit(...)</para><para>new ifc.ConversionBasedUnit(...)</para><para>new ifc.SIUnit(...)</para></param>
/// <param name="LengthValue"><para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="Formula">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               QuantityLength(Label Name,Text Description,NamedUnit Unit,LengthMeasure LengthValue,Label Formula=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.Unit=Unit;this.LengthValue=LengthValue;this.Formula=Formula;this.EndOfLineComment=EndOfLineComment;}
public               QuantityLength(Label Name,LengthMeasure LengthValue,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.LengthValue=LengthValue;this.EndOfLineComment=EndOfLineComment;}
[ifc(4)] public LengthMeasure LengthValue; //TYPE
[ifc(5,optional=true)] public Label Formula; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ElementQuantity(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 969,TableId:3)] public partial class QuantitySet:PropertySetDefinition{//===============================================================
public               QuantitySet():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcquantityresource/lexical/ifcquantitytime.htm
[ifcSql(TypeGroupId:5,TypeId: 970,TableId:3)] public partial class QuantityTime:PhysicalSimpleQuantity{//=============================================================
public               QuantityTime():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name"><para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="Unit">[optional]<para>new ifc.ContextDependentUnit(...)</para><para>new ifc.ConversionBasedUnit(...)</para><para>new ifc.SIUnit(...)</para></param>
/// <param name="TimeValue"><para>cast to (ifc.TimeMeasure)...</para></param>
/// <param name="Formula">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               QuantityTime(Label Name,Text Description,NamedUnit Unit,TimeMeasure TimeValue,Label Formula=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.Unit=Unit;this.TimeValue=TimeValue;this.Formula=Formula;this.EndOfLineComment=EndOfLineComment;}
public               QuantityTime(Label Name,TimeMeasure TimeValue,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.TimeValue=TimeValue;this.EndOfLineComment=EndOfLineComment;}
[ifc(4)] public TimeMeasure TimeValue; //TYPE
[ifc(5,optional=true)] public Label Formula; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcquantityresource/lexical/ifcquantityvolume.htm
[ifcSql(TypeGroupId:5,TypeId: 971,TableId:3)] public partial class QuantityVolume:PhysicalSimpleQuantity{//===========================================================
public               QuantityVolume():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name"><para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="Unit">[optional]<para>new ifc.ContextDependentUnit(...)</para><para>new ifc.ConversionBasedUnit(...)</para><para>new ifc.SIUnit(...)</para></param>
/// <param name="VolumeValue"><para>cast to (ifc.VolumeMeasure)...</para></param>
/// <param name="Formula">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               QuantityVolume(Label Name,Text Description,NamedUnit Unit,VolumeMeasure VolumeValue,Label Formula=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.Unit=Unit;this.VolumeValue=VolumeValue;this.Formula=Formula;this.EndOfLineComment=EndOfLineComment;}
public               QuantityVolume(Label Name,VolumeMeasure VolumeValue,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.VolumeValue=VolumeValue;this.EndOfLineComment=EndOfLineComment;}
[ifc(4)] public VolumeMeasure VolumeValue; //TYPE
[ifc(5,optional=true)] public Label Formula; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcquantityresource/lexical/ifcquantityweight.htm
[ifcSql(TypeGroupId:5,TypeId: 972,TableId:3)] public partial class QuantityWeight:PhysicalSimpleQuantity{//===========================================================
public               QuantityWeight():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name"><para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="Unit">[optional]<para>new ifc.ContextDependentUnit(...)</para><para>new ifc.ConversionBasedUnit(...)</para><para>new ifc.SIUnit(...)</para></param>
/// <param name="WeightValue"><para>cast to (ifc.MassMeasure)...</para></param>
/// <param name="Formula">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               QuantityWeight(Label Name,Text Description,NamedUnit Unit,MassMeasure WeightValue,Label Formula=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.Unit=Unit;this.WeightValue=WeightValue;this.Formula=Formula;this.EndOfLineComment=EndOfLineComment;}
public               QuantityWeight(Label Name,MassMeasure WeightValue,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.WeightValue=WeightValue;this.EndOfLineComment=EndOfLineComment;}
[ifc(4)] public MassMeasure WeightValue; //TYPE
[ifc(5,optional=true)] public Label Formula; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifcrailing.htm
[ifcSql(TypeGroupId:5,TypeId: 973,TableId:3)] public partial class Railing:BuildingElement{//=========================================================================
public               Railing():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>RailingTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Railing(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,RailingTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public RailingTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifcrailingtype.htm
[ifcSql(TypeGroupId:5,TypeId: 974,TableId:3)] public partial class RailingType:BuildingElementType{//=================================================================
public               RailingType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>RailingTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RailingType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,RailingTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               RailingType(RailingTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public RailingTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifcramp.htm
[ifcSql(TypeGroupId:5,TypeId: 975,TableId:3)] public partial class Ramp:BuildingElement{//============================================================================
public               Ramp():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>RampTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Ramp(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,RampTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public RampTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifcrampflight.htm
[ifcSql(TypeGroupId:5,TypeId: 976,TableId:3)] public partial class RampFlight:BuildingElement{//======================================================================
public               RampFlight():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>RampFlightTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RampFlight(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,RampFlightTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public RampFlightTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifcrampflighttype.htm
[ifcSql(TypeGroupId:5,TypeId: 977,TableId:3)] public partial class RampFlightType:BuildingElementType{//==============================================================
public               RampFlightType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>RampFlightTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RampFlightType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,RampFlightTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               RampFlightType(RampFlightTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public RampFlightTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcprofileresource/lexical/ifcrectanglehollowprofiledef.htm
[ifcSql(TypeGroupId:5,TypeId: 981,TableId:3)] public partial class RectangleHollowProfileDef:RectangleProfileDef{//===================================================
public               RectangleHollowProfileDef():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ProfileType"><para>ProfileTypeEnum</para></param>
/// <param name="ProfileName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Position">[optional]<para>new ifc.Axis2Placement2D(...)</para></param>
/// <param name="XDim"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="YDim"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="WallThickness"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="InnerFilletRadius">[optional]<para>cast to (ifc.NonNegativeLengthMeasure)...</para></param>
/// <param name="OuterFilletRadius">[optional]<para>cast to (ifc.NonNegativeLengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RectangleHollowProfileDef(ProfileTypeEnum ProfileType,Label ProfileName,Axis2Placement2D Position,PositiveLengthMeasure XDim,PositiveLengthMeasure YDim,PositiveLengthMeasure WallThickness,NonNegativeLengthMeasure InnerFilletRadius=null,NonNegativeLengthMeasure OuterFilletRadius=null,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.ProfileName=ProfileName;this.Position=Position;this.XDim=XDim;this.YDim=YDim;this.WallThickness=WallThickness;this.InnerFilletRadius=InnerFilletRadius;this.OuterFilletRadius=OuterFilletRadius;this.EndOfLineComment=EndOfLineComment;}
public               RectangleHollowProfileDef(ProfileTypeEnum ProfileType,PositiveLengthMeasure XDim,PositiveLengthMeasure YDim,PositiveLengthMeasure WallThickness,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.XDim=XDim;this.YDim=YDim;this.WallThickness=WallThickness;this.EndOfLineComment=EndOfLineComment;}
[ifc(6)] public PositiveLengthMeasure WallThickness; //TYPE
[ifc(7,optional=true)] public NonNegativeLengthMeasure InnerFilletRadius; //TYPE
[ifc(8,optional=true)] public NonNegativeLengthMeasure OuterFilletRadius; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.RectangleHollowProfileDef(...)</para><para>new ifc.RoundedRectangleProfileDef(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcprofileresource/lexical/ifcrectangleprofiledef.htm
[ifcSql(TypeGroupId:5,TypeId: 982,TableId:3)] public partial class RectangleProfileDef:ParameterizedProfileDef{//=====================================================
public               RectangleProfileDef():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ProfileType"><para>ProfileTypeEnum</para></param>
/// <param name="ProfileName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Position">[optional]<para>new ifc.Axis2Placement2D(...)</para></param>
/// <param name="XDim"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="YDim"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RectangleProfileDef(ProfileTypeEnum ProfileType,Label ProfileName,Axis2Placement2D Position,PositiveLengthMeasure XDim,PositiveLengthMeasure YDim,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.ProfileName=ProfileName;this.Position=Position;this.XDim=XDim;this.YDim=YDim;this.EndOfLineComment=EndOfLineComment;}
public               RectangleProfileDef(ProfileTypeEnum ProfileType,PositiveLengthMeasure XDim,PositiveLengthMeasure YDim,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.XDim=XDim;this.YDim=YDim;this.EndOfLineComment=EndOfLineComment;}
[ifc(4)] public PositiveLengthMeasure XDim; //TYPE
[ifc(5)] public PositiveLengthMeasure YDim; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricmodelresource/lexical/ifcrectangularpyramid.htm
[ifcSql(TypeGroupId:5,TypeId: 983,TableId:3)] public partial class RectangularPyramid:CsgPrimitive3D{//===============================================================
public               RectangularPyramid():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Position"><para>new ifc.Axis2Placement3D(...)</para></param>
/// <param name="XLength"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="YLength"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="Height"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RectangularPyramid(Axis2Placement3D Position,PositiveLengthMeasure XLength,PositiveLengthMeasure YLength,PositiveLengthMeasure Height,string EndOfLineComment=null):base(){AddNext();this.Position=Position;this.XLength=XLength;this.YLength=YLength;this.Height=Height;this.EndOfLineComment=EndOfLineComment;}
[ifc(2)] public PositiveLengthMeasure XLength; //TYPE
[ifc(3)] public PositiveLengthMeasure YLength; //TYPE
[ifc(4)] public PositiveLengthMeasure Height; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometryresource/lexical/ifcrectangulartrimmedsurface.htm
[ifcSql(TypeGroupId:5,TypeId: 984,TableId:3)] public partial class RectangularTrimmedSurface:BoundedSurface{//========================================================
public               RectangularTrimmedSurface():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="BasisSurface"><para>new ifc.CurveBoundedPlane(...)</para><para>new ifc.RectangularTrimmedSurface(...)</para><para>new ifc.Plane(...)</para></param>
/// <param name="U1"><para>cast to (ifc.ParameterValue)...</para></param>
/// <param name="V1"><para>cast to (ifc.ParameterValue)...</para></param>
/// <param name="U2"><para>cast to (ifc.ParameterValue)...</para></param>
/// <param name="V2"><para>cast to (ifc.ParameterValue)...</para></param>
/// <param name="Usense"><para>cast to (ifc.Boolean)...</para></param>
/// <param name="Vsense"><para>cast to (ifc.Boolean)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RectangularTrimmedSurface(Surface BasisSurface,ParameterValue U1,ParameterValue V1,ParameterValue U2,ParameterValue V2,Boolean Usense,Boolean Vsense,string EndOfLineComment=null):base(){AddNext();this.BasisSurface=BasisSurface;this.U1=U1;this.V1=V1;this.U2=U2;this.V2=V2;this.Usense=Usense;this.Vsense=Vsense;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Surface BasisSurface; //ENTITY
[ifc(2)] public ParameterValue U1; //TYPE
[ifc(3)] public ParameterValue V1; //TYPE
[ifc(4)] public ParameterValue U2; //TYPE
[ifc(5)] public ParameterValue V2; //TYPE
[ifc(6)] public Boolean Usense; //TYPE
[ifc(7)] public Boolean Vsense; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcdatetimeresource/lexical/ifcrecurrencepattern.htm
[ifcSql(TypeGroupId:5,TypeId: 985,TableId:3)] public partial class RecurrencePattern:ENTITY{//========================================================================
public               RecurrencePattern():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="RecurrenceType"><para>RecurrenceTypeEnum</para></param>
/// <param name="DayComponent">[optional]<para>Set1toUnbounded_DayInMonthNumber</para></param>
/// <param name="WeekdayComponent">[optional]<para>Set1toUnbounded_DayInWeekNumber</para></param>
/// <param name="MonthComponent">[optional]<para>Set1toUnbounded_MonthInYearNumber</para></param>
/// <param name="Position">[optional]<para>cast to (ifc.Integer)...</para></param>
/// <param name="Interval">[optional]<para>cast to (ifc.Integer)...</para></param>
/// <param name="Occurrences">[optional]<para>cast to (ifc.Integer)...</para></param>
/// <param name="TimePeriods">[optional]<para>List1toUnbounded_TimePeriod</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RecurrencePattern(RecurrenceTypeEnum RecurrenceType,Set1toUnbounded_DayInMonthNumber DayComponent=null,Set1toUnbounded_DayInWeekNumber WeekdayComponent=null,Set1toUnbounded_MonthInYearNumber MonthComponent=null,Integer Position=null,Integer Interval=null,Integer Occurrences=null,List1toUnbounded_TimePeriod TimePeriods=null,string EndOfLineComment=null):base(){AddNext();this.RecurrenceType=RecurrenceType;this.DayComponent=DayComponent;this.WeekdayComponent=WeekdayComponent;this.MonthComponent=MonthComponent;this.Position=Position;this.Interval=Interval;this.Occurrences=Occurrences;this.TimePeriods=TimePeriods;this.EndOfLineComment=EndOfLineComment;}
public               RecurrencePattern(RecurrenceTypeEnum RecurrenceType,string EndOfLineComment=null):base(){AddNext();this.RecurrenceType=RecurrenceType;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public RecurrenceTypeEnum RecurrenceType; //ENUM
[ifc(2,optional=true)] public Set1toUnbounded_DayInMonthNumber DayComponent; //ListType1d
[ifc(3,optional=true)] public Set1toUnbounded_DayInWeekNumber WeekdayComponent; //ListType1d
[ifc(4,optional=true)] public Set1toUnbounded_MonthInYearNumber MonthComponent; //ListType1d
[ifc(5,optional=true)] public Integer Position; //TYPE
[ifc(6,optional=true)] public Integer Interval; //TYPE
[ifc(7,optional=true)] public Integer Occurrences; //TYPE
[ifc(8,optional=true)] public List1toUnbounded_TimePeriod TimePeriods; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcconstraintresource/lexical/ifcreference.htm
[ifcSql(TypeGroupId:5,TypeId: 986,TableId:3)] public partial class Reference:ENTITY{//================================================================================
public               Reference():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="TypeIdentifier">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="AttributeIdentifier">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="InstanceName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="ListPositions">[optional]<para>List1toUnbounded_Integer</para></param>
/// <param name="InnerReference">[optional]<para>new ifc.Reference(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Reference(Identifier TypeIdentifier=null,Identifier AttributeIdentifier=null,Label InstanceName=null,List1toUnbounded_Integer ListPositions=null,Reference InnerReference=null,string EndOfLineComment=null):base(){AddNext();this.TypeIdentifier=TypeIdentifier;this.AttributeIdentifier=AttributeIdentifier;this.InstanceName=InstanceName;this.ListPositions=ListPositions;this.InnerReference=InnerReference;this.EndOfLineComment=EndOfLineComment;}
[ifc(1,optional=true)] public Identifier TypeIdentifier; //TYPE
[ifc(2,optional=true)] public Identifier AttributeIdentifier; //TYPE
[ifc(3,optional=true)] public Label InstanceName; //TYPE
[ifc(4,optional=true)] public List1toUnbounded_Integer ListPositions; //ListType1d
[ifc(5,optional=true)] public Reference InnerReference; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcdatetimeresource/lexical/ifcregulartimeseries.htm
[ifcSql(TypeGroupId:5,TypeId: 987,TableId:3)] public partial class RegularTimeSeries:TimeSeries{//====================================================================
public               RegularTimeSeries():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name"><para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="StartTime"><para>cast to (ifc.DateTime)...</para></param>
/// <param name="EndTime"><para>cast to (ifc.DateTime)...</para></param>
/// <param name="TimeSeriesDataType"><para>TimeSeriesDataTypeEnum</para></param>
/// <param name="DataOrigin"><para>DataOriginEnum</para></param>
/// <param name="UserDefinedDataOrigin">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Unit">[optional]<para>new ifc.Unit(new DerivedUnit(...))...</para><para>new ifc.Unit(new MonetaryUnit(...))...</para><para>new ifc.Unit(new NamedUnit(...))...</para></param>
/// <param name="TimeStep"><para>cast to (ifc.TimeMeasure)...</para></param>
/// <param name="Values"><para>List1toUnbounded_TimeSeriesValue</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RegularTimeSeries(Label Name,Text Description,DateTime StartTime,DateTime EndTime,TimeSeriesDataTypeEnum TimeSeriesDataType,DataOriginEnum DataOrigin,Label UserDefinedDataOrigin,Unit Unit,TimeMeasure TimeStep,List1toUnbounded_TimeSeriesValue Values,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.StartTime=StartTime;this.EndTime=EndTime;this.TimeSeriesDataType=TimeSeriesDataType;this.DataOrigin=DataOrigin;this.UserDefinedDataOrigin=UserDefinedDataOrigin;this.Unit=Unit;this.TimeStep=TimeStep;this.Values=Values;this.EndOfLineComment=EndOfLineComment;}
public               RegularTimeSeries(Label Name,DateTime StartTime,DateTime EndTime,TimeSeriesDataTypeEnum TimeSeriesDataType,DataOriginEnum DataOrigin,TimeMeasure TimeStep,List1toUnbounded_TimeSeriesValue Values,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.StartTime=StartTime;this.EndTime=EndTime;this.TimeSeriesDataType=TimeSeriesDataType;this.DataOrigin=DataOrigin;this.TimeStep=TimeStep;this.Values=Values;this.EndOfLineComment=EndOfLineComment;}
[ifc(9)] public TimeMeasure TimeStep; //TYPE
[ifc(10)] public List1toUnbounded_TimeSeriesValue Values; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcprofileresource/lexical/ifcreinforcementbarproperties.htm
[ifcSql(TypeGroupId:5,TypeId: 988,TableId:3)] public partial class ReinforcementBarProperties:PreDefinedProperties{//=================================================
public               ReinforcementBarProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="TotalCrossSectionArea"><para>cast to (ifc.AreaMeasure)...</para></param>
/// <param name="SteelGrade"><para>cast to (ifc.Label)...</para></param>
/// <param name="BarSurface">[optional]<para>ReinforcingBarSurfaceEnum</para></param>
/// <param name="EffectiveDepth">[optional]<para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="NominalBarDiameter">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="BarCount">[optional]<para>cast to (ifc.CountMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ReinforcementBarProperties(AreaMeasure TotalCrossSectionArea,Label SteelGrade,ReinforcingBarSurfaceEnum? BarSurface=null,LengthMeasure EffectiveDepth=null,PositiveLengthMeasure NominalBarDiameter=null,CountMeasure BarCount=null,string EndOfLineComment=null):base(){AddNext();this.TotalCrossSectionArea=TotalCrossSectionArea;this.SteelGrade=SteelGrade;this.BarSurface=BarSurface;this.EffectiveDepth=EffectiveDepth;this.NominalBarDiameter=NominalBarDiameter;this.BarCount=BarCount;this.EndOfLineComment=EndOfLineComment;}
public               ReinforcementBarProperties(AreaMeasure TotalCrossSectionArea,Label SteelGrade,string EndOfLineComment=null):base(){AddNext();this.TotalCrossSectionArea=TotalCrossSectionArea;this.SteelGrade=SteelGrade;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public AreaMeasure TotalCrossSectionArea; //TYPE
[ifc(2)] public Label SteelGrade; //TYPE
[ifc(3,optional=true)] public ReinforcingBarSurfaceEnum? BarSurface; //ENUM
[ifc(4,optional=true)] public LengthMeasure EffectiveDepth; //TYPE
[ifc(5,optional=true)] public PositiveLengthMeasure NominalBarDiameter; //TYPE
[ifc(6,optional=true)] public CountMeasure BarCount; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralelementsdomain/lexical/ifcreinforcementdefinitionproperties.htm
[ifcSql(TypeGroupId:5,TypeId: 989,TableId:3)] public partial class ReinforcementDefinitionProperties:PreDefinedPropertySet{//=========================================
public               ReinforcementDefinitionProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="DefinitionType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="ReinforcementSectionDefinitions"><para>List1toUnbounded_SectionReinforcementProperties</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ReinforcementDefinitionProperties(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Label DefinitionType,List1toUnbounded_SectionReinforcementProperties ReinforcementSectionDefinitions,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.DefinitionType=DefinitionType;this.ReinforcementSectionDefinitions=ReinforcementSectionDefinitions;this.EndOfLineComment=EndOfLineComment;}
public               ReinforcementDefinitionProperties(List1toUnbounded_SectionReinforcementProperties ReinforcementSectionDefinitions,string EndOfLineComment=null):base(){AddNext();this.ReinforcementSectionDefinitions=ReinforcementSectionDefinitions;this.EndOfLineComment=EndOfLineComment;}
[ifc(5,optional=true)] public Label DefinitionType; //TYPE
[ifc(6)] public List1toUnbounded_SectionReinforcementProperties ReinforcementSectionDefinitions; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralelementsdomain/lexical/ifcreinforcingbar.htm
[ifcSql(TypeGroupId:5,TypeId: 990,TableId:3)] public partial class ReinforcingBar:ReinforcingElement{//===============================================================
public               ReinforcingBar():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="SteelGrade">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="NominalDiameter">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="CrossSectionArea">[optional]<para>cast to (ifc.AreaMeasure)...</para></param>
/// <param name="BarLength">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="PredefinedType">[optional]<para>ReinforcingBarTypeEnum</para></param>
/// <param name="BarSurface">[optional]<para>ReinforcingBarSurfaceEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ReinforcingBar(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,Label SteelGrade=null,PositiveLengthMeasure NominalDiameter=null,AreaMeasure CrossSectionArea=null,PositiveLengthMeasure BarLength=null,ReinforcingBarTypeEnum? PredefinedType=null,ReinforcingBarSurfaceEnum? BarSurface=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.SteelGrade=SteelGrade;this.NominalDiameter=NominalDiameter;this.CrossSectionArea=CrossSectionArea;this.BarLength=BarLength;this.PredefinedType=PredefinedType;this.BarSurface=BarSurface;this.EndOfLineComment=EndOfLineComment;}
[ifc(10,optional=true)] public PositiveLengthMeasure NominalDiameter; //TYPE
[ifc(11,optional=true)] public AreaMeasure CrossSectionArea; //TYPE
[ifc(12,optional=true)] public PositiveLengthMeasure BarLength; //TYPE
[ifc(13,optional=true)] public ReinforcingBarTypeEnum? PredefinedType; //ENUM
[ifc(14,optional=true)] public ReinforcingBarSurfaceEnum? BarSurface; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ReinforcingBar(...)</para><para>new ifc.ReinforcingMesh(...)</para><para>new ifc.Tendon(...)</para><para>new ifc.TendonAnchor(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 992,TableId:3)] public partial class ReinforcingElement:ElementComponent{//=============================================================
public               ReinforcingElement():base(){}// abstract
[ifc(9,optional=true)] public Label SteelGrade; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralelementsdomain/lexical/ifcreinforcingmesh.htm
[ifcSql(TypeGroupId:5,TypeId: 994,TableId:3)] public partial class ReinforcingMesh:ReinforcingElement{//==============================================================
public               ReinforcingMesh():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="SteelGrade">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="MeshLength">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="MeshWidth">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="LongitudinalBarNominalDiameter">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="TransverseBarNominalDiameter">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="LongitudinalBarCrossSectionArea">[optional]<para>cast to (ifc.AreaMeasure)...</para></param>
/// <param name="TransverseBarCrossSectionArea">[optional]<para>cast to (ifc.AreaMeasure)...</para></param>
/// <param name="LongitudinalBarSpacing">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="TransverseBarSpacing">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="PredefinedType">[optional]<para>ReinforcingMeshTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ReinforcingMesh(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,Label SteelGrade=null,PositiveLengthMeasure MeshLength=null,PositiveLengthMeasure MeshWidth=null,PositiveLengthMeasure LongitudinalBarNominalDiameter=null,PositiveLengthMeasure TransverseBarNominalDiameter=null,AreaMeasure LongitudinalBarCrossSectionArea=null,AreaMeasure TransverseBarCrossSectionArea=null,PositiveLengthMeasure LongitudinalBarSpacing=null,PositiveLengthMeasure TransverseBarSpacing=null,ReinforcingMeshTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.SteelGrade=SteelGrade;this.MeshLength=MeshLength;this.MeshWidth=MeshWidth;this.LongitudinalBarNominalDiameter=LongitudinalBarNominalDiameter;this.TransverseBarNominalDiameter=TransverseBarNominalDiameter;this.LongitudinalBarCrossSectionArea=LongitudinalBarCrossSectionArea;this.TransverseBarCrossSectionArea=TransverseBarCrossSectionArea;this.LongitudinalBarSpacing=LongitudinalBarSpacing;this.TransverseBarSpacing=TransverseBarSpacing;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10,optional=true)] public PositiveLengthMeasure MeshLength; //TYPE
[ifc(11,optional=true)] public PositiveLengthMeasure MeshWidth; //TYPE
[ifc(12,optional=true)] public PositiveLengthMeasure LongitudinalBarNominalDiameter; //TYPE
[ifc(13,optional=true)] public PositiveLengthMeasure TransverseBarNominalDiameter; //TYPE
[ifc(14,optional=true)] public AreaMeasure LongitudinalBarCrossSectionArea; //TYPE
[ifc(15,optional=true)] public AreaMeasure TransverseBarCrossSectionArea; //TYPE
[ifc(16,optional=true)] public PositiveLengthMeasure LongitudinalBarSpacing; //TYPE
[ifc(17,optional=true)] public PositiveLengthMeasure TransverseBarSpacing; //TYPE
[ifc(18,optional=true)] public ReinforcingMeshTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifckernel/lexical/ifcrelaggregates.htm
[ifcSql(TypeGroupId:5,TypeId: 996,TableId:3)] public partial class RelAggregates:RelDecomposes{//=====================================================================
public               RelAggregates():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatingObject"><para>new ifc.Project(...)</para><para>new ifc.Actor(...)</para><para>new ifc.Occupant(...)</para><para>new ifc.ActionRequest(...)</para><para>new ifc.CostItem(...)</para><para>new ifc.CostSchedule(...)</para><para>new ifc.PerformanceHistory(...)</para><para>new ifc.Permit(...)</para><para>new ifc.ProjectOrder(...)</para><para>new ifc.ConditionCriterion(...)</para><para>new ifc.EquipmentStandard(...)</para><para>new ifc.FurnitureStandard(...)</para><para>new ifc.ProjectOrderRecord(...)</para><para>new ifc.ScheduleTimeControl(...)</para><para>new ifc.ServiceLife(...)</para><para>new ifc.SpaceProgram(...)</para><para>new ifc.TimeSeriesSchedule(...)</para><para>new ifc.Group(...)</para><para>new ifc.Asset(...)</para><para>new ifc.Inventory(...)</para><para>new ifc.StructuralLoadGroup(...)</para><para>new ifc.StructuralResultGroup(...)</para><para>new ifc.System(...)</para><para>new ifc.Condition(...)</para><para>new ifc.TypeObject(...)</para></param>
/// <param name="RelatedObjects"><para>Set1toUnbounded_ObjectDefinition</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelAggregates(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,ObjectDefinition RelatingObject,Set1toUnbounded_ObjectDefinition RelatedObjects,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatingObject=RelatingObject;this.RelatedObjects=RelatedObjects;this.EndOfLineComment=EndOfLineComment;}
public               RelAggregates(ObjectDefinition RelatingObject,Set1toUnbounded_ObjectDefinition RelatedObjects,string EndOfLineComment=null):base(){AddNext();this.RelatingObject=RelatingObject;this.RelatedObjects=RelatedObjects;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public ObjectDefinition RelatingObject; //ENTITY
[ifc(6)] public Set1toUnbounded_ObjectDefinition RelatedObjects; //ListType1d
public override void AssignInverseElements(){if (RelatingObject!=null) {if (RelatingObject.IsDecomposedBy==null) RelatingObject.IsDecomposedBy=new LIST<RelAggregates>();RelatingObject.IsDecomposedBy.Add(this);}
                                             if (RelatedObjects!=null) foreach (ObjectDefinition __ObjectDefinition in RelatedObjects) if (__ObjectDefinition is ObjectDefinition) ((ObjectDefinition)__ObjectDefinition).Decomposes=this;
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.RelAssignsToActor(...)</para><para>new ifc.RelAssignsToControl(...)</para><para>new ifc.RelAssignsToGroup(...)</para><para>new ifc.RelAssignsToProcess(...)</para><para>new ifc.RelAssignsToProduct(...)</para><para>new ifc.RelAssignsToResource(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId: 997,TableId:3)] public partial class RelAssigns:Relationship{//=========================================================================
public               RelAssigns():base(){}// abstract
[ifc(5)] public Set1toUnbounded_ObjectDefinition RelatedObjects; //ListType1d
[ifc(6,optional=true)] public ObjectTypeEnum? RelatedObjectsType; //ENUM
public override void AssignInverseElements(){if (RelatedObjects!=null) foreach (ObjectDefinition __ObjectDefinition in RelatedObjects) if (__ObjectDefinition is ObjectDefinition) {if (((ObjectDefinition)__ObjectDefinition).HasAssignments==null) ((ObjectDefinition)__ObjectDefinition).HasAssignments=new LIST<RelAssigns>();((ObjectDefinition)__ObjectDefinition).HasAssignments.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.RelOccupiesSpaces(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifckernel/lexical/ifcrelassignstoactor.htm
[ifcSql(TypeGroupId:5,TypeId: 998,TableId:3)] public partial class RelAssignsToActor:RelAssigns{//====================================================================
public               RelAssignsToActor():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatedObjects"><para>Set1toUnbounded_ObjectDefinition</para></param>
/// <param name="RelatedObjectsType">[optional]<para>ObjectTypeEnum</para></param>
/// <param name="RelatingActor"><para>new ifc.Actor(...)</para><para>new ifc.Occupant(...)</para></param>
/// <param name="ActingRole">[optional]<para>new ifc.ActorRole(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelAssignsToActor(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Set1toUnbounded_ObjectDefinition RelatedObjects,ObjectTypeEnum? RelatedObjectsType,Actor RelatingActor,ActorRole ActingRole=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatedObjects=RelatedObjects;this.RelatedObjectsType=RelatedObjectsType;this.RelatingActor=RelatingActor;this.ActingRole=ActingRole;this.EndOfLineComment=EndOfLineComment;}
public               RelAssignsToActor(Set1toUnbounded_ObjectDefinition RelatedObjects,Actor RelatingActor,string EndOfLineComment=null):base(){AddNext();this.RelatedObjects=RelatedObjects;this.RelatingActor=RelatingActor;this.EndOfLineComment=EndOfLineComment;}
[ifc(7)] public Actor RelatingActor; //ENTITY
[ifc(8,optional=true)] public ActorRole ActingRole; //ENTITY
public override void AssignInverseElements(){if (RelatingActor!=null) {if (RelatingActor.IsActingUpon==null) RelatingActor.IsActingUpon=new LIST<RelAssignsToActor>();RelatingActor.IsActingUpon.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.RelAssignsTasks(...)</para><para>new ifc.RelAssignsToProjectOrder(...)</para><para>new ifc.RelSchedulesCostItems(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifckernel/lexical/ifcrelassignstocontrol.htm
[ifcSql(TypeGroupId:5,TypeId: 999,TableId:3)] public partial class RelAssignsToControl:RelAssigns{//==================================================================
public               RelAssignsToControl():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatedObjects"><para>Set1toUnbounded_ObjectDefinition</para></param>
/// <param name="RelatedObjectsType">[optional]<para>ObjectTypeEnum</para></param>
/// <param name="RelatingControl"><para>new ifc.ActionRequest(...)</para><para>new ifc.CostItem(...)</para><para>new ifc.CostSchedule(...)</para><para>new ifc.PerformanceHistory(...)</para><para>new ifc.Permit(...)</para><para>new ifc.ProjectOrder(...)</para><para>new ifc.ConditionCriterion(...)</para><para>new ifc.EquipmentStandard(...)</para><para>new ifc.FurnitureStandard(...)</para><para>new ifc.ProjectOrderRecord(...)</para><para>new ifc.ScheduleTimeControl(...)</para><para>new ifc.ServiceLife(...)</para><para>new ifc.SpaceProgram(...)</para><para>new ifc.TimeSeriesSchedule(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelAssignsToControl(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Set1toUnbounded_ObjectDefinition RelatedObjects,ObjectTypeEnum? RelatedObjectsType,Control RelatingControl,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatedObjects=RelatedObjects;this.RelatedObjectsType=RelatedObjectsType;this.RelatingControl=RelatingControl;this.EndOfLineComment=EndOfLineComment;}
public               RelAssignsToControl(Set1toUnbounded_ObjectDefinition RelatedObjects,Control RelatingControl,string EndOfLineComment=null):base(){AddNext();this.RelatedObjects=RelatedObjects;this.RelatingControl=RelatingControl;this.EndOfLineComment=EndOfLineComment;}
[ifc(7)] public Control RelatingControl; //ENTITY
public override void AssignInverseElements(){if (RelatingControl!=null) {if (RelatingControl.Controls==null) RelatingControl.Controls=new LIST<RelAssignsToControl>();RelatingControl.Controls.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifckernel/lexical/ifcrelassignstogroup.htm
[ifcSql(TypeGroupId:5,TypeId:1000,TableId:3)] public partial class RelAssignsToGroup:RelAssigns{//====================================================================
public               RelAssignsToGroup():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatedObjects"><para>Set1toUnbounded_ObjectDefinition</para></param>
/// <param name="RelatedObjectsType">[optional]<para>ObjectTypeEnum</para></param>
/// <param name="RelatingGroup"><para>new ifc.Group(...)</para><para>new ifc.Asset(...)</para><para>new ifc.Inventory(...)</para><para>new ifc.StructuralLoadGroup(...)</para><para>new ifc.StructuralResultGroup(...)</para><para>new ifc.System(...)</para><para>new ifc.Condition(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelAssignsToGroup(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Set1toUnbounded_ObjectDefinition RelatedObjects,ObjectTypeEnum? RelatedObjectsType,Group RelatingGroup,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatedObjects=RelatedObjects;this.RelatedObjectsType=RelatedObjectsType;this.RelatingGroup=RelatingGroup;this.EndOfLineComment=EndOfLineComment;}
public               RelAssignsToGroup(Set1toUnbounded_ObjectDefinition RelatedObjects,Group RelatingGroup,string EndOfLineComment=null):base(){AddNext();this.RelatedObjects=RelatedObjects;this.RelatingGroup=RelatingGroup;this.EndOfLineComment=EndOfLineComment;}
[ifc(7)] public Group RelatingGroup; //ENTITY
public override void AssignInverseElements(){if (RelatingGroup!=null) {if (RelatingGroup.IsGroupedBy==null) RelatingGroup.IsGroupedBy=new LIST<RelAssignsToGroup>();RelatingGroup.IsGroupedBy.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifckernel/lexical/ifcrelassignstoprocess.htm
[ifcSql(TypeGroupId:5,TypeId:1002,TableId:3)] public partial class RelAssignsToProcess:RelAssigns{//==================================================================
public               RelAssignsToProcess():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatedObjects"><para>Set1toUnbounded_ObjectDefinition</para></param>
/// <param name="RelatedObjectsType">[optional]<para>ObjectTypeEnum</para></param>
/// <param name="RelatingProcess"><para>new ifc.ProcessSelect(new Process(...))...</para><para>new ifc.ProcessSelect(new TypeProcess(...))...</para></param>
/// <param name="QuantityInProcess">[optional]<para>new ifc.MeasureWithUnit(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelAssignsToProcess(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Set1toUnbounded_ObjectDefinition RelatedObjects,ObjectTypeEnum? RelatedObjectsType,ProcessSelect RelatingProcess,MeasureWithUnit QuantityInProcess=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatedObjects=RelatedObjects;this.RelatedObjectsType=RelatedObjectsType;this.RelatingProcess=RelatingProcess;this.QuantityInProcess=QuantityInProcess;this.EndOfLineComment=EndOfLineComment;}
public               RelAssignsToProcess(Set1toUnbounded_ObjectDefinition RelatedObjects,ProcessSelect RelatingProcess,string EndOfLineComment=null):base(){AddNext();this.RelatedObjects=RelatedObjects;this.RelatingProcess=RelatingProcess;this.EndOfLineComment=EndOfLineComment;}
[ifc(7)] public ProcessSelect RelatingProcess; //SELECT
[ifc(8,optional=true)] public MeasureWithUnit QuantityInProcess; //ENTITY
public override void AssignInverseElements(){if (RelatingProcess!=null) if (RelatingProcess.SelectType()==typeof(Process))  {if (((Process)RelatingProcess).OperatesOn==null) ((Process)RelatingProcess).OperatesOn=new LIST<RelAssignsToProcess>();((Process)RelatingProcess).OperatesOn.Add(this);}
                                             if (RelatingProcess!=null) if (RelatingProcess.SelectType()==typeof(TypeProcess))  {if (((TypeProcess)RelatingProcess).OperatesOn==null) ((TypeProcess)RelatingProcess).OperatesOn=new LIST<RelAssignsToProcess>();((TypeProcess)RelatingProcess).OperatesOn.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifckernel/lexical/ifcrelassignstoproduct.htm
[ifcSql(TypeGroupId:5,TypeId:1003,TableId:3)] public partial class RelAssignsToProduct:RelAssigns{//==================================================================
public               RelAssignsToProduct():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatedObjects"><para>Set1toUnbounded_ObjectDefinition</para></param>
/// <param name="RelatedObjectsType">[optional]<para>ObjectTypeEnum</para></param>
/// <param name="RelatingProduct"><para>new ifc.ProductSelect(new Product(...))...</para><para>new ifc.ProductSelect(new TypeProduct(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelAssignsToProduct(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Set1toUnbounded_ObjectDefinition RelatedObjects,ObjectTypeEnum? RelatedObjectsType,ProductSelect RelatingProduct,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatedObjects=RelatedObjects;this.RelatedObjectsType=RelatedObjectsType;this.RelatingProduct=RelatingProduct;this.EndOfLineComment=EndOfLineComment;}
public               RelAssignsToProduct(Set1toUnbounded_ObjectDefinition RelatedObjects,ProductSelect RelatingProduct,string EndOfLineComment=null):base(){AddNext();this.RelatedObjects=RelatedObjects;this.RelatingProduct=RelatingProduct;this.EndOfLineComment=EndOfLineComment;}
[ifc(7)] public ProductSelect RelatingProduct; //SELECT
public override void AssignInverseElements(){if (RelatingProduct!=null) if (RelatingProduct.SelectType()==typeof(Product))  {if (((Product)RelatingProduct).ReferencedBy==null) ((Product)RelatingProduct).ReferencedBy=new LIST<RelAssignsToProduct>();((Product)RelatingProduct).ReferencedBy.Add(this);}
                                             if (RelatingProduct!=null) if (RelatingProduct.SelectType()==typeof(TypeProduct))  {if (((TypeProduct)RelatingProduct).ReferencedBy==null) ((TypeProduct)RelatingProduct).ReferencedBy=new LIST<RelAssignsToProduct>();((TypeProduct)RelatingProduct).ReferencedBy.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifckernel/lexical/ifcrelassignstoresource.htm
[ifcSql(TypeGroupId:5,TypeId:1004,TableId:3)] public partial class RelAssignsToResource:RelAssigns{//=================================================================
public               RelAssignsToResource():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatedObjects"><para>Set1toUnbounded_ObjectDefinition</para></param>
/// <param name="RelatedObjectsType">[optional]<para>ObjectTypeEnum</para></param>
/// <param name="RelatingResource"><para>new ifc.ResourceSelect(new Resource(...))...</para><para>new ifc.ResourceSelect(new TypeResource(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelAssignsToResource(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Set1toUnbounded_ObjectDefinition RelatedObjects,ObjectTypeEnum? RelatedObjectsType,ResourceSelect RelatingResource,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatedObjects=RelatedObjects;this.RelatedObjectsType=RelatedObjectsType;this.RelatingResource=RelatingResource;this.EndOfLineComment=EndOfLineComment;}
public               RelAssignsToResource(Set1toUnbounded_ObjectDefinition RelatedObjects,ResourceSelect RelatingResource,string EndOfLineComment=null):base(){AddNext();this.RelatedObjects=RelatedObjects;this.RelatingResource=RelatingResource;this.EndOfLineComment=EndOfLineComment;}
[ifc(7)] public ResourceSelect RelatingResource; //SELECT
public override void AssignInverseElements(){if (RelatingResource!=null) if (RelatingResource.SelectType()==typeof(Resource))  {if (((Resource)RelatingResource).ResourceOf==null) ((Resource)RelatingResource).ResourceOf=new LIST<RelAssignsToResource>();((Resource)RelatingResource).ResourceOf.Add(this);}
                                             if (RelatingResource!=null) if (RelatingResource.SelectType()==typeof(TypeResource))  {if (((TypeResource)RelatingResource).ResourceOf==null) ((TypeResource)RelatingResource).ResourceOf=new LIST<RelAssignsToResource>();((TypeResource)RelatingResource).ResourceOf.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.RelAssociatesApproval(...)</para><para>new ifc.RelAssociatesClassification(...)</para><para>new ifc.RelAssociatesConstraint(...)</para><para>new ifc.RelAssociatesDocument(...)</para><para>new ifc.RelAssociatesLibrary(...)</para><para>new ifc.RelAssociatesMaterial(...)</para><para>new ifc.RelAssociatesAppliedValue(...)</para><para>new ifc.RelAssociatesProfileProperties(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1005,TableId:3)] public partial class RelAssociates:Relationship{//======================================================================
public               RelAssociates():base(){}// abstract
[ifc(5)] public Set1toUnbounded_DefinitionSelect RelatedObjects; //ListType1d
public override void AssignInverseElements(){if (RelatedObjects!=null) foreach (DefinitionSelect __DefinitionSelect in RelatedObjects) if (__DefinitionSelect.SelectType()==typeof(ObjectDefinition)) {if (((ObjectDefinition)__DefinitionSelect).HasAssociations==null) ((ObjectDefinition)__DefinitionSelect).HasAssociations=new LIST<RelAssociates>();((ObjectDefinition)__DefinitionSelect).HasAssociations.Add(this);}
                                             if (RelatedObjects!=null) foreach (DefinitionSelect __DefinitionSelect in RelatedObjects) if (__DefinitionSelect.SelectType()==typeof(PropertyDefinition)) {if (((PropertyDefinition)__DefinitionSelect).HasAssociations==null) ((PropertyDefinition)__DefinitionSelect).HasAssociations=new LIST<RelAssociates>();((PropertyDefinition)__DefinitionSelect).HasAssociations.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifccontrolextension/lexical/ifcrelassociatesapproval.htm
[ifcSql(TypeGroupId:5,TypeId:1006,TableId:3)] public partial class RelAssociatesApproval:RelAssociates{//=============================================================
public               RelAssociatesApproval():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatedObjects"><para>Set1toUnbounded_DefinitionSelect</para></param>
/// <param name="RelatingApproval"><para>new ifc.Approval(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelAssociatesApproval(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Set1toUnbounded_DefinitionSelect RelatedObjects,Approval RelatingApproval,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatedObjects=RelatedObjects;this.RelatingApproval=RelatingApproval;this.EndOfLineComment=EndOfLineComment;}
public               RelAssociatesApproval(Set1toUnbounded_DefinitionSelect RelatedObjects,Approval RelatingApproval,string EndOfLineComment=null):base(){AddNext();this.RelatedObjects=RelatedObjects;this.RelatingApproval=RelatingApproval;this.EndOfLineComment=EndOfLineComment;}
[ifc(6)] public Approval RelatingApproval; //ENTITY
public override void AssignInverseElements(){if (RelatingApproval!=null) {if (RelatingApproval.ApprovedObjects==null) RelatingApproval.ApprovedObjects=new LIST<RelAssociatesApproval>();RelatingApproval.ApprovedObjects.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifckernel/lexical/ifcrelassociatesclassification.htm
[ifcSql(TypeGroupId:5,TypeId:1007,TableId:3)] public partial class RelAssociatesClassification:RelAssociates{//=======================================================
public               RelAssociatesClassification():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatedObjects"><para>Set1toUnbounded_DefinitionSelect</para></param>
/// <param name="RelatingClassification"><para>new ifc.ClassificationSelect(new Classification(...))...</para><para>new ifc.ClassificationSelect(new ClassificationReference(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelAssociatesClassification(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Set1toUnbounded_DefinitionSelect RelatedObjects,ClassificationSelect RelatingClassification,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatedObjects=RelatedObjects;this.RelatingClassification=RelatingClassification;this.EndOfLineComment=EndOfLineComment;}
public               RelAssociatesClassification(Set1toUnbounded_DefinitionSelect RelatedObjects,ClassificationSelect RelatingClassification,string EndOfLineComment=null):base(){AddNext();this.RelatedObjects=RelatedObjects;this.RelatingClassification=RelatingClassification;this.EndOfLineComment=EndOfLineComment;}
[ifc(6)] public ClassificationSelect RelatingClassification; //SELECT
public override void AssignInverseElements(){if (RelatingClassification!=null) if (RelatingClassification.SelectType()==typeof(Classification))  {if (((Classification)RelatingClassification).ClassificationForObjects==null) ((Classification)RelatingClassification).ClassificationForObjects=new LIST<RelAssociatesClassification>();((Classification)RelatingClassification).ClassificationForObjects.Add(this);}
                                             if (RelatingClassification!=null) if (RelatingClassification.SelectType()==typeof(ClassificationReference))  {if (((ClassificationReference)RelatingClassification).ClassificationRefForObjects==null) ((ClassificationReference)RelatingClassification).ClassificationRefForObjects=new LIST<RelAssociatesClassification>();((ClassificationReference)RelatingClassification).ClassificationRefForObjects.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifccontrolextension/lexical/ifcrelassociatesconstraint.htm
[ifcSql(TypeGroupId:5,TypeId:1008,TableId:3)] public partial class RelAssociatesConstraint:RelAssociates{//===========================================================
public               RelAssociatesConstraint():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatedObjects"><para>Set1toUnbounded_DefinitionSelect</para></param>
/// <param name="Intent">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="RelatingConstraint"><para>new ifc.Metric(...)</para><para>new ifc.Objective(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelAssociatesConstraint(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Set1toUnbounded_DefinitionSelect RelatedObjects,Label Intent,Constraint RelatingConstraint,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatedObjects=RelatedObjects;this.Intent=Intent;this.RelatingConstraint=RelatingConstraint;this.EndOfLineComment=EndOfLineComment;}
public               RelAssociatesConstraint(Set1toUnbounded_DefinitionSelect RelatedObjects,Constraint RelatingConstraint,string EndOfLineComment=null):base(){AddNext();this.RelatedObjects=RelatedObjects;this.RelatingConstraint=RelatingConstraint;this.EndOfLineComment=EndOfLineComment;}
[ifc(6,optional=true)] public Label Intent; //TYPE
[ifc(7)] public Constraint RelatingConstraint; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifckernel/lexical/ifcrelassociatesdocument.htm
[ifcSql(TypeGroupId:5,TypeId:1009,TableId:3)] public partial class RelAssociatesDocument:RelAssociates{//=============================================================
public               RelAssociatesDocument():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatedObjects"><para>Set1toUnbounded_DefinitionSelect</para></param>
/// <param name="RelatingDocument"><para>new ifc.DocumentSelect(new DocumentInformation(...))...</para><para>new ifc.DocumentSelect(new DocumentReference(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelAssociatesDocument(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Set1toUnbounded_DefinitionSelect RelatedObjects,DocumentSelect RelatingDocument,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatedObjects=RelatedObjects;this.RelatingDocument=RelatingDocument;this.EndOfLineComment=EndOfLineComment;}
public               RelAssociatesDocument(Set1toUnbounded_DefinitionSelect RelatedObjects,DocumentSelect RelatingDocument,string EndOfLineComment=null):base(){AddNext();this.RelatedObjects=RelatedObjects;this.RelatingDocument=RelatingDocument;this.EndOfLineComment=EndOfLineComment;}
[ifc(6)] public DocumentSelect RelatingDocument; //SELECT
public override void AssignInverseElements(){if (RelatingDocument!=null) if (RelatingDocument.SelectType()==typeof(DocumentInformation))  {if (((DocumentInformation)RelatingDocument).DocumentInfoForObjects==null) ((DocumentInformation)RelatingDocument).DocumentInfoForObjects=new LIST<RelAssociatesDocument>();((DocumentInformation)RelatingDocument).DocumentInfoForObjects.Add(this);}
                                             if (RelatingDocument!=null) if (RelatingDocument.SelectType()==typeof(DocumentReference))  {if (((DocumentReference)RelatingDocument).DocumentRefForObjects==null) ((DocumentReference)RelatingDocument).DocumentRefForObjects=new LIST<RelAssociatesDocument>();((DocumentReference)RelatingDocument).DocumentRefForObjects.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifckernel/lexical/ifcrelassociateslibrary.htm
[ifcSql(TypeGroupId:5,TypeId:1010,TableId:3)] public partial class RelAssociatesLibrary:RelAssociates{//==============================================================
public               RelAssociatesLibrary():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatedObjects"><para>Set1toUnbounded_DefinitionSelect</para></param>
/// <param name="RelatingLibrary"><para>new ifc.LibrarySelect(new LibraryInformation(...))...</para><para>new ifc.LibrarySelect(new LibraryReference(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelAssociatesLibrary(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Set1toUnbounded_DefinitionSelect RelatedObjects,LibrarySelect RelatingLibrary,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatedObjects=RelatedObjects;this.RelatingLibrary=RelatingLibrary;this.EndOfLineComment=EndOfLineComment;}
public               RelAssociatesLibrary(Set1toUnbounded_DefinitionSelect RelatedObjects,LibrarySelect RelatingLibrary,string EndOfLineComment=null):base(){AddNext();this.RelatedObjects=RelatedObjects;this.RelatingLibrary=RelatingLibrary;this.EndOfLineComment=EndOfLineComment;}
[ifc(6)] public LibrarySelect RelatingLibrary; //SELECT
public override void AssignInverseElements(){if (RelatingLibrary!=null) if (RelatingLibrary.SelectType()==typeof(LibraryInformation))  {if (((LibraryInformation)RelatingLibrary).LibraryInfoForObjects==null) ((LibraryInformation)RelatingLibrary).LibraryInfoForObjects=new LIST<RelAssociatesLibrary>();((LibraryInformation)RelatingLibrary).LibraryInfoForObjects.Add(this);}
                                             if (RelatingLibrary!=null) if (RelatingLibrary.SelectType()==typeof(LibraryReference))  {if (((LibraryReference)RelatingLibrary).LibraryRefForObjects==null) ((LibraryReference)RelatingLibrary).LibraryRefForObjects=new LIST<RelAssociatesLibrary>();((LibraryReference)RelatingLibrary).LibraryRefForObjects.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifcrelassociatesmaterial.htm
[ifcSql(TypeGroupId:5,TypeId:1011,TableId:3)] public partial class RelAssociatesMaterial:RelAssociates{//=============================================================
public               RelAssociatesMaterial():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatedObjects"><para>Set1toUnbounded_DefinitionSelect</para></param>
/// <param name="RelatingMaterial"><para>new ifc.MaterialSelect(new MaterialDefinition(...))...</para><para>new ifc.MaterialSelect(new MaterialList(...))...</para><para>new ifc.MaterialSelect(new MaterialUsageDefinition(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelAssociatesMaterial(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Set1toUnbounded_DefinitionSelect RelatedObjects,MaterialSelect RelatingMaterial,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatedObjects=RelatedObjects;this.RelatingMaterial=RelatingMaterial;this.EndOfLineComment=EndOfLineComment;}
public               RelAssociatesMaterial(Set1toUnbounded_DefinitionSelect RelatedObjects,MaterialSelect RelatingMaterial,string EndOfLineComment=null):base(){AddNext();this.RelatedObjects=RelatedObjects;this.RelatingMaterial=RelatingMaterial;this.EndOfLineComment=EndOfLineComment;}
[ifc(6)] public MaterialSelect RelatingMaterial; //SELECT
public override void AssignInverseElements(){if (RelatingMaterial!=null) if (RelatingMaterial.SelectType()==typeof(MaterialDefinition))  {if (((MaterialDefinition)RelatingMaterial).AssociatedTo==null) ((MaterialDefinition)RelatingMaterial).AssociatedTo=new LIST<RelAssociatesMaterial>();((MaterialDefinition)RelatingMaterial).AssociatedTo.Add(this);}
                                             if (RelatingMaterial!=null) if (RelatingMaterial.SelectType()==typeof(MaterialUsageDefinition))  {if (((MaterialUsageDefinition)RelatingMaterial).AssociatedTo==null) ((MaterialUsageDefinition)RelatingMaterial).AssociatedTo=new LIST<RelAssociatesMaterial>();((MaterialUsageDefinition)RelatingMaterial).AssociatedTo.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.RelConnectsElements(...)</para><para>new ifc.RelConnectsPortToElement(...)</para><para>new ifc.RelConnectsPorts(...)</para><para>new ifc.RelConnectsStructuralActivity(...)</para><para>new ifc.RelConnectsStructuralMember(...)</para><para>new ifc.RelContainedInSpatialStructure(...)</para><para>new ifc.RelCoversBldgElements(...)</para><para>new ifc.RelCoversSpaces(...)</para><para>new ifc.RelFillsElement(...)</para><para>new ifc.RelFlowControlElements(...)</para><para>new ifc.RelInterferesElements(...)</para><para>new ifc.RelReferencedInSpatialStructure(...)</para><para>new ifc.RelSequence(...)</para><para>new ifc.RelServicesBuildings(...)</para><para>new ifc.RelSpaceBoundary(...)</para><para>new ifc.RelConnectsStructuralElement(...)</para><para>new ifc.RelInteractionRequirements(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1012,TableId:3)] public partial class RelConnects:Relationship{//========================================================================
public               RelConnects():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.RelConnectsPathElements(...)</para><para>new ifc.RelConnectsWithRealizingElements(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifcrelconnectselements.htm
[ifcSql(TypeGroupId:5,TypeId:1013,TableId:3)] public partial class RelConnectsElements:RelConnects{//=================================================================
public               RelConnectsElements():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="_ConnectionGeometry">[optional]<para>new ifc.ConnectionCurveGeometry(...)</para><para>new ifc.ConnectionPointGeometry(...)</para><para>new ifc.ConnectionSurfaceGeometry(...)</para><para>new ifc.ConnectionPortGeometry(...)</para></param>
/// <param name="RelatingElement"><para>new ifc.Beam(...)</para><para>new ifc.BuildingElementProxy(...)</para><para>new ifc.Column(...)</para><para>new ifc.Covering(...)</para><para>new ifc.CurtainWall(...)</para><para>new ifc.Door(...)</para><para>new ifc.Footing(...)</para><para>new ifc.Member(...)</para><para>new ifc.Pile(...)</para><para>new ifc.Plate(...)</para><para>new ifc.Railing(...)</para><para>new ifc.Ramp(...)</para><para>new ifc.RampFlight(...)</para><para>new ifc.Roof(...)</para><para>new ifc.Slab(...)</para><para>new ifc.Stair(...)</para><para>new ifc.StairFlight(...)</para><para>new ifc.Wall(...)</para><para>new ifc.Window(...)</para><para>new ifc.DistributionElement(...)</para><para>new ifc.DistributionControlElement(...)</para><para>new ifc.Sensor(...)</para><para>new ifc.DistributionFlowElement(...)</para><para>new ifc.DistributionChamberElement(...)</para><para>new ifc.EnergyConversionDevice(...)</para><para>new ifc.FlowController(...)</para><para>new ifc.FlowFitting(...)</para><para>new ifc.FlowMovingDevice(...)</para><para>new ifc.FlowSegment(...)</para><para>new ifc.FlowStorageDevice(...)</para><para>new ifc.FlowTerminal(...)</para><para>new ifc.FlowTreatmentDevice(...)</para><para>new ifc.ElementAssembly(...)</para><para>new ifc.FurnishingElement(...)</para><para>new ifc.TransportElement(...)</para><para>new ifc.VirtualElement(...)</para><para>new ifc.ElectricalElement(...)</para><para>new ifc.EquipmentElement(...)</para></param>
/// <param name="RelatedElement"><para>new ifc.Beam(...)</para><para>new ifc.BuildingElementProxy(...)</para><para>new ifc.Column(...)</para><para>new ifc.Covering(...)</para><para>new ifc.CurtainWall(...)</para><para>new ifc.Door(...)</para><para>new ifc.Footing(...)</para><para>new ifc.Member(...)</para><para>new ifc.Pile(...)</para><para>new ifc.Plate(...)</para><para>new ifc.Railing(...)</para><para>new ifc.Ramp(...)</para><para>new ifc.RampFlight(...)</para><para>new ifc.Roof(...)</para><para>new ifc.Slab(...)</para><para>new ifc.Stair(...)</para><para>new ifc.StairFlight(...)</para><para>new ifc.Wall(...)</para><para>new ifc.Window(...)</para><para>new ifc.DistributionElement(...)</para><para>new ifc.DistributionControlElement(...)</para><para>new ifc.Sensor(...)</para><para>new ifc.DistributionFlowElement(...)</para><para>new ifc.DistributionChamberElement(...)</para><para>new ifc.EnergyConversionDevice(...)</para><para>new ifc.FlowController(...)</para><para>new ifc.FlowFitting(...)</para><para>new ifc.FlowMovingDevice(...)</para><para>new ifc.FlowSegment(...)</para><para>new ifc.FlowStorageDevice(...)</para><para>new ifc.FlowTerminal(...)</para><para>new ifc.FlowTreatmentDevice(...)</para><para>new ifc.ElementAssembly(...)</para><para>new ifc.FurnishingElement(...)</para><para>new ifc.TransportElement(...)</para><para>new ifc.VirtualElement(...)</para><para>new ifc.ElectricalElement(...)</para><para>new ifc.EquipmentElement(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelConnectsElements(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,ConnectionGeometry _ConnectionGeometry,Element RelatingElement,Element RelatedElement,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this._ConnectionGeometry=_ConnectionGeometry;this.RelatingElement=RelatingElement;this.RelatedElement=RelatedElement;this.EndOfLineComment=EndOfLineComment;}
public               RelConnectsElements(Element RelatingElement,Element RelatedElement,string EndOfLineComment=null):base(){AddNext();this.RelatingElement=RelatingElement;this.RelatedElement=RelatedElement;this.EndOfLineComment=EndOfLineComment;}
[ifc(5,optional=true)] public ConnectionGeometry _ConnectionGeometry; //ENTITY
[ifc(6)] public Element RelatingElement; //ENTITY
[ifc(7)] public Element RelatedElement; //ENTITY
public override void AssignInverseElements(){if (RelatingElement!=null) {if (RelatingElement.ConnectedTo==null) RelatingElement.ConnectedTo=new LIST<RelConnectsElements>();RelatingElement.ConnectedTo.Add(this);}
                                             if (RelatedElement!=null) {if (RelatedElement.ConnectedFrom==null) RelatedElement.ConnectedFrom=new LIST<RelConnectsElements>();RelatedElement.ConnectedFrom.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifcrelconnectspathelements.htm
[ifcSql(TypeGroupId:5,TypeId:1014,TableId:3)] public partial class RelConnectsPathElements:RelConnectsElements{//=====================================================
public               RelConnectsPathElements():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="_ConnectionGeometry">[optional]<para>new ifc.ConnectionCurveGeometry(...)</para><para>new ifc.ConnectionPointGeometry(...)</para><para>new ifc.ConnectionSurfaceGeometry(...)</para><para>new ifc.ConnectionPortGeometry(...)</para></param>
/// <param name="RelatingElement"><para>new ifc.Beam(...)</para><para>new ifc.BuildingElementProxy(...)</para><para>new ifc.Column(...)</para><para>new ifc.Covering(...)</para><para>new ifc.CurtainWall(...)</para><para>new ifc.Door(...)</para><para>new ifc.Footing(...)</para><para>new ifc.Member(...)</para><para>new ifc.Pile(...)</para><para>new ifc.Plate(...)</para><para>new ifc.Railing(...)</para><para>new ifc.Ramp(...)</para><para>new ifc.RampFlight(...)</para><para>new ifc.Roof(...)</para><para>new ifc.Slab(...)</para><para>new ifc.Stair(...)</para><para>new ifc.StairFlight(...)</para><para>new ifc.Wall(...)</para><para>new ifc.Window(...)</para><para>new ifc.DistributionElement(...)</para><para>new ifc.DistributionControlElement(...)</para><para>new ifc.Sensor(...)</para><para>new ifc.DistributionFlowElement(...)</para><para>new ifc.DistributionChamberElement(...)</para><para>new ifc.EnergyConversionDevice(...)</para><para>new ifc.FlowController(...)</para><para>new ifc.FlowFitting(...)</para><para>new ifc.FlowMovingDevice(...)</para><para>new ifc.FlowSegment(...)</para><para>new ifc.FlowStorageDevice(...)</para><para>new ifc.FlowTerminal(...)</para><para>new ifc.FlowTreatmentDevice(...)</para><para>new ifc.ElementAssembly(...)</para><para>new ifc.FurnishingElement(...)</para><para>new ifc.TransportElement(...)</para><para>new ifc.VirtualElement(...)</para><para>new ifc.ElectricalElement(...)</para><para>new ifc.EquipmentElement(...)</para></param>
/// <param name="RelatedElement"><para>new ifc.Beam(...)</para><para>new ifc.BuildingElementProxy(...)</para><para>new ifc.Column(...)</para><para>new ifc.Covering(...)</para><para>new ifc.CurtainWall(...)</para><para>new ifc.Door(...)</para><para>new ifc.Footing(...)</para><para>new ifc.Member(...)</para><para>new ifc.Pile(...)</para><para>new ifc.Plate(...)</para><para>new ifc.Railing(...)</para><para>new ifc.Ramp(...)</para><para>new ifc.RampFlight(...)</para><para>new ifc.Roof(...)</para><para>new ifc.Slab(...)</para><para>new ifc.Stair(...)</para><para>new ifc.StairFlight(...)</para><para>new ifc.Wall(...)</para><para>new ifc.Window(...)</para><para>new ifc.DistributionElement(...)</para><para>new ifc.DistributionControlElement(...)</para><para>new ifc.Sensor(...)</para><para>new ifc.DistributionFlowElement(...)</para><para>new ifc.DistributionChamberElement(...)</para><para>new ifc.EnergyConversionDevice(...)</para><para>new ifc.FlowController(...)</para><para>new ifc.FlowFitting(...)</para><para>new ifc.FlowMovingDevice(...)</para><para>new ifc.FlowSegment(...)</para><para>new ifc.FlowStorageDevice(...)</para><para>new ifc.FlowTerminal(...)</para><para>new ifc.FlowTreatmentDevice(...)</para><para>new ifc.ElementAssembly(...)</para><para>new ifc.FurnishingElement(...)</para><para>new ifc.TransportElement(...)</para><para>new ifc.VirtualElement(...)</para><para>new ifc.ElectricalElement(...)</para><para>new ifc.EquipmentElement(...)</para></param>
/// <param name="RelatingPriorities"><para>List0toUnbounded_Integer</para></param>
/// <param name="RelatedPriorities"><para>List0toUnbounded_Integer</para></param>
/// <param name="RelatedConnectionType"><para>ConnectionTypeEnum</para></param>
/// <param name="RelatingConnectionType"><para>ConnectionTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelConnectsPathElements(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,ConnectionGeometry _ConnectionGeometry,Element RelatingElement,Element RelatedElement,List0toUnbounded_Integer RelatingPriorities,List0toUnbounded_Integer RelatedPriorities,ConnectionTypeEnum RelatedConnectionType,ConnectionTypeEnum RelatingConnectionType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this._ConnectionGeometry=_ConnectionGeometry;this.RelatingElement=RelatingElement;this.RelatedElement=RelatedElement;this.RelatingPriorities=RelatingPriorities;this.RelatedPriorities=RelatedPriorities;this.RelatedConnectionType=RelatedConnectionType;this.RelatingConnectionType=RelatingConnectionType;this.EndOfLineComment=EndOfLineComment;}
public               RelConnectsPathElements(Element RelatingElement,Element RelatedElement,List0toUnbounded_Integer RelatingPriorities,List0toUnbounded_Integer RelatedPriorities,ConnectionTypeEnum RelatedConnectionType,ConnectionTypeEnum RelatingConnectionType,string EndOfLineComment=null):base(){AddNext();this.RelatingElement=RelatingElement;this.RelatedElement=RelatedElement;this.RelatingPriorities=RelatingPriorities;this.RelatedPriorities=RelatedPriorities;this.RelatedConnectionType=RelatedConnectionType;this.RelatingConnectionType=RelatingConnectionType;this.EndOfLineComment=EndOfLineComment;}
[ifc(8)] public List0toUnbounded_Integer RelatingPriorities; //ListType1d
[ifc(9)] public List0toUnbounded_Integer RelatedPriorities; //ListType1d
[ifc(10)] public ConnectionTypeEnum RelatedConnectionType; //ENUM
[ifc(11)] public ConnectionTypeEnum RelatingConnectionType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifcrelconnectsporttoelement.htm
[ifcSql(TypeGroupId:5,TypeId:1015,TableId:3)] public partial class RelConnectsPortToElement:RelConnects{//============================================================
public               RelConnectsPortToElement():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatingPort"><para>new ifc.DistributionPort(...)</para></param>
/// <param name="RelatedElement"><para>new ifc.DistributionElement(...)</para><para>new ifc.DistributionControlElement(...)</para><para>new ifc.Sensor(...)</para><para>new ifc.DistributionFlowElement(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelConnectsPortToElement(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Port RelatingPort,DistributionElement RelatedElement,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatingPort=RelatingPort;this.RelatedElement=RelatedElement;this.EndOfLineComment=EndOfLineComment;}
public               RelConnectsPortToElement(Port RelatingPort,DistributionElement RelatedElement,string EndOfLineComment=null):base(){AddNext();this.RelatingPort=RelatingPort;this.RelatedElement=RelatedElement;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public Port RelatingPort; //ENTITY
[ifc(6)] public DistributionElement RelatedElement; //ENTITY
public override void AssignInverseElements(){if (RelatedElement!=null) {if (RelatedElement.HasPorts==null) RelatedElement.HasPorts=new LIST<RelConnectsPortToElement>();RelatedElement.HasPorts.Add(this);}
                                             if (RelatingPort!=null) RelatingPort.ContainedIn=this;
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifcrelconnectsports.htm
[ifcSql(TypeGroupId:5,TypeId:1016,TableId:3)] public partial class RelConnectsPorts:RelConnects{//====================================================================
public               RelConnectsPorts():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatingPort"><para>new ifc.DistributionPort(...)</para></param>
/// <param name="RelatedPort"><para>new ifc.DistributionPort(...)</para></param>
/// <param name="RealizingElement">[optional]<para>new ifc.Beam(...)</para><para>new ifc.BuildingElementProxy(...)</para><para>new ifc.Column(...)</para><para>new ifc.Covering(...)</para><para>new ifc.CurtainWall(...)</para><para>new ifc.Door(...)</para><para>new ifc.Footing(...)</para><para>new ifc.Member(...)</para><para>new ifc.Pile(...)</para><para>new ifc.Plate(...)</para><para>new ifc.Railing(...)</para><para>new ifc.Ramp(...)</para><para>new ifc.RampFlight(...)</para><para>new ifc.Roof(...)</para><para>new ifc.Slab(...)</para><para>new ifc.Stair(...)</para><para>new ifc.StairFlight(...)</para><para>new ifc.Wall(...)</para><para>new ifc.Window(...)</para><para>new ifc.DistributionElement(...)</para><para>new ifc.DistributionControlElement(...)</para><para>new ifc.Sensor(...)</para><para>new ifc.DistributionFlowElement(...)</para><para>new ifc.DistributionChamberElement(...)</para><para>new ifc.EnergyConversionDevice(...)</para><para>new ifc.FlowController(...)</para><para>new ifc.FlowFitting(...)</para><para>new ifc.FlowMovingDevice(...)</para><para>new ifc.FlowSegment(...)</para><para>new ifc.FlowStorageDevice(...)</para><para>new ifc.FlowTerminal(...)</para><para>new ifc.FlowTreatmentDevice(...)</para><para>new ifc.ElementAssembly(...)</para><para>new ifc.FurnishingElement(...)</para><para>new ifc.TransportElement(...)</para><para>new ifc.VirtualElement(...)</para><para>new ifc.ElectricalElement(...)</para><para>new ifc.EquipmentElement(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelConnectsPorts(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Port RelatingPort,Port RelatedPort,Element RealizingElement=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatingPort=RelatingPort;this.RelatedPort=RelatedPort;this.RealizingElement=RealizingElement;this.EndOfLineComment=EndOfLineComment;}
public               RelConnectsPorts(Port RelatingPort,Port RelatedPort,string EndOfLineComment=null):base(){AddNext();this.RelatingPort=RelatingPort;this.RelatedPort=RelatedPort;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public Port RelatingPort; //ENTITY
[ifc(6)] public Port RelatedPort; //ENTITY
[ifc(7,optional=true)] public Element RealizingElement; //ENTITY
public override void AssignInverseElements(){if (RelatingPort!=null) RelatingPort.ConnectedTo=this;
                                             if (RelatedPort!=null) RelatedPort.ConnectedFrom=this;
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralanalysisdomain/lexical/ifcrelconnectsstructuralactivity.htm
[ifcSql(TypeGroupId:5,TypeId:1017,TableId:3)] public partial class RelConnectsStructuralActivity:RelConnects{//=======================================================
public               RelConnectsStructuralActivity():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatingElement"><para>new ifc.StructuralActivityAssignmentSelect(new Element(...))...</para><para>new ifc.StructuralActivityAssignmentSelect(new StructuralItem(...))...</para></param>
/// <param name="RelatedStructuralActivity"><para>new ifc.StructuralCurveAction(...)</para><para>new ifc.StructuralPointAction(...)</para><para>new ifc.StructuralSurfaceAction(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelConnectsStructuralActivity(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,StructuralActivityAssignmentSelect RelatingElement,StructuralActivity RelatedStructuralActivity,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatingElement=RelatingElement;this.RelatedStructuralActivity=RelatedStructuralActivity;this.EndOfLineComment=EndOfLineComment;}
public               RelConnectsStructuralActivity(StructuralActivityAssignmentSelect RelatingElement,StructuralActivity RelatedStructuralActivity,string EndOfLineComment=null):base(){AddNext();this.RelatingElement=RelatingElement;this.RelatedStructuralActivity=RelatedStructuralActivity;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public StructuralActivityAssignmentSelect RelatingElement; //SELECT
[ifc(6)] public StructuralActivity RelatedStructuralActivity; //ENTITY
public override void AssignInverseElements(){if (RelatedStructuralActivity!=null) RelatedStructuralActivity.AssignedToStructuralItem=this;
                                             if (RelatingElement!=null) if (RelatingElement.SelectType()==typeof(StructuralItem))  {if (((StructuralItem)RelatingElement).AssignedStructuralActivity==null) ((StructuralItem)RelatingElement).AssignedStructuralActivity=new LIST<RelConnectsStructuralActivity>();((StructuralItem)RelatingElement).AssignedStructuralActivity.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.RelConnectsWithEccentricity(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralanalysisdomain/lexical/ifcrelconnectsstructuralmember.htm
[ifcSql(TypeGroupId:5,TypeId:1018,TableId:3)] public partial class RelConnectsStructuralMember:RelConnects{//=========================================================
public               RelConnectsStructuralMember():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatingStructuralMember"><para>new ifc.StructuralCurveMember(...)</para><para>new ifc.StructuralCurveMemberVarying(...)</para><para>new ifc.StructuralSurfaceMember(...)</para></param>
/// <param name="RelatedStructuralConnection"><para>new ifc.StructuralCurveConnection(...)</para><para>new ifc.StructuralPointConnection(...)</para><para>new ifc.StructuralSurfaceConnection(...)</para></param>
/// <param name="AppliedCondition">[optional]<para>new ifc.BoundaryEdgeCondition(...)</para><para>new ifc.BoundaryFaceCondition(...)</para><para>new ifc.BoundaryNodeCondition(...)</para></param>
/// <param name="AdditionalConditions">[optional]<para>new ifc.FailureConnectionCondition(...)</para><para>new ifc.SlippageConnectionCondition(...)</para></param>
/// <param name="SupportedLength">[optional]<para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="ConditionCoordinateSystem">[optional]<para>new ifc.Axis2Placement3D(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelConnectsStructuralMember(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,StructuralMember RelatingStructuralMember,StructuralConnection RelatedStructuralConnection,BoundaryCondition AppliedCondition=null,StructuralConnectionCondition AdditionalConditions=null,LengthMeasure SupportedLength=null,Axis2Placement3D ConditionCoordinateSystem=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatingStructuralMember=RelatingStructuralMember;this.RelatedStructuralConnection=RelatedStructuralConnection;this.AppliedCondition=AppliedCondition;this.AdditionalConditions=AdditionalConditions;this.SupportedLength=SupportedLength;this.ConditionCoordinateSystem=ConditionCoordinateSystem;this.EndOfLineComment=EndOfLineComment;}
public               RelConnectsStructuralMember(StructuralMember RelatingStructuralMember,StructuralConnection RelatedStructuralConnection,string EndOfLineComment=null):base(){AddNext();this.RelatingStructuralMember=RelatingStructuralMember;this.RelatedStructuralConnection=RelatedStructuralConnection;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public StructuralMember RelatingStructuralMember; //ENTITY
[ifc(6)] public StructuralConnection RelatedStructuralConnection; //ENTITY
[ifc(7,optional=true)] public BoundaryCondition AppliedCondition; //ENTITY
[ifc(8,optional=true)] public StructuralConnectionCondition AdditionalConditions; //ENTITY
[ifc(9,optional=true)] public LengthMeasure SupportedLength; //TYPE
[ifc(10,optional=true)] public Axis2Placement3D ConditionCoordinateSystem; //ENTITY
public override void AssignInverseElements(){if (RelatedStructuralConnection!=null) {if (RelatedStructuralConnection.ConnectsStructuralMembers==null) RelatedStructuralConnection.ConnectsStructuralMembers=new LIST<RelConnectsStructuralMember>();RelatedStructuralConnection.ConnectsStructuralMembers.Add(this);}
                                             if (RelatingStructuralMember!=null) {if (RelatingStructuralMember.ConnectedBy==null) RelatingStructuralMember.ConnectedBy=new LIST<RelConnectsStructuralMember>();RelatingStructuralMember.ConnectedBy.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralanalysisdomain/lexical/ifcrelconnectswitheccentricity.htm
[ifcSql(TypeGroupId:5,TypeId:1019,TableId:3)] public partial class RelConnectsWithEccentricity:RelConnectsStructuralMember{//=========================================
public               RelConnectsWithEccentricity():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatingStructuralMember"><para>new ifc.StructuralCurveMember(...)</para><para>new ifc.StructuralCurveMemberVarying(...)</para><para>new ifc.StructuralSurfaceMember(...)</para></param>
/// <param name="RelatedStructuralConnection"><para>new ifc.StructuralCurveConnection(...)</para><para>new ifc.StructuralPointConnection(...)</para><para>new ifc.StructuralSurfaceConnection(...)</para></param>
/// <param name="AppliedCondition">[optional]<para>new ifc.BoundaryEdgeCondition(...)</para><para>new ifc.BoundaryFaceCondition(...)</para><para>new ifc.BoundaryNodeCondition(...)</para></param>
/// <param name="AdditionalConditions">[optional]<para>new ifc.FailureConnectionCondition(...)</para><para>new ifc.SlippageConnectionCondition(...)</para></param>
/// <param name="SupportedLength">[optional]<para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="ConditionCoordinateSystem">[optional]<para>new ifc.Axis2Placement3D(...)</para></param>
/// <param name="ConnectionConstraint"><para>new ifc.ConnectionCurveGeometry(...)</para><para>new ifc.ConnectionPointGeometry(...)</para><para>new ifc.ConnectionSurfaceGeometry(...)</para><para>new ifc.ConnectionPortGeometry(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelConnectsWithEccentricity(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,StructuralMember RelatingStructuralMember,StructuralConnection RelatedStructuralConnection,BoundaryCondition AppliedCondition,StructuralConnectionCondition AdditionalConditions,LengthMeasure SupportedLength,Axis2Placement3D ConditionCoordinateSystem,ConnectionGeometry ConnectionConstraint,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatingStructuralMember=RelatingStructuralMember;this.RelatedStructuralConnection=RelatedStructuralConnection;this.AppliedCondition=AppliedCondition;this.AdditionalConditions=AdditionalConditions;this.SupportedLength=SupportedLength;this.ConditionCoordinateSystem=ConditionCoordinateSystem;this.ConnectionConstraint=ConnectionConstraint;this.EndOfLineComment=EndOfLineComment;}
public               RelConnectsWithEccentricity(StructuralMember RelatingStructuralMember,StructuralConnection RelatedStructuralConnection,ConnectionGeometry ConnectionConstraint,string EndOfLineComment=null):base(){AddNext();this.RelatingStructuralMember=RelatingStructuralMember;this.RelatedStructuralConnection=RelatedStructuralConnection;this.ConnectionConstraint=ConnectionConstraint;this.EndOfLineComment=EndOfLineComment;}
[ifc(11)] public ConnectionGeometry ConnectionConstraint; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifcrelconnectswithrealizingelements.htm
[ifcSql(TypeGroupId:5,TypeId:1020,TableId:3)] public partial class RelConnectsWithRealizingElements:RelConnectsElements{//============================================
public               RelConnectsWithRealizingElements():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="_ConnectionGeometry">[optional]<para>new ifc.ConnectionCurveGeometry(...)</para><para>new ifc.ConnectionPointGeometry(...)</para><para>new ifc.ConnectionSurfaceGeometry(...)</para><para>new ifc.ConnectionPortGeometry(...)</para></param>
/// <param name="RelatingElement"><para>new ifc.Beam(...)</para><para>new ifc.BuildingElementProxy(...)</para><para>new ifc.Column(...)</para><para>new ifc.Covering(...)</para><para>new ifc.CurtainWall(...)</para><para>new ifc.Door(...)</para><para>new ifc.Footing(...)</para><para>new ifc.Member(...)</para><para>new ifc.Pile(...)</para><para>new ifc.Plate(...)</para><para>new ifc.Railing(...)</para><para>new ifc.Ramp(...)</para><para>new ifc.RampFlight(...)</para><para>new ifc.Roof(...)</para><para>new ifc.Slab(...)</para><para>new ifc.Stair(...)</para><para>new ifc.StairFlight(...)</para><para>new ifc.Wall(...)</para><para>new ifc.Window(...)</para><para>new ifc.DistributionElement(...)</para><para>new ifc.DistributionControlElement(...)</para><para>new ifc.Sensor(...)</para><para>new ifc.DistributionFlowElement(...)</para><para>new ifc.DistributionChamberElement(...)</para><para>new ifc.EnergyConversionDevice(...)</para><para>new ifc.FlowController(...)</para><para>new ifc.FlowFitting(...)</para><para>new ifc.FlowMovingDevice(...)</para><para>new ifc.FlowSegment(...)</para><para>new ifc.FlowStorageDevice(...)</para><para>new ifc.FlowTerminal(...)</para><para>new ifc.FlowTreatmentDevice(...)</para><para>new ifc.ElementAssembly(...)</para><para>new ifc.FurnishingElement(...)</para><para>new ifc.TransportElement(...)</para><para>new ifc.VirtualElement(...)</para><para>new ifc.ElectricalElement(...)</para><para>new ifc.EquipmentElement(...)</para></param>
/// <param name="RelatedElement"><para>new ifc.Beam(...)</para><para>new ifc.BuildingElementProxy(...)</para><para>new ifc.Column(...)</para><para>new ifc.Covering(...)</para><para>new ifc.CurtainWall(...)</para><para>new ifc.Door(...)</para><para>new ifc.Footing(...)</para><para>new ifc.Member(...)</para><para>new ifc.Pile(...)</para><para>new ifc.Plate(...)</para><para>new ifc.Railing(...)</para><para>new ifc.Ramp(...)</para><para>new ifc.RampFlight(...)</para><para>new ifc.Roof(...)</para><para>new ifc.Slab(...)</para><para>new ifc.Stair(...)</para><para>new ifc.StairFlight(...)</para><para>new ifc.Wall(...)</para><para>new ifc.Window(...)</para><para>new ifc.DistributionElement(...)</para><para>new ifc.DistributionControlElement(...)</para><para>new ifc.Sensor(...)</para><para>new ifc.DistributionFlowElement(...)</para><para>new ifc.DistributionChamberElement(...)</para><para>new ifc.EnergyConversionDevice(...)</para><para>new ifc.FlowController(...)</para><para>new ifc.FlowFitting(...)</para><para>new ifc.FlowMovingDevice(...)</para><para>new ifc.FlowSegment(...)</para><para>new ifc.FlowStorageDevice(...)</para><para>new ifc.FlowTerminal(...)</para><para>new ifc.FlowTreatmentDevice(...)</para><para>new ifc.ElementAssembly(...)</para><para>new ifc.FurnishingElement(...)</para><para>new ifc.TransportElement(...)</para><para>new ifc.VirtualElement(...)</para><para>new ifc.ElectricalElement(...)</para><para>new ifc.EquipmentElement(...)</para></param>
/// <param name="RealizingElements"><para>Set1toUnbounded_Element</para></param>
/// <param name="ConnectionType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelConnectsWithRealizingElements(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,ConnectionGeometry _ConnectionGeometry,Element RelatingElement,Element RelatedElement,Set1toUnbounded_Element RealizingElements,Label ConnectionType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this._ConnectionGeometry=_ConnectionGeometry;this.RelatingElement=RelatingElement;this.RelatedElement=RelatedElement;this.RealizingElements=RealizingElements;this.ConnectionType=ConnectionType;this.EndOfLineComment=EndOfLineComment;}
public               RelConnectsWithRealizingElements(Element RelatingElement,Element RelatedElement,Set1toUnbounded_Element RealizingElements,string EndOfLineComment=null):base(){AddNext();this.RelatingElement=RelatingElement;this.RelatedElement=RelatedElement;this.RealizingElements=RealizingElements;this.EndOfLineComment=EndOfLineComment;}
[ifc(8)] public Set1toUnbounded_Element RealizingElements; //ListType1d
[ifc(9,optional=true)] public Label ConnectionType; //TYPE
public override void AssignInverseElements(){if (RealizingElements!=null) foreach (Element __Element in RealizingElements) if (__Element is Element) {if (((Element)__Element).IsConnectionRealization==null) ((Element)__Element).IsConnectionRealization=new LIST<RelConnectsWithRealizingElements>();((Element)__Element).IsConnectionRealization.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifcrelcontainedinspatialstructure.htm
[ifcSql(TypeGroupId:5,TypeId:1021,TableId:3)] public partial class RelContainedInSpatialStructure:RelConnects{//======================================================
public               RelContainedInSpatialStructure():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatedElements"><para>Set1toUnbounded_Product</para></param>
/// <param name="RelatingStructure"><para>new ifc.ExternalSpatialElement(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelContainedInSpatialStructure(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Set1toUnbounded_Product RelatedElements,SpatialElement RelatingStructure,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatedElements=RelatedElements;this.RelatingStructure=RelatingStructure;this.EndOfLineComment=EndOfLineComment;}
public               RelContainedInSpatialStructure(Set1toUnbounded_Product RelatedElements,SpatialElement RelatingStructure,string EndOfLineComment=null):base(){AddNext();this.RelatedElements=RelatedElements;this.RelatingStructure=RelatingStructure;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public Set1toUnbounded_Product RelatedElements; //ListType1d
[ifc(6)] public SpatialElement RelatingStructure; //ENTITY
public override void AssignInverseElements(){if (RelatedElements!=null) foreach (Product __Product in RelatedElements) if (__Product is Alignment) ((Alignment)__Product).ContainedInStructure=this;
                                             if (RelatedElements!=null) foreach (Product __Product in RelatedElements) if (__Product is Annotation) ((Annotation)__Product).ContainedInStructure=this;
                                             if (RelatedElements!=null) foreach (Product __Product in RelatedElements) if (__Product is Element) ((Element)__Product).ContainedInStructure=this;
                                             if (RelatedElements!=null) foreach (Product __Product in RelatedElements) if (__Product is Grid) ((Grid)__Product).ContainedInStructure=this;
                                             if (RelatingStructure!=null) {if (RelatingStructure.ContainsElements==null) RelatingStructure.ContainsElements=new LIST<RelContainedInSpatialStructure>();RelatingStructure.ContainsElements.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifcrelcoversbldgelements.htm
[ifcSql(TypeGroupId:5,TypeId:1022,TableId:3)] public partial class RelCoversBldgElements:RelConnects{//===============================================================
public               RelCoversBldgElements():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatingBuildingElement"><para>new ifc.Beam(...)</para><para>new ifc.BuildingElementProxy(...)</para><para>new ifc.Column(...)</para><para>new ifc.Covering(...)</para><para>new ifc.CurtainWall(...)</para><para>new ifc.Door(...)</para><para>new ifc.Footing(...)</para><para>new ifc.Member(...)</para><para>new ifc.Pile(...)</para><para>new ifc.Plate(...)</para><para>new ifc.Railing(...)</para><para>new ifc.Ramp(...)</para><para>new ifc.RampFlight(...)</para><para>new ifc.Roof(...)</para><para>new ifc.Slab(...)</para><para>new ifc.Stair(...)</para><para>new ifc.StairFlight(...)</para><para>new ifc.Wall(...)</para><para>new ifc.Window(...)</para><para>new ifc.DistributionElement(...)</para><para>new ifc.DistributionControlElement(...)</para><para>new ifc.Sensor(...)</para><para>new ifc.DistributionFlowElement(...)</para><para>new ifc.DistributionChamberElement(...)</para><para>new ifc.EnergyConversionDevice(...)</para><para>new ifc.FlowController(...)</para><para>new ifc.FlowFitting(...)</para><para>new ifc.FlowMovingDevice(...)</para><para>new ifc.FlowSegment(...)</para><para>new ifc.FlowStorageDevice(...)</para><para>new ifc.FlowTerminal(...)</para><para>new ifc.FlowTreatmentDevice(...)</para><para>new ifc.ElementAssembly(...)</para><para>new ifc.FurnishingElement(...)</para><para>new ifc.TransportElement(...)</para><para>new ifc.VirtualElement(...)</para><para>new ifc.ElectricalElement(...)</para><para>new ifc.EquipmentElement(...)</para></param>
/// <param name="RelatedCoverings"><para>Set1toUnbounded_Covering</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelCoversBldgElements(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Element RelatingBuildingElement,Set1toUnbounded_Covering RelatedCoverings,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatingBuildingElement=RelatingBuildingElement;this.RelatedCoverings=RelatedCoverings;this.EndOfLineComment=EndOfLineComment;}
public               RelCoversBldgElements(Element RelatingBuildingElement,Set1toUnbounded_Covering RelatedCoverings,string EndOfLineComment=null):base(){AddNext();this.RelatingBuildingElement=RelatingBuildingElement;this.RelatedCoverings=RelatedCoverings;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public Element RelatingBuildingElement; //ENTITY
[ifc(6)] public Set1toUnbounded_Covering RelatedCoverings; //ListType1d
public override void AssignInverseElements(){if (RelatedCoverings!=null) foreach (Covering __Covering in RelatedCoverings) if (__Covering is Covering) ((Covering)__Covering).CoversElements=this;
                                             if (RelatingBuildingElement!=null) {if (RelatingBuildingElement.HasCoverings==null) RelatingBuildingElement.HasCoverings=new LIST<RelCoversBldgElements>();RelatingBuildingElement.HasCoverings.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifcrelcoversspaces.htm
[ifcSql(TypeGroupId:5,TypeId:1023,TableId:3)] public partial class RelCoversSpaces:RelConnects{//=====================================================================
public               RelCoversSpaces():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatingSpace"><para>new ifc.Space(...)</para></param>
/// <param name="RelatedCoverings"><para>Set1toUnbounded_Covering</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelCoversSpaces(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Space RelatingSpace,Set1toUnbounded_Covering RelatedCoverings,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatingSpace=RelatingSpace;this.RelatedCoverings=RelatedCoverings;this.EndOfLineComment=EndOfLineComment;}
public               RelCoversSpaces(Space RelatingSpace,Set1toUnbounded_Covering RelatedCoverings,string EndOfLineComment=null):base(){AddNext();this.RelatingSpace=RelatingSpace;this.RelatedCoverings=RelatedCoverings;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public Space RelatingSpace; //ENTITY
[ifc(6)] public Set1toUnbounded_Covering RelatedCoverings; //ListType1d
public override void AssignInverseElements(){if (RelatedCoverings!=null) foreach (Covering __Covering in RelatedCoverings) if (__Covering is Covering) ((Covering)__Covering).CoversSpaces=this;
                                             if (RelatingSpace!=null) {if (RelatingSpace.HasCoverings==null) RelatingSpace.HasCoverings=new LIST<RelCoversSpaces>();RelatingSpace.HasCoverings.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifckernel/lexical/ifcreldeclares.htm
[ifcSql(TypeGroupId:5,TypeId:1024,TableId:3)] public partial class RelDeclares:Relationship{//========================================================================
public               RelDeclares():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatingContext"><para>new ifc.Project(...)</para></param>
/// <param name="RelatedDefinitions"><para>Set1toUnbounded_DefinitionSelect</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelDeclares(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Context RelatingContext,Set1toUnbounded_DefinitionSelect RelatedDefinitions,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatingContext=RelatingContext;this.RelatedDefinitions=RelatedDefinitions;this.EndOfLineComment=EndOfLineComment;}
public               RelDeclares(Context RelatingContext,Set1toUnbounded_DefinitionSelect RelatedDefinitions,string EndOfLineComment=null):base(){AddNext();this.RelatingContext=RelatingContext;this.RelatedDefinitions=RelatedDefinitions;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public Context RelatingContext; //ENTITY
[ifc(6)] public Set1toUnbounded_DefinitionSelect RelatedDefinitions; //ListType1d
public override void AssignInverseElements(){if (RelatingContext!=null) {if (RelatingContext.Declares==null) RelatingContext.Declares=new LIST<RelDeclares>();RelatingContext.Declares.Add(this);}
                                             if (RelatedDefinitions!=null) foreach (DefinitionSelect __DefinitionSelect in RelatedDefinitions) if (__DefinitionSelect.SelectType()==typeof(ObjectDefinition)) ((ObjectDefinition)__DefinitionSelect).HasContext=this;
                                             if (RelatedDefinitions!=null) foreach (DefinitionSelect __DefinitionSelect in RelatedDefinitions) if (__DefinitionSelect.SelectType()==typeof(PropertyDefinition)) ((PropertyDefinition)__DefinitionSelect).HasContext=this;
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.RelAggregates(...)</para><para>new ifc.RelNests(...)</para><para>new ifc.RelProjectsElement(...)</para><para>new ifc.RelVoidsElement(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1025,TableId:3)] public partial class RelDecomposes:Relationship{//======================================================================
public               RelDecomposes():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.RelDefinesByObject(...)</para><para>new ifc.RelDefinesByProperties(...)</para><para>new ifc.RelDefinesByTemplate(...)</para><para>new ifc.RelDefinesByType(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1026,TableId:3)] public partial class RelDefines:Relationship{//=========================================================================
public               RelDefines():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifckernel/lexical/ifcreldefinesbyobject.htm
[ifcSql(TypeGroupId:5,TypeId:1027,TableId:3)] public partial class RelDefinesByObject:RelDefines{//===================================================================
public               RelDefinesByObject():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatedObjects"><para>Set1toUnbounded_Object</para></param>
/// <param name="RelatingObject"><para>new ifc.Actor(...)</para><para>new ifc.Occupant(...)</para><para>new ifc.ActionRequest(...)</para><para>new ifc.CostItem(...)</para><para>new ifc.CostSchedule(...)</para><para>new ifc.PerformanceHistory(...)</para><para>new ifc.Permit(...)</para><para>new ifc.ProjectOrder(...)</para><para>new ifc.ConditionCriterion(...)</para><para>new ifc.EquipmentStandard(...)</para><para>new ifc.FurnitureStandard(...)</para><para>new ifc.ProjectOrderRecord(...)</para><para>new ifc.ScheduleTimeControl(...)</para><para>new ifc.ServiceLife(...)</para><para>new ifc.SpaceProgram(...)</para><para>new ifc.TimeSeriesSchedule(...)</para><para>new ifc.Group(...)</para><para>new ifc.Asset(...)</para><para>new ifc.Inventory(...)</para><para>new ifc.StructuralLoadGroup(...)</para><para>new ifc.StructuralResultGroup(...)</para><para>new ifc.System(...)</para><para>new ifc.Condition(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelDefinesByObject(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Set1toUnbounded_Object RelatedObjects,Object RelatingObject,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatedObjects=RelatedObjects;this.RelatingObject=RelatingObject;this.EndOfLineComment=EndOfLineComment;}
public               RelDefinesByObject(Set1toUnbounded_Object RelatedObjects,Object RelatingObject,string EndOfLineComment=null):base(){AddNext();this.RelatedObjects=RelatedObjects;this.RelatingObject=RelatingObject;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public Set1toUnbounded_Object RelatedObjects; //ListType1d
[ifc(6)] public Object RelatingObject; //ENTITY
public override void AssignInverseElements(){if (RelatedObjects!=null) foreach (Object __Object in RelatedObjects) if (__Object is Object) ((Object)__Object).IsDeclaredBy=this;
                                             if (RelatingObject!=null) {if (RelatingObject.Declares==null) RelatingObject.Declares=new LIST<RelDefinesByObject>();RelatingObject.Declares.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.RelOverridesProperties(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifckernel/lexical/ifcreldefinesbyproperties.htm
[ifcSql(TypeGroupId:5,TypeId:1028,TableId:3)] public partial class RelDefinesByProperties:RelDefines{//===============================================================
public               RelDefinesByProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatedObjects"><para>Set1toUnbounded_ObjectDefinition</para></param>
/// <param name="RelatingPropertyDefinition"><para>new ifc.PropertySetDefinitionSelect(new PropertySetDefinitionSet(...))...</para><para>new ifc.PropertySetDefinitionSelect(new PropertySetDefinition(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelDefinesByProperties(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Set1toUnbounded_ObjectDefinition RelatedObjects,PropertySetDefinitionSelect RelatingPropertyDefinition,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatedObjects=RelatedObjects;this.RelatingPropertyDefinition=RelatingPropertyDefinition;this.EndOfLineComment=EndOfLineComment;}
public               RelDefinesByProperties(Set1toUnbounded_ObjectDefinition RelatedObjects,PropertySetDefinitionSelect RelatingPropertyDefinition,string EndOfLineComment=null):base(){AddNext();this.RelatedObjects=RelatedObjects;this.RelatingPropertyDefinition=RelatingPropertyDefinition;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public Set1toUnbounded_ObjectDefinition RelatedObjects; //ListType1d
[ifc(6)] public PropertySetDefinitionSelect RelatingPropertyDefinition; //SELECT
public override void AssignInverseElements(){if (RelatedObjects!=null) foreach (ObjectDefinition __ObjectDefinition in RelatedObjects) if (__ObjectDefinition is Context) {if (((Context)__ObjectDefinition).IsDefinedBy==null) ((Context)__ObjectDefinition).IsDefinedBy=new LIST<RelDefinesByProperties>();((Context)__ObjectDefinition).IsDefinedBy.Add(this);}
                                             if (RelatedObjects!=null) foreach (ObjectDefinition __ObjectDefinition in RelatedObjects) if (__ObjectDefinition is Object) {if (((Object)__ObjectDefinition).IsDefinedBy==null) ((Object)__ObjectDefinition).IsDefinedBy=new LIST<RelDefinesByProperties>();((Object)__ObjectDefinition).IsDefinedBy.Add(this);}
                                             if (RelatingPropertyDefinition!=null) if (RelatingPropertyDefinition.SelectType()==typeof(PropertySetDefinition))  {if (((PropertySetDefinition)RelatingPropertyDefinition).DefinesOccurrence==null) ((PropertySetDefinition)RelatingPropertyDefinition).DefinesOccurrence=new LIST<RelDefinesByProperties>();((PropertySetDefinition)RelatingPropertyDefinition).DefinesOccurrence.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifckernel/lexical/ifcreldefinesbytemplate.htm
[ifcSql(TypeGroupId:5,TypeId:1029,TableId:3)] public partial class RelDefinesByTemplate:RelDefines{//=================================================================
public               RelDefinesByTemplate():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatedPropertySets"><para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RelatingTemplate"><para>new ifc.PropertySetTemplate(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelDefinesByTemplate(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Set1toUnbounded_PropertySetDefinition RelatedPropertySets,PropertySetTemplate RelatingTemplate,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatedPropertySets=RelatedPropertySets;this.RelatingTemplate=RelatingTemplate;this.EndOfLineComment=EndOfLineComment;}
public               RelDefinesByTemplate(Set1toUnbounded_PropertySetDefinition RelatedPropertySets,PropertySetTemplate RelatingTemplate,string EndOfLineComment=null):base(){AddNext();this.RelatedPropertySets=RelatedPropertySets;this.RelatingTemplate=RelatingTemplate;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public Set1toUnbounded_PropertySetDefinition RelatedPropertySets; //ListType1d
[ifc(6)] public PropertySetTemplate RelatingTemplate; //ENTITY
public override void AssignInverseElements(){if (RelatedPropertySets!=null) foreach (PropertySetDefinition __PropertySetDefinition in RelatedPropertySets) if (__PropertySetDefinition is PropertySetDefinition) {if (((PropertySetDefinition)__PropertySetDefinition).IsDefinedBy==null) ((PropertySetDefinition)__PropertySetDefinition).IsDefinedBy=new LIST<RelDefinesByTemplate>();((PropertySetDefinition)__PropertySetDefinition).IsDefinedBy.Add(this);}
                                             if (RelatingTemplate!=null) {if (RelatingTemplate.Defines==null) RelatingTemplate.Defines=new LIST<RelDefinesByTemplate>();RelatingTemplate.Defines.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifckernel/lexical/ifcreldefinesbytype.htm
[ifcSql(TypeGroupId:5,TypeId:1030,TableId:3)] public partial class RelDefinesByType:RelDefines{//=====================================================================
public               RelDefinesByType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatedObjects"><para>Set1toUnbounded_Object</para></param>
/// <param name="RelatingType"><para>new ifc.TypeObject(...)</para><para>new ifc.TypeProduct(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelDefinesByType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Set1toUnbounded_Object RelatedObjects,TypeObject RelatingType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatedObjects=RelatedObjects;this.RelatingType=RelatingType;this.EndOfLineComment=EndOfLineComment;}
public               RelDefinesByType(Set1toUnbounded_Object RelatedObjects,TypeObject RelatingType,string EndOfLineComment=null):base(){AddNext();this.RelatedObjects=RelatedObjects;this.RelatingType=RelatingType;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public Set1toUnbounded_Object RelatedObjects; //ListType1d
[ifc(6)] public TypeObject RelatingType; //ENTITY
public override void AssignInverseElements(){if (RelatedObjects!=null) foreach (Object __Object in RelatedObjects) if (__Object is Object) ((Object)__Object).IsTypedBy=this;
                                             if (RelatingType!=null) RelatingType.Types=this;
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifcrelfillselement.htm
[ifcSql(TypeGroupId:5,TypeId:1031,TableId:3)] public partial class RelFillsElement:RelConnects{//=====================================================================
public               RelFillsElement():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatingOpeningElement"><para>new ifc.OpeningElement(...)</para></param>
/// <param name="RelatedBuildingElement"><para>new ifc.Beam(...)</para><para>new ifc.BuildingElementProxy(...)</para><para>new ifc.Column(...)</para><para>new ifc.Covering(...)</para><para>new ifc.CurtainWall(...)</para><para>new ifc.Door(...)</para><para>new ifc.Footing(...)</para><para>new ifc.Member(...)</para><para>new ifc.Pile(...)</para><para>new ifc.Plate(...)</para><para>new ifc.Railing(...)</para><para>new ifc.Ramp(...)</para><para>new ifc.RampFlight(...)</para><para>new ifc.Roof(...)</para><para>new ifc.Slab(...)</para><para>new ifc.Stair(...)</para><para>new ifc.StairFlight(...)</para><para>new ifc.Wall(...)</para><para>new ifc.Window(...)</para><para>new ifc.DistributionElement(...)</para><para>new ifc.DistributionControlElement(...)</para><para>new ifc.Sensor(...)</para><para>new ifc.DistributionFlowElement(...)</para><para>new ifc.DistributionChamberElement(...)</para><para>new ifc.EnergyConversionDevice(...)</para><para>new ifc.FlowController(...)</para><para>new ifc.FlowFitting(...)</para><para>new ifc.FlowMovingDevice(...)</para><para>new ifc.FlowSegment(...)</para><para>new ifc.FlowStorageDevice(...)</para><para>new ifc.FlowTerminal(...)</para><para>new ifc.FlowTreatmentDevice(...)</para><para>new ifc.ElementAssembly(...)</para><para>new ifc.FurnishingElement(...)</para><para>new ifc.TransportElement(...)</para><para>new ifc.VirtualElement(...)</para><para>new ifc.ElectricalElement(...)</para><para>new ifc.EquipmentElement(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelFillsElement(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,OpeningElement RelatingOpeningElement,Element RelatedBuildingElement,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatingOpeningElement=RelatingOpeningElement;this.RelatedBuildingElement=RelatedBuildingElement;this.EndOfLineComment=EndOfLineComment;}
public               RelFillsElement(OpeningElement RelatingOpeningElement,Element RelatedBuildingElement,string EndOfLineComment=null):base(){AddNext();this.RelatingOpeningElement=RelatingOpeningElement;this.RelatedBuildingElement=RelatedBuildingElement;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public OpeningElement RelatingOpeningElement; //ENTITY
[ifc(6)] public Element RelatedBuildingElement; //ENTITY
public override void AssignInverseElements(){if (RelatedBuildingElement!=null) RelatedBuildingElement.FillsVoids=this;
                                             if (RelatingOpeningElement!=null) {if (RelatingOpeningElement.HasFillings==null) RelatingOpeningElement.HasFillings=new LIST<RelFillsElement>();RelatingOpeningElement.HasFillings.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgserviceelements/lexical/ifcrelflowcontrolelements.htm
[ifcSql(TypeGroupId:5,TypeId:1032,TableId:3)] public partial class RelFlowControlElements:RelConnects{//==============================================================
public               RelFlowControlElements():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatedControlElements"><para>Set1toUnbounded_DistributionControlElement</para></param>
/// <param name="RelatingFlowElement"><para>new ifc.DistributionFlowElement(...)</para><para>new ifc.DistributionChamberElement(...)</para><para>new ifc.EnergyConversionDevice(...)</para><para>new ifc.FlowController(...)</para><para>new ifc.FlowFitting(...)</para><para>new ifc.FlowMovingDevice(...)</para><para>new ifc.FlowSegment(...)</para><para>new ifc.FlowStorageDevice(...)</para><para>new ifc.FlowTerminal(...)</para><para>new ifc.FlowTreatmentDevice(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelFlowControlElements(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Set1toUnbounded_DistributionControlElement RelatedControlElements,DistributionFlowElement RelatingFlowElement,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatedControlElements=RelatedControlElements;this.RelatingFlowElement=RelatingFlowElement;this.EndOfLineComment=EndOfLineComment;}
public               RelFlowControlElements(Set1toUnbounded_DistributionControlElement RelatedControlElements,DistributionFlowElement RelatingFlowElement,string EndOfLineComment=null):base(){AddNext();this.RelatedControlElements=RelatedControlElements;this.RelatingFlowElement=RelatingFlowElement;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public Set1toUnbounded_DistributionControlElement RelatedControlElements; //ListType1d
[ifc(6)] public DistributionFlowElement RelatingFlowElement; //ENTITY
public override void AssignInverseElements(){if (RelatedControlElements!=null) foreach (DistributionControlElement __DistributionControlElement in RelatedControlElements) if (__DistributionControlElement is DistributionControlElement) ((DistributionControlElement)__DistributionControlElement).AssignedToFlowElement=this;
                                             if (RelatingFlowElement!=null) RelatingFlowElement.HasControlElements=this;
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifcrelinterfereselements.htm
[ifcSql(TypeGroupId:5,TypeId:1033,TableId:3)] public partial class RelInterferesElements:RelConnects{//===============================================================
public               RelInterferesElements():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatingElement"><para>new ifc.Beam(...)</para><para>new ifc.BuildingElementProxy(...)</para><para>new ifc.Column(...)</para><para>new ifc.Covering(...)</para><para>new ifc.CurtainWall(...)</para><para>new ifc.Door(...)</para><para>new ifc.Footing(...)</para><para>new ifc.Member(...)</para><para>new ifc.Pile(...)</para><para>new ifc.Plate(...)</para><para>new ifc.Railing(...)</para><para>new ifc.Ramp(...)</para><para>new ifc.RampFlight(...)</para><para>new ifc.Roof(...)</para><para>new ifc.Slab(...)</para><para>new ifc.Stair(...)</para><para>new ifc.StairFlight(...)</para><para>new ifc.Wall(...)</para><para>new ifc.Window(...)</para><para>new ifc.DistributionElement(...)</para><para>new ifc.DistributionControlElement(...)</para><para>new ifc.Sensor(...)</para><para>new ifc.DistributionFlowElement(...)</para><para>new ifc.DistributionChamberElement(...)</para><para>new ifc.EnergyConversionDevice(...)</para><para>new ifc.FlowController(...)</para><para>new ifc.FlowFitting(...)</para><para>new ifc.FlowMovingDevice(...)</para><para>new ifc.FlowSegment(...)</para><para>new ifc.FlowStorageDevice(...)</para><para>new ifc.FlowTerminal(...)</para><para>new ifc.FlowTreatmentDevice(...)</para><para>new ifc.ElementAssembly(...)</para><para>new ifc.FurnishingElement(...)</para><para>new ifc.TransportElement(...)</para><para>new ifc.VirtualElement(...)</para><para>new ifc.ElectricalElement(...)</para><para>new ifc.EquipmentElement(...)</para></param>
/// <param name="RelatedElement"><para>new ifc.Beam(...)</para><para>new ifc.BuildingElementProxy(...)</para><para>new ifc.Column(...)</para><para>new ifc.Covering(...)</para><para>new ifc.CurtainWall(...)</para><para>new ifc.Door(...)</para><para>new ifc.Footing(...)</para><para>new ifc.Member(...)</para><para>new ifc.Pile(...)</para><para>new ifc.Plate(...)</para><para>new ifc.Railing(...)</para><para>new ifc.Ramp(...)</para><para>new ifc.RampFlight(...)</para><para>new ifc.Roof(...)</para><para>new ifc.Slab(...)</para><para>new ifc.Stair(...)</para><para>new ifc.StairFlight(...)</para><para>new ifc.Wall(...)</para><para>new ifc.Window(...)</para><para>new ifc.DistributionElement(...)</para><para>new ifc.DistributionControlElement(...)</para><para>new ifc.Sensor(...)</para><para>new ifc.DistributionFlowElement(...)</para><para>new ifc.DistributionChamberElement(...)</para><para>new ifc.EnergyConversionDevice(...)</para><para>new ifc.FlowController(...)</para><para>new ifc.FlowFitting(...)</para><para>new ifc.FlowMovingDevice(...)</para><para>new ifc.FlowSegment(...)</para><para>new ifc.FlowStorageDevice(...)</para><para>new ifc.FlowTerminal(...)</para><para>new ifc.FlowTreatmentDevice(...)</para><para>new ifc.ElementAssembly(...)</para><para>new ifc.FurnishingElement(...)</para><para>new ifc.TransportElement(...)</para><para>new ifc.VirtualElement(...)</para><para>new ifc.ElectricalElement(...)</para><para>new ifc.EquipmentElement(...)</para></param>
/// <param name="InterferenceGeometry">[optional]<para>new ifc.ConnectionCurveGeometry(...)</para><para>new ifc.ConnectionPointGeometry(...)</para><para>new ifc.ConnectionSurfaceGeometry(...)</para><para>new ifc.ConnectionPortGeometry(...)</para></param>
/// <param name="InterferenceType">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="ImpliedOrder"><para>LOGICAL</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelInterferesElements(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Element RelatingElement,Element RelatedElement,ConnectionGeometry InterferenceGeometry,Identifier InterferenceType,LOGICAL ImpliedOrder,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatingElement=RelatingElement;this.RelatedElement=RelatedElement;this.InterferenceGeometry=InterferenceGeometry;this.InterferenceType=InterferenceType;this.ImpliedOrder=ImpliedOrder;this.EndOfLineComment=EndOfLineComment;}
public               RelInterferesElements(Element RelatingElement,Element RelatedElement,LOGICAL ImpliedOrder,string EndOfLineComment=null):base(){AddNext();this.RelatingElement=RelatingElement;this.RelatedElement=RelatedElement;this.ImpliedOrder=ImpliedOrder;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public Element RelatingElement; //ENTITY
[ifc(6)] public Element RelatedElement; //ENTITY
[ifc(7,optional=true)] public ConnectionGeometry InterferenceGeometry; //ENTITY
[ifc(8,optional=true)] public Identifier InterferenceType; //TYPE
[ifc(9)] public LOGICAL ImpliedOrder; //BASETYPE
public override void AssignInverseElements(){if (RelatingElement!=null) {if (RelatingElement.InterferesElements==null) RelatingElement.InterferesElements=new LIST<RelInterferesElements>();RelatingElement.InterferesElements.Add(this);}
                                             if (RelatedElement!=null) {if (RelatedElement.IsInterferedByElements==null) RelatedElement.IsInterferedByElements=new LIST<RelInterferesElements>();RelatedElement.IsInterferedByElements.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifckernel/lexical/ifcrelnests.htm
[ifcSql(TypeGroupId:5,TypeId:1034,TableId:3)] public partial class RelNests:RelDecomposes{//==========================================================================
public               RelNests():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatingObject"><para>new ifc.Project(...)</para><para>new ifc.Actor(...)</para><para>new ifc.Occupant(...)</para><para>new ifc.ActionRequest(...)</para><para>new ifc.CostItem(...)</para><para>new ifc.CostSchedule(...)</para><para>new ifc.PerformanceHistory(...)</para><para>new ifc.Permit(...)</para><para>new ifc.ProjectOrder(...)</para><para>new ifc.ConditionCriterion(...)</para><para>new ifc.EquipmentStandard(...)</para><para>new ifc.FurnitureStandard(...)</para><para>new ifc.ProjectOrderRecord(...)</para><para>new ifc.ScheduleTimeControl(...)</para><para>new ifc.ServiceLife(...)</para><para>new ifc.SpaceProgram(...)</para><para>new ifc.TimeSeriesSchedule(...)</para><para>new ifc.Group(...)</para><para>new ifc.Asset(...)</para><para>new ifc.Inventory(...)</para><para>new ifc.StructuralLoadGroup(...)</para><para>new ifc.StructuralResultGroup(...)</para><para>new ifc.System(...)</para><para>new ifc.Condition(...)</para><para>new ifc.TypeObject(...)</para></param>
/// <param name="RelatedObjects"><para>List1toUnbounded_ObjectDefinition</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelNests(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,ObjectDefinition RelatingObject,List1toUnbounded_ObjectDefinition RelatedObjects,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatingObject=RelatingObject;this.RelatedObjects=RelatedObjects;this.EndOfLineComment=EndOfLineComment;}
public               RelNests(ObjectDefinition RelatingObject,List1toUnbounded_ObjectDefinition RelatedObjects,string EndOfLineComment=null):base(){AddNext();this.RelatingObject=RelatingObject;this.RelatedObjects=RelatedObjects;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public ObjectDefinition RelatingObject; //ENTITY
[ifc(6)] public List1toUnbounded_ObjectDefinition RelatedObjects; //ListType1d
public override void AssignInverseElements(){if (RelatingObject!=null) {if (RelatingObject.IsNestedBy==null) RelatingObject.IsNestedBy=new LIST<RelNests>();RelatingObject.IsNestedBy.Add(this);}
                                             if (RelatedObjects!=null) foreach (ObjectDefinition __ObjectDefinition in RelatedObjects) if (__ObjectDefinition is ObjectDefinition) ((ObjectDefinition)__ObjectDefinition).Nests=this;
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifcrelprojectselement.htm
[ifcSql(TypeGroupId:5,TypeId:1035,TableId:3)] public partial class RelProjectsElement:RelDecomposes{//================================================================
public               RelProjectsElement():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatingElement"><para>new ifc.Beam(...)</para><para>new ifc.BuildingElementProxy(...)</para><para>new ifc.Column(...)</para><para>new ifc.Covering(...)</para><para>new ifc.CurtainWall(...)</para><para>new ifc.Door(...)</para><para>new ifc.Footing(...)</para><para>new ifc.Member(...)</para><para>new ifc.Pile(...)</para><para>new ifc.Plate(...)</para><para>new ifc.Railing(...)</para><para>new ifc.Ramp(...)</para><para>new ifc.RampFlight(...)</para><para>new ifc.Roof(...)</para><para>new ifc.Slab(...)</para><para>new ifc.Stair(...)</para><para>new ifc.StairFlight(...)</para><para>new ifc.Wall(...)</para><para>new ifc.Window(...)</para><para>new ifc.DistributionElement(...)</para><para>new ifc.DistributionControlElement(...)</para><para>new ifc.Sensor(...)</para><para>new ifc.DistributionFlowElement(...)</para><para>new ifc.DistributionChamberElement(...)</para><para>new ifc.EnergyConversionDevice(...)</para><para>new ifc.FlowController(...)</para><para>new ifc.FlowFitting(...)</para><para>new ifc.FlowMovingDevice(...)</para><para>new ifc.FlowSegment(...)</para><para>new ifc.FlowStorageDevice(...)</para><para>new ifc.FlowTerminal(...)</para><para>new ifc.FlowTreatmentDevice(...)</para><para>new ifc.ElementAssembly(...)</para><para>new ifc.FurnishingElement(...)</para><para>new ifc.TransportElement(...)</para><para>new ifc.VirtualElement(...)</para><para>new ifc.ElectricalElement(...)</para><para>new ifc.EquipmentElement(...)</para></param>
/// <param name="RelatedFeatureElement"><para>new ifc.ProjectionElement(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelProjectsElement(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Element RelatingElement,FeatureElementAddition RelatedFeatureElement,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatingElement=RelatingElement;this.RelatedFeatureElement=RelatedFeatureElement;this.EndOfLineComment=EndOfLineComment;}
public               RelProjectsElement(Element RelatingElement,FeatureElementAddition RelatedFeatureElement,string EndOfLineComment=null):base(){AddNext();this.RelatingElement=RelatingElement;this.RelatedFeatureElement=RelatedFeatureElement;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public Element RelatingElement; //ENTITY
[ifc(6)] public FeatureElementAddition RelatedFeatureElement; //ENTITY
public override void AssignInverseElements(){if (RelatingElement!=null) {if (RelatingElement.HasProjections==null) RelatingElement.HasProjections=new LIST<RelProjectsElement>();RelatingElement.HasProjections.Add(this);}
                                             if (RelatedFeatureElement!=null) RelatedFeatureElement.ProjectsElements=this;
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifcrelreferencedinspatialstructure.htm
[ifcSql(TypeGroupId:5,TypeId:1036,TableId:3)] public partial class RelReferencedInSpatialStructure:RelConnects{//=====================================================
public               RelReferencedInSpatialStructure():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatedElements"><para>Set1toUnbounded_Product</para></param>
/// <param name="RelatingStructure"><para>new ifc.ExternalSpatialElement(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelReferencedInSpatialStructure(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Set1toUnbounded_Product RelatedElements,SpatialElement RelatingStructure,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatedElements=RelatedElements;this.RelatingStructure=RelatingStructure;this.EndOfLineComment=EndOfLineComment;}
public               RelReferencedInSpatialStructure(Set1toUnbounded_Product RelatedElements,SpatialElement RelatingStructure,string EndOfLineComment=null):base(){AddNext();this.RelatedElements=RelatedElements;this.RelatingStructure=RelatingStructure;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public Set1toUnbounded_Product RelatedElements; //ListType1d
[ifc(6)] public SpatialElement RelatingStructure; //ENTITY
public override void AssignInverseElements(){if (RelatedElements!=null) foreach (Product __Product in RelatedElements) if (__Product is Element) {if (((Element)__Product).ReferencedInStructures==null) ((Element)__Product).ReferencedInStructures=new LIST<RelReferencedInSpatialStructure>();((Element)__Product).ReferencedInStructures.Add(this);}
                                             if (RelatingStructure!=null) {if (RelatingStructure.ReferencesElements==null) RelatingStructure.ReferencesElements=new LIST<RelReferencedInSpatialStructure>();RelatingStructure.ReferencesElements.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcprocessextension/lexical/ifcrelsequence.htm
[ifcSql(TypeGroupId:5,TypeId:1037,TableId:3)] public partial class RelSequence:RelConnects{//=========================================================================
public               RelSequence():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatingProcess"><para>new ifc.Procedure(...)</para><para>new ifc.Task(...)</para></param>
/// <param name="RelatedProcess"><para>new ifc.Procedure(...)</para><para>new ifc.Task(...)</para></param>
/// <param name="TimeLag">[optional]<para>new ifc.LagTime(...)</para></param>
/// <param name="SequenceType">[optional]<para>SequenceEnum</para></param>
/// <param name="UserDefinedSequenceType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelSequence(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Process RelatingProcess,Process RelatedProcess,LagTime TimeLag=null,SequenceEnum? SequenceType=null,Label UserDefinedSequenceType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatingProcess=RelatingProcess;this.RelatedProcess=RelatedProcess;this.TimeLag=TimeLag;this.SequenceType=SequenceType;this.UserDefinedSequenceType=UserDefinedSequenceType;this.EndOfLineComment=EndOfLineComment;}
public               RelSequence(Process RelatingProcess,Process RelatedProcess,string EndOfLineComment=null):base(){AddNext();this.RelatingProcess=RelatingProcess;this.RelatedProcess=RelatedProcess;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public Process RelatingProcess; //ENTITY
[ifc(6)] public Process RelatedProcess; //ENTITY
[ifc(7,optional=true)] public LagTime TimeLag; //ENTITY
[ifc(8,optional=true)] public SequenceEnum? SequenceType; //ENUM
[ifc(9,optional=true)] public Label UserDefinedSequenceType; //TYPE
public override void AssignInverseElements(){if (RelatingProcess!=null) {if (RelatingProcess.IsPredecessorTo==null) RelatingProcess.IsPredecessorTo=new LIST<RelSequence>();RelatingProcess.IsPredecessorTo.Add(this);}
                                             if (RelatedProcess!=null) {if (RelatedProcess.IsSuccessorFrom==null) RelatedProcess.IsSuccessorFrom=new LIST<RelSequence>();RelatedProcess.IsSuccessorFrom.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifcrelservicesbuildings.htm
[ifcSql(TypeGroupId:5,TypeId:1038,TableId:3)] public partial class RelServicesBuildings:RelConnects{//================================================================
public               RelServicesBuildings():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatingSystem"><para>new ifc.System(...)</para><para>new ifc.StructuralAnalysisModel(...)</para><para>new ifc.Zone(...)</para><para>new ifc.ElectricalCircuit(...)</para></param>
/// <param name="RelatedBuildings"><para>Set1toUnbounded_SpatialElement</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelServicesBuildings(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,System RelatingSystem,Set1toUnbounded_SpatialElement RelatedBuildings,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatingSystem=RelatingSystem;this.RelatedBuildings=RelatedBuildings;this.EndOfLineComment=EndOfLineComment;}
public               RelServicesBuildings(System RelatingSystem,Set1toUnbounded_SpatialElement RelatedBuildings,string EndOfLineComment=null):base(){AddNext();this.RelatingSystem=RelatingSystem;this.RelatedBuildings=RelatedBuildings;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public System RelatingSystem; //ENTITY
[ifc(6)] public Set1toUnbounded_SpatialElement RelatedBuildings; //ListType1d
public override void AssignInverseElements(){if (RelatedBuildings!=null) foreach (SpatialElement __SpatialElement in RelatedBuildings) if (__SpatialElement is SpatialElement) {if (((SpatialElement)__SpatialElement).ServicedBySystems==null) ((SpatialElement)__SpatialElement).ServicedBySystems=new LIST<RelServicesBuildings>();((SpatialElement)__SpatialElement).ServicedBySystems.Add(this);}
                                             if (RelatingSystem!=null) RelatingSystem.ServicesBuildings=this;
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifcrelspaceboundary.htm
[ifcSql(TypeGroupId:5,TypeId:1039,TableId:3)] public partial class RelSpaceBoundary:RelConnects{//====================================================================
public               RelSpaceBoundary():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatingSpace"><para>new ifc.SpaceBoundarySelect(new ExternalSpatialElement(...))...</para><para>new ifc.SpaceBoundarySelect(new Space(...))...</para></param>
/// <param name="RelatedBuildingElement"><para>new ifc.Beam(...)</para><para>new ifc.BuildingElementProxy(...)</para><para>new ifc.Column(...)</para><para>new ifc.Covering(...)</para><para>new ifc.CurtainWall(...)</para><para>new ifc.Door(...)</para><para>new ifc.Footing(...)</para><para>new ifc.Member(...)</para><para>new ifc.Pile(...)</para><para>new ifc.Plate(...)</para><para>new ifc.Railing(...)</para><para>new ifc.Ramp(...)</para><para>new ifc.RampFlight(...)</para><para>new ifc.Roof(...)</para><para>new ifc.Slab(...)</para><para>new ifc.Stair(...)</para><para>new ifc.StairFlight(...)</para><para>new ifc.Wall(...)</para><para>new ifc.Window(...)</para><para>new ifc.DistributionElement(...)</para><para>new ifc.DistributionControlElement(...)</para><para>new ifc.Sensor(...)</para><para>new ifc.DistributionFlowElement(...)</para><para>new ifc.DistributionChamberElement(...)</para><para>new ifc.EnergyConversionDevice(...)</para><para>new ifc.FlowController(...)</para><para>new ifc.FlowFitting(...)</para><para>new ifc.FlowMovingDevice(...)</para><para>new ifc.FlowSegment(...)</para><para>new ifc.FlowStorageDevice(...)</para><para>new ifc.FlowTerminal(...)</para><para>new ifc.FlowTreatmentDevice(...)</para><para>new ifc.ElementAssembly(...)</para><para>new ifc.FurnishingElement(...)</para><para>new ifc.TransportElement(...)</para><para>new ifc.VirtualElement(...)</para><para>new ifc.ElectricalElement(...)</para><para>new ifc.EquipmentElement(...)</para></param>
/// <param name="_ConnectionGeometry">[optional]<para>new ifc.ConnectionCurveGeometry(...)</para><para>new ifc.ConnectionPointGeometry(...)</para><para>new ifc.ConnectionSurfaceGeometry(...)</para><para>new ifc.ConnectionPortGeometry(...)</para></param>
/// <param name="PhysicalOrVirtualBoundary"><para>PhysicalOrVirtualEnum</para></param>
/// <param name="InternalOrExternalBoundary"><para>InternalOrExternalEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelSpaceBoundary(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,SpaceBoundarySelect RelatingSpace,Element RelatedBuildingElement,ConnectionGeometry _ConnectionGeometry,PhysicalOrVirtualEnum PhysicalOrVirtualBoundary,InternalOrExternalEnum InternalOrExternalBoundary,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatingSpace=RelatingSpace;this.RelatedBuildingElement=RelatedBuildingElement;this._ConnectionGeometry=_ConnectionGeometry;this.PhysicalOrVirtualBoundary=PhysicalOrVirtualBoundary;this.InternalOrExternalBoundary=InternalOrExternalBoundary;this.EndOfLineComment=EndOfLineComment;}
public               RelSpaceBoundary(SpaceBoundarySelect RelatingSpace,Element RelatedBuildingElement,PhysicalOrVirtualEnum PhysicalOrVirtualBoundary,InternalOrExternalEnum InternalOrExternalBoundary,string EndOfLineComment=null):base(){AddNext();this.RelatingSpace=RelatingSpace;this.RelatedBuildingElement=RelatedBuildingElement;this.PhysicalOrVirtualBoundary=PhysicalOrVirtualBoundary;this.InternalOrExternalBoundary=InternalOrExternalBoundary;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public SpaceBoundarySelect RelatingSpace; //SELECT
[ifc(6)] public Element RelatedBuildingElement; //ENTITY
[ifc(7,optional=true)] public ConnectionGeometry _ConnectionGeometry; //ENTITY
[ifc(8)] public PhysicalOrVirtualEnum PhysicalOrVirtualBoundary; //ENUM
[ifc(9)] public InternalOrExternalEnum InternalOrExternalBoundary; //ENUM
public override void AssignInverseElements(){if (RelatedBuildingElement!=null) {if (RelatedBuildingElement.ProvidesBoundaries==null) RelatedBuildingElement.ProvidesBoundaries=new LIST<RelSpaceBoundary>();RelatedBuildingElement.ProvidesBoundaries.Add(this);}
                                             if (RelatingSpace!=null) if (RelatingSpace.SelectType()==typeof(ExternalSpatialElement))  {if (((ExternalSpatialElement)RelatingSpace).BoundedBy==null) ((ExternalSpatialElement)RelatingSpace).BoundedBy=new LIST<RelSpaceBoundary>();((ExternalSpatialElement)RelatingSpace).BoundedBy.Add(this);}
                                             if (RelatingSpace!=null) if (RelatingSpace.SelectType()==typeof(Space))  {if (((Space)RelatingSpace).BoundedBy==null) ((Space)RelatingSpace).BoundedBy=new LIST<RelSpaceBoundary>();((Space)RelatingSpace).BoundedBy.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifcrelvoidselement.htm
[ifcSql(TypeGroupId:5,TypeId:1042,TableId:3)] public partial class RelVoidsElement:RelDecomposes{//===================================================================
public               RelVoidsElement():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatingBuildingElement"><para>new ifc.Beam(...)</para><para>new ifc.BuildingElementProxy(...)</para><para>new ifc.Column(...)</para><para>new ifc.Covering(...)</para><para>new ifc.CurtainWall(...)</para><para>new ifc.Door(...)</para><para>new ifc.Footing(...)</para><para>new ifc.Member(...)</para><para>new ifc.Pile(...)</para><para>new ifc.Plate(...)</para><para>new ifc.Railing(...)</para><para>new ifc.Ramp(...)</para><para>new ifc.RampFlight(...)</para><para>new ifc.Roof(...)</para><para>new ifc.Slab(...)</para><para>new ifc.Stair(...)</para><para>new ifc.StairFlight(...)</para><para>new ifc.Wall(...)</para><para>new ifc.Window(...)</para><para>new ifc.DistributionElement(...)</para><para>new ifc.DistributionControlElement(...)</para><para>new ifc.Sensor(...)</para><para>new ifc.DistributionFlowElement(...)</para><para>new ifc.DistributionChamberElement(...)</para><para>new ifc.EnergyConversionDevice(...)</para><para>new ifc.FlowController(...)</para><para>new ifc.FlowFitting(...)</para><para>new ifc.FlowMovingDevice(...)</para><para>new ifc.FlowSegment(...)</para><para>new ifc.FlowStorageDevice(...)</para><para>new ifc.FlowTerminal(...)</para><para>new ifc.FlowTreatmentDevice(...)</para><para>new ifc.ElementAssembly(...)</para><para>new ifc.FurnishingElement(...)</para><para>new ifc.TransportElement(...)</para><para>new ifc.VirtualElement(...)</para><para>new ifc.ElectricalElement(...)</para><para>new ifc.EquipmentElement(...)</para></param>
/// <param name="RelatedOpeningElement"><para>new ifc.OpeningElement(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelVoidsElement(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Element RelatingBuildingElement,FeatureElementSubtraction RelatedOpeningElement,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatingBuildingElement=RelatingBuildingElement;this.RelatedOpeningElement=RelatedOpeningElement;this.EndOfLineComment=EndOfLineComment;}
public               RelVoidsElement(Element RelatingBuildingElement,FeatureElementSubtraction RelatedOpeningElement,string EndOfLineComment=null):base(){AddNext();this.RelatingBuildingElement=RelatingBuildingElement;this.RelatedOpeningElement=RelatedOpeningElement;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public Element RelatingBuildingElement; //ENTITY
[ifc(6)] public FeatureElementSubtraction RelatedOpeningElement; //ENTITY
public override void AssignInverseElements(){if (RelatingBuildingElement!=null) {if (RelatingBuildingElement.HasOpenings==null) RelatingBuildingElement.HasOpenings=new LIST<RelVoidsElement>();RelatingBuildingElement.HasOpenings.Add(this);}
                                             if (RelatedOpeningElement!=null) RelatedOpeningElement.VoidsElements=this;
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.RelAssigns(...)</para><para>new ifc.RelAssignsToActor(...)</para><para>new ifc.RelOccupiesSpaces(...)</para><para>new ifc.RelAssignsToControl(...)</para><para>new ifc.RelAssignsTasks(...)</para><para>new ifc.RelAssignsToProjectOrder(...)</para><para>new ifc.RelSchedulesCostItems(...)</para><para>new ifc.RelAssignsToGroup(...)</para><para>new ifc.RelAssignsToProcess(...)</para><para>new ifc.RelAssignsToProduct(...)</para><para>new ifc.RelAssignsToResource(...)</para><para>new ifc.RelAssociates(...)</para><para>new ifc.RelAssociatesApproval(...)</para><para>new ifc.RelAssociatesClassification(...)</para><para>new ifc.RelAssociatesConstraint(...)</para><para>new ifc.RelAssociatesDocument(...)</para><para>new ifc.RelAssociatesLibrary(...)</para><para>new ifc.RelAssociatesMaterial(...)</para><para>new ifc.RelAssociatesAppliedValue(...)</para><para>new ifc.RelAssociatesProfileProperties(...)</para><para>new ifc.RelConnects(...)</para><para>new ifc.RelConnectsElements(...)</para><para>new ifc.RelConnectsPathElements(...)</para><para>new ifc.RelConnectsWithRealizingElements(...)</para><para>new ifc.RelConnectsPortToElement(...)</para><para>new ifc.RelConnectsPorts(...)</para><para>new ifc.RelConnectsStructuralActivity(...)</para><para>new ifc.RelConnectsStructuralMember(...)</para><para>new ifc.RelConnectsWithEccentricity(...)</para><para>new ifc.RelContainedInSpatialStructure(...)</para><para>new ifc.RelCoversBldgElements(...)</para><para>new ifc.RelCoversSpaces(...)</para><para>new ifc.RelFillsElement(...)</para><para>new ifc.RelFlowControlElements(...)</para><para>new ifc.RelInterferesElements(...)</para><para>new ifc.RelReferencedInSpatialStructure(...)</para><para>new ifc.RelSequence(...)</para><para>new ifc.RelServicesBuildings(...)</para><para>new ifc.RelSpaceBoundary(...)</para><para>new ifc.RelConnectsStructuralElement(...)</para><para>new ifc.RelInteractionRequirements(...)</para><para>new ifc.RelDeclares(...)</para><para>new ifc.RelDecomposes(...)</para><para>new ifc.RelAggregates(...)</para><para>new ifc.RelNests(...)</para><para>new ifc.RelProjectsElement(...)</para><para>new ifc.RelVoidsElement(...)</para><para>new ifc.RelDefines(...)</para><para>new ifc.RelDefinesByObject(...)</para><para>new ifc.RelDefinesByProperties(...)</para><para>new ifc.RelOverridesProperties(...)</para><para>new ifc.RelDefinesByTemplate(...)</para><para>new ifc.RelDefinesByType(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1043,TableId:3)] public partial class Relationship:Root{//===============================================================================
public               Relationship():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ShapeModel(...)</para><para>new ifc.StyleModel(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1045,TableId:3)] public partial class Representation:ENTITY{//===========================================================================
public               Representation():base(){}// abstract
[ifc(1)] public RepresentationContext ContextOfItems; //ENTITY
[ifc(2,optional=true)] public Label RepresentationIdentifier; //TYPE
[ifc(3,optional=true)] public Label RepresentationType; //TYPE
[ifc(4)] public Set1toUnbounded_RepresentationItem Items; //ListType1d
/// <summary>INVERSE: LayerAssignments of PresentationLayerAssignment for AssignedItems</summary>
[ifcInverse(For:"AssignedItems")] public LIST<PresentationLayerAssignment> LayerAssignments;
/// <summary>INVERSE: OfProductRepresentation of ProductRepresentation for Representations</summary>
[ifcInverse(For:"Representations")] public LIST<ProductRepresentation> OfProductRepresentation;
/// <summary>INVERSE: RepresentationMap of RepresentationMap for MappedRepresentation</summary>
[ifcInverse(For:"MappedRepresentation")] public RepresentationMap RepresentationMap;
public override void AssignInverseElements(){if (ContextOfItems!=null) {if (ContextOfItems.RepresentationsInContext==null) ContextOfItems.RepresentationsInContext=new LIST<Representation>();ContextOfItems.RepresentationsInContext.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.GeometricRepresentationContext(...)</para><para>new ifc.GeometricRepresentationSubContext(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1046,TableId:3)] public partial class RepresentationContext:ENTITY{//====================================================================
public               RepresentationContext():base(){}// abstract
[ifc(1,optional=true)] public Label ContextIdentifier; //TYPE
[ifc(2,optional=true)] public Label ContextType; //TYPE
/// <summary>INVERSE: RepresentationsInContext of Representation for ContextOfItems</summary>
[ifcInverse(For:"ContextOfItems")] public LIST<Representation> RepresentationsInContext;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.GeometricRepresentationItem(...)</para><para>new ifc.AnnotationFillArea(...)</para><para>new ifc.BooleanResult(...)</para><para>new ifc.BooleanClippingResult(...)</para><para>new ifc.BoundingBox(...)</para><para>new ifc.CartesianPointList(...)</para><para>new ifc.CartesianPointList3D(...)</para><para>new ifc.CartesianTransformationOperator(...)</para><para>new ifc.CartesianTransformationOperator2D(...)</para><para>new ifc.CartesianTransformationOperator2DnonUniform(...)</para><para>new ifc.CartesianTransformationOperator3D(...)</para><para>new ifc.CartesianTransformationOperator3DnonUniform(...)</para><para>new ifc.CompositeCurveSegment(...)</para><para>new ifc.CsgPrimitive3D(...)</para><para>new ifc.Block(...)</para><para>new ifc.RectangularPyramid(...)</para><para>new ifc.RightCircularCone(...)</para><para>new ifc.RightCircularCylinder(...)</para><para>new ifc.Sphere(...)</para><para>new ifc.Curve(...)</para><para>new ifc.BoundedCurve(...)</para><para>new ifc.BSplineCurve(...)</para><para>new ifc.BezierCurve(...)</para><para>new ifc.CompositeCurve(...)</para><para>new ifc.CompositeCurveOnSurface(...)</para><para>new ifc.BoundaryCurve(...)</para><para>new ifc.2DCompositeCurve(...)</para><para>new ifc.CurveSegment2D(...)</para><para>new ifc.Polyline(...)</para><para>new ifc.TrimmedCurve(...)</para><para>new ifc.Conic(...)</para><para>new ifc.Circle(...)</para><para>new ifc.Ellipse(...)</para><para>new ifc.Line(...)</para><para>new ifc.OffsetCurve2D(...)</para><para>new ifc.OffsetCurve3D(...)</para><para>new ifc.Direction(...)</para><para>new ifc.FaceBasedSurfaceModel(...)</para><para>new ifc.FillAreaStyleHatching(...)</para><para>new ifc.FillAreaStyleTiles(...)</para><para>new ifc.GeometricSet(...)</para><para>new ifc.GeometricCurveSet(...)</para><para>new ifc.HalfSpaceSolid(...)</para><para>new ifc.BoxedHalfSpace(...)</para><para>new ifc.PolygonalBoundedHalfSpace(...)</para><para>new ifc.LightSource(...)</para><para>new ifc.LightSourceAmbient(...)</para><para>new ifc.LightSourceDirectional(...)</para><para>new ifc.LightSourceGoniometric(...)</para><para>new ifc.LightSourcePositional(...)</para><para>new ifc.LightSourceSpot(...)</para><para>new ifc.Placement(...)</para><para>new ifc.Axis1Placement(...)</para><para>new ifc.Axis2Placement2D(...)</para><para>new ifc.Axis2Placement3D(...)</para><para>new ifc.PlanarExtent(...)</para><para>new ifc.PlanarBox(...)</para><para>new ifc.Point(...)</para><para>new ifc.CartesianPoint(...)</para><para>new ifc.PointOnCurve(...)</para><para>new ifc.PointOnSurface(...)</para><para>new ifc.SectionedSpine(...)</para><para>new ifc.ShellBasedSurfaceModel(...)</para><para>new ifc.SolidModel(...)</para><para>new ifc.Surface(...)</para><para>new ifc.TessellatedItem(...)</para><para>new ifc.TextLiteral(...)</para><para>new ifc.Vector(...)</para><para>new ifc.AnnotationSurface(...)</para><para>new ifc.DefinedSymbol(...)</para><para>new ifc.DraughtingCallout(...)</para><para>new ifc.FillAreaStyleTileSymbolWithStyle(...)</para><para>new ifc.OneDirectionRepeatFactor(...)</para><para>new ifc.MappedItem(...)</para><para>new ifc.StyledItem(...)</para><para>new ifc.TopologicalRepresentationItem(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1047,TableId:3)] public partial class RepresentationItem:ENTITY{//=======================================================================
public               RepresentationItem():base(){}// abstract
/// <summary>INVERSE: LayerAssignment of PresentationLayerAssignment for AssignedItems</summary>
[ifcInverse(For:"AssignedItems")] public PresentationLayerAssignment LayerAssignment;
/// <summary>INVERSE: StyledByItem of StyledItem for Item</summary>
[ifcInverse(For:"Item")] public StyledItem StyledByItem;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometryresource/lexical/ifcrepresentationmap.htm
[ifcSql(TypeGroupId:5,TypeId:1048,TableId:3)] public partial class RepresentationMap:ENTITY{//========================================================================
public               RepresentationMap():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="MappingOrigin"><para>new ifc.Axis2Placement(new Axis2Placement2D(...))...</para><para>new ifc.Axis2Placement(new Axis2Placement3D(...))...</para></param>
/// <param name="MappedRepresentation"></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RepresentationMap(Axis2Placement MappingOrigin,Representation MappedRepresentation,string EndOfLineComment=null):base(){AddNext();this.MappingOrigin=MappingOrigin;this.MappedRepresentation=MappedRepresentation;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Axis2Placement MappingOrigin; //SELECT
[ifc(2)] public Representation MappedRepresentation; //ENTITY
/// <summary>INVERSE: MapUsage of MappedItem for MappingSource</summary>
[ifcInverse(For:"MappingSource")] public LIST<MappedItem> MapUsage;
/// <summary>INVERSE: HasShapeAspects of ShapeAspect for PartOfProductDefinitionShape</summary>
[ifcInverse(For:"PartOfProductDefinitionShape")] public LIST<ShapeAspect> HasShapeAspects;
public override void AssignInverseElements(){if (MappedRepresentation!=null) MappedRepresentation.RepresentationMap=this;
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ConstructionResource(...)</para><para>new ifc.ConstructionEquipmentResource(...)</para><para>new ifc.ConstructionMaterialResource(...)</para><para>new ifc.ConstructionProductResource(...)</para><para>new ifc.CrewResource(...)</para><para>new ifc.LaborResource(...)</para><para>new ifc.SubContractResource(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1049,TableId:3)] public partial class Resource:Object{//=================================================================================
public               Resource():base(){}// abstract
[ifc(6,optional=true)] public Identifier Identification; //TYPE
[ifc(7,optional=true)] public Text LongDescription; //TYPE
/// <summary>INVERSE: ResourceOf of RelAssignsToResource for RelatingResource</summary>
[ifcInverse(For:"RelatingResource")] public LIST<RelAssignsToResource> ResourceOf;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcapprovalresource/lexical/ifcresourceapprovalrelationship.htm
[ifcSql(TypeGroupId:5,TypeId:1050,TableId:3)] public partial class ResourceApprovalRelationship:ResourceLevelRelationship{//==========================================
public               ResourceApprovalRelationship():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatedResourceObjects"><para>Set1toUnbounded_ResourceObjectSelect</para></param>
/// <param name="RelatingApproval"><para>new ifc.Approval(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ResourceApprovalRelationship(Label Name,Text Description,Set1toUnbounded_ResourceObjectSelect RelatedResourceObjects,Approval RelatingApproval,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.RelatedResourceObjects=RelatedResourceObjects;this.RelatingApproval=RelatingApproval;this.EndOfLineComment=EndOfLineComment;}
public               ResourceApprovalRelationship(Set1toUnbounded_ResourceObjectSelect RelatedResourceObjects,Approval RelatingApproval,string EndOfLineComment=null):base(){AddNext();this.RelatedResourceObjects=RelatedResourceObjects;this.RelatingApproval=RelatingApproval;this.EndOfLineComment=EndOfLineComment;}
[ifc(3)] public Set1toUnbounded_ResourceObjectSelect RelatedResourceObjects; //ListType1d
[ifc(4)] public Approval RelatingApproval; //ENTITY
public override void AssignInverseElements(){if (RelatingApproval!=null) {if (RelatingApproval.ApprovedResources==null) RelatingApproval.ApprovedResources=new LIST<ResourceApprovalRelationship>();RelatingApproval.ApprovedResources.Add(this);}
                                             if (RelatedResourceObjects!=null) foreach (ResourceObjectSelect __ResourceObjectSelect in RelatedResourceObjects) if (__ResourceObjectSelect.SelectType()==typeof(Property)) {if (((Property)__ResourceObjectSelect).HasApprovals==null) ((Property)__ResourceObjectSelect).HasApprovals=new LIST<ResourceApprovalRelationship>();((Property)__ResourceObjectSelect).HasApprovals.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcconstraintresource/lexical/ifcresourceconstraintrelationship.htm
[ifcSql(TypeGroupId:5,TypeId:1051,TableId:3)] public partial class ResourceConstraintRelationship:ResourceLevelRelationship{//========================================
public               ResourceConstraintRelationship():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="RelatingConstraint"><para>new ifc.Metric(...)</para><para>new ifc.Objective(...)</para></param>
/// <param name="RelatedResourceObjects"><para>Set1toUnbounded_ResourceObjectSelect</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ResourceConstraintRelationship(Label Name,Text Description,Constraint RelatingConstraint,Set1toUnbounded_ResourceObjectSelect RelatedResourceObjects,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.RelatingConstraint=RelatingConstraint;this.RelatedResourceObjects=RelatedResourceObjects;this.EndOfLineComment=EndOfLineComment;}
public               ResourceConstraintRelationship(Constraint RelatingConstraint,Set1toUnbounded_ResourceObjectSelect RelatedResourceObjects,string EndOfLineComment=null):base(){AddNext();this.RelatingConstraint=RelatingConstraint;this.RelatedResourceObjects=RelatedResourceObjects;this.EndOfLineComment=EndOfLineComment;}
[ifc(3)] public Constraint RelatingConstraint; //ENTITY
[ifc(4)] public Set1toUnbounded_ResourceObjectSelect RelatedResourceObjects; //ListType1d
public override void AssignInverseElements(){if (RelatingConstraint!=null) {if (RelatingConstraint.PropertiesForConstraint==null) RelatingConstraint.PropertiesForConstraint=new LIST<ResourceConstraintRelationship>();RelatingConstraint.PropertiesForConstraint.Add(this);}
                                             if (RelatedResourceObjects!=null) foreach (ResourceObjectSelect __ResourceObjectSelect in RelatedResourceObjects) if (__ResourceObjectSelect.SelectType()==typeof(Property)) {if (((Property)__ResourceObjectSelect).HasConstraints==null) ((Property)__ResourceObjectSelect).HasConstraints=new LIST<ResourceConstraintRelationship>();((Property)__ResourceObjectSelect).HasConstraints.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ApprovalRelationship(...)</para><para>new ifc.CurrencyRelationship(...)</para><para>new ifc.DocumentInformationRelationship(...)</para><para>new ifc.ExternalReferenceRelationship(...)</para><para>new ifc.MaterialRelationship(...)</para><para>new ifc.OrganizationRelationship(...)</para><para>new ifc.PropertyDependencyRelationship(...)</para><para>new ifc.ResourceApprovalRelationship(...)</para><para>new ifc.ResourceConstraintRelationship(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1052,TableId:3)] public partial class ResourceLevelRelationship:ENTITY{//================================================================
public               ResourceLevelRelationship():base(){}// abstract
[ifc(1,optional=true)] public Label Name; //TYPE
[ifc(2,optional=true)] public Text Description; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcdatetimeresource/lexical/ifcresourcetime.htm
[ifcSql(TypeGroupId:5,TypeId:1053,TableId:3)] public partial class ResourceTime:SchedulingTime{//=====================================================================
public               ResourceTime():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="DataOrigin">[optional]<para>DataOriginEnum</para></param>
/// <param name="UserDefinedDataOrigin">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="ScheduleWork">[optional]<para>cast to (ifc.Duration)...</para></param>
/// <param name="ScheduleUsage">[optional]<para>cast to (ifc.PositiveRatioMeasure)...</para></param>
/// <param name="ScheduleStart">[optional]<para>cast to (ifc.DateTime)...</para></param>
/// <param name="ScheduleFinish">[optional]<para>cast to (ifc.DateTime)...</para></param>
/// <param name="ScheduleContour">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="LevelingDelay">[optional]<para>cast to (ifc.Duration)...</para></param>
/// <param name="IsOverAllocated">[optional]<para>cast to (ifc.Boolean)...</para></param>
/// <param name="StatusTime">[optional]<para>cast to (ifc.DateTime)...</para></param>
/// <param name="ActualWork">[optional]<para>cast to (ifc.Duration)...</para></param>
/// <param name="ActualUsage">[optional]<para>cast to (ifc.PositiveRatioMeasure)...</para></param>
/// <param name="ActualStart">[optional]<para>cast to (ifc.DateTime)...</para></param>
/// <param name="ActualFinish">[optional]<para>cast to (ifc.DateTime)...</para></param>
/// <param name="RemainingWork">[optional]<para>cast to (ifc.Duration)...</para></param>
/// <param name="RemainingUsage">[optional]<para>cast to (ifc.PositiveRatioMeasure)...</para></param>
/// <param name="Completion">[optional]<para>cast to (ifc.PositiveRatioMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ResourceTime(Label Name=null,DataOriginEnum? DataOrigin=null,Label UserDefinedDataOrigin=null,Duration ScheduleWork=null,PositiveRatioMeasure ScheduleUsage=null,DateTime ScheduleStart=null,DateTime ScheduleFinish=null,Label ScheduleContour=null,Duration LevelingDelay=null,Boolean IsOverAllocated=null,DateTime StatusTime=null,Duration ActualWork=null,PositiveRatioMeasure ActualUsage=null,DateTime ActualStart=null,DateTime ActualFinish=null,Duration RemainingWork=null,PositiveRatioMeasure RemainingUsage=null,PositiveRatioMeasure Completion=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.DataOrigin=DataOrigin;this.UserDefinedDataOrigin=UserDefinedDataOrigin;this.ScheduleWork=ScheduleWork;this.ScheduleUsage=ScheduleUsage;this.ScheduleStart=ScheduleStart;this.ScheduleFinish=ScheduleFinish;this.ScheduleContour=ScheduleContour;this.LevelingDelay=LevelingDelay;this.IsOverAllocated=IsOverAllocated;this.StatusTime=StatusTime;this.ActualWork=ActualWork;this.ActualUsage=ActualUsage;this.ActualStart=ActualStart;this.ActualFinish=ActualFinish;this.RemainingWork=RemainingWork;this.RemainingUsage=RemainingUsage;this.Completion=Completion;this.EndOfLineComment=EndOfLineComment;}
[ifc(4,optional=true)] public Duration ScheduleWork; //TYPE
[ifc(5,optional=true)] public PositiveRatioMeasure ScheduleUsage; //TYPE
[ifc(6,optional=true)] public DateTime ScheduleStart; //TYPE
[ifc(7,optional=true)] public DateTime ScheduleFinish; //TYPE
[ifc(8,optional=true)] public Label ScheduleContour; //TYPE
[ifc(9,optional=true)] public Duration LevelingDelay; //TYPE
[ifc(10,optional=true)] public Boolean IsOverAllocated; //TYPE
[ifc(11,optional=true)] public DateTime StatusTime; //TYPE
[ifc(12,optional=true)] public Duration ActualWork; //TYPE
[ifc(13,optional=true)] public PositiveRatioMeasure ActualUsage; //TYPE
[ifc(14,optional=true)] public DateTime ActualStart; //TYPE
[ifc(15,optional=true)] public DateTime ActualFinish; //TYPE
[ifc(16,optional=true)] public Duration RemainingWork; //TYPE
[ifc(17,optional=true)] public PositiveRatioMeasure RemainingUsage; //TYPE
[ifc(18,optional=true)] public PositiveRatioMeasure Completion; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricmodelresource/lexical/ifcrevolvedareasolid.htm
[ifcSql(TypeGroupId:5,TypeId:1054,TableId:3)] public partial class RevolvedAreaSolid:SweptAreaSolid{//================================================================
public               RevolvedAreaSolid():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="SweptArea"><para>new ifc.ProfileDef(...)</para><para>new ifc.ArbitraryClosedProfileDef(...)</para><para>new ifc.ArbitraryProfileDefWithVoids(...)</para><para>new ifc.ArbitraryOpenProfileDef(...)</para><para>new ifc.CenterLineProfileDef(...)</para><para>new ifc.CompositeProfileDef(...)</para><para>new ifc.DerivedProfileDef(...)</para><para>new ifc.AsymmetricIShapeProfileDef(...)</para><para>new ifc.CShapeProfileDef(...)</para><para>new ifc.CircleProfileDef(...)</para><para>new ifc.CircleHollowProfileDef(...)</para><para>new ifc.EllipseProfileDef(...)</para><para>new ifc.IShapeProfileDef(...)</para><para>new ifc.LShapeProfileDef(...)</para><para>new ifc.RectangleProfileDef(...)</para><para>new ifc.TShapeProfileDef(...)</para><para>new ifc.TrapeziumProfileDef(...)</para><para>new ifc.UShapeProfileDef(...)</para><para>new ifc.ZShapeProfileDef(...)</para><para>new ifc.CraneRailAShapeProfileDef(...)</para><para>new ifc.CraneRailFShapeProfileDef(...)</para></param>
/// <param name="Position">[optional]<para>new ifc.Axis2Placement3D(...)</para></param>
/// <param name="Axis"><para>new ifc.Axis1Placement(...)</para></param>
/// <param name="Angle"><para>cast to (ifc.PlaneAngleMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RevolvedAreaSolid(ProfileDef SweptArea,Axis2Placement3D Position,Axis1Placement Axis,PlaneAngleMeasure Angle,string EndOfLineComment=null):base(){AddNext();this.SweptArea=SweptArea;this.Position=Position;this.Axis=Axis;this.Angle=Angle;this.EndOfLineComment=EndOfLineComment;}
public               RevolvedAreaSolid(ProfileDef SweptArea,Axis1Placement Axis,PlaneAngleMeasure Angle):base(){AddNext();this.SweptArea=SweptArea;this.Axis=Axis;this.Angle=Angle;}
[ifc(3)] public Axis1Placement Axis; //ENTITY
[ifc(4)] public PlaneAngleMeasure Angle; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricmodelresource/lexical/ifcrightcircularcone.htm
[ifcSql(TypeGroupId:5,TypeId:1056,TableId:3)] public partial class RightCircularCone:CsgPrimitive3D{//================================================================
public               RightCircularCone():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Position"><para>new ifc.Axis2Placement3D(...)</para></param>
/// <param name="Height"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="BottomRadius"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RightCircularCone(Axis2Placement3D Position,PositiveLengthMeasure Height,PositiveLengthMeasure BottomRadius,string EndOfLineComment=null):base(){AddNext();this.Position=Position;this.Height=Height;this.BottomRadius=BottomRadius;this.EndOfLineComment=EndOfLineComment;}
[ifc(2)] public PositiveLengthMeasure Height; //TYPE
[ifc(3)] public PositiveLengthMeasure BottomRadius; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricmodelresource/lexical/ifcrightcircularcylinder.htm
[ifcSql(TypeGroupId:5,TypeId:1057,TableId:3)] public partial class RightCircularCylinder:CsgPrimitive3D{//============================================================
public               RightCircularCylinder():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Position"><para>new ifc.Axis2Placement3D(...)</para></param>
/// <param name="Height"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="Radius"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RightCircularCylinder(Axis2Placement3D Position,PositiveLengthMeasure Height,PositiveLengthMeasure Radius,string EndOfLineComment=null):base(){AddNext();this.Position=Position;this.Height=Height;this.Radius=Radius;this.EndOfLineComment=EndOfLineComment;}
[ifc(2)] public PositiveLengthMeasure Height; //TYPE
[ifc(3)] public PositiveLengthMeasure Radius; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifcroof.htm
[ifcSql(TypeGroupId:5,TypeId:1058,TableId:3)] public partial class Roof:BuildingElement{//============================================================================
public               Roof():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>RoofTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Roof(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,RoofTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public RoofTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ObjectDefinition(...)</para><para>new ifc.Context(...)</para><para>new ifc.Project(...)</para><para>new ifc.Object(...)</para><para>new ifc.Actor(...)</para><para>new ifc.Occupant(...)</para><para>new ifc.Control(...)</para><para>new ifc.ActionRequest(...)</para><para>new ifc.CostItem(...)</para><para>new ifc.CostSchedule(...)</para><para>new ifc.PerformanceHistory(...)</para><para>new ifc.Permit(...)</para><para>new ifc.ProjectOrder(...)</para><para>new ifc.WorkControl(...)</para><para>new ifc.ConditionCriterion(...)</para><para>new ifc.EquipmentStandard(...)</para><para>new ifc.FurnitureStandard(...)</para><para>new ifc.ProjectOrderRecord(...)</para><para>new ifc.ScheduleTimeControl(...)</para><para>new ifc.ServiceLife(...)</para><para>new ifc.SpaceProgram(...)</para><para>new ifc.TimeSeriesSchedule(...)</para><para>new ifc.Group(...)</para><para>new ifc.Asset(...)</para><para>new ifc.Inventory(...)</para><para>new ifc.StructuralLoadGroup(...)</para><para>new ifc.StructuralResultGroup(...)</para><para>new ifc.System(...)</para><para>new ifc.Condition(...)</para><para>new ifc.Process(...)</para><para>new ifc.Procedure(...)</para><para>new ifc.Task(...)</para><para>new ifc.Product(...)</para><para>new ifc.Annotation(...)</para><para>new ifc.Element(...)</para><para>new ifc.BuildingElement(...)</para><para>new ifc.Beam(...)</para><para>new ifc.BuildingElementProxy(...)</para><para>new ifc.Column(...)</para><para>new ifc.Covering(...)</para><para>new ifc.CurtainWall(...)</para><para>new ifc.Door(...)</para><para>new ifc.Footing(...)</para><para>new ifc.Member(...)</para><para>new ifc.Pile(...)</para><para>new ifc.Plate(...)</para><para>new ifc.Railing(...)</para><para>new ifc.Ramp(...)</para><para>new ifc.RampFlight(...)</para><para>new ifc.Roof(...)</para><para>new ifc.Slab(...)</para><para>new ifc.Stair(...)</para><para>new ifc.StairFlight(...)</para><para>new ifc.Wall(...)</para><para>new ifc.Window(...)</para><para>new ifc.BuildingElementComponent(...)</para><para>new ifc.DistributionElement(...)</para><para>new ifc.DistributionControlElement(...)</para><para>new ifc.Sensor(...)</para><para>new ifc.DistributionFlowElement(...)</para><para>new ifc.DistributionChamberElement(...)</para><para>new ifc.EnergyConversionDevice(...)</para><para>new ifc.FlowController(...)</para><para>new ifc.ElectricDistributionPoint(...)</para><para>new ifc.FlowFitting(...)</para><para>new ifc.DuctFitting(...)</para><para>new ifc.FlowMovingDevice(...)</para><para>new ifc.Fan(...)</para><para>new ifc.FlowSegment(...)</para><para>new ifc.FlowStorageDevice(...)</para><para>new ifc.FlowTerminal(...)</para><para>new ifc.FlowTreatmentDevice(...)</para><para>new ifc.Interceptor(...)</para><para>new ifc.ElementAssembly(...)</para><para>new ifc.ElementComponent(...)</para><para>new ifc.BuildingElementPart(...)</para><para>new ifc.DiscreteAccessory(...)</para><para>new ifc.Fastener(...)</para><para>new ifc.MechanicalFastener(...)</para><para>new ifc.ReinforcingElement(...)</para><para>new ifc.ReinforcingBar(...)</para><para>new ifc.ReinforcingMesh(...)</para><para>new ifc.Tendon(...)</para><para>new ifc.TendonAnchor(...)</para><para>new ifc.FeatureElement(...)</para><para>new ifc.FeatureElementAddition(...)</para><para>new ifc.ProjectionElement(...)</para><para>new ifc.FeatureElementSubtraction(...)</para><para>new ifc.OpeningElement(...)</para><para>new ifc.EdgeFeature(...)</para><para>new ifc.FurnishingElement(...)</para><para>new ifc.TransportElement(...)</para><para>new ifc.VirtualElement(...)</para><para>new ifc.ElectricalElement(...)</para><para>new ifc.EquipmentElement(...)</para><para>new ifc.Port(...)</para><para>new ifc.DistributionPort(...)</para><para>new ifc.PositioningElement(...)</para><para>new ifc.Alignment(...)</para><para>new ifc.Grid(...)</para><para>new ifc.Proxy(...)</para><para>new ifc.SpatialElement(...)</para><para>new ifc.StructuralActivity(...)</para><para>new ifc.StructuralItem(...)</para><para>new ifc.Resource(...)</para><para>new ifc.ConstructionResource(...)</para><para>new ifc.ConstructionEquipmentResource(...)</para><para>new ifc.ConstructionMaterialResource(...)</para><para>new ifc.ConstructionProductResource(...)</para><para>new ifc.CrewResource(...)</para><para>new ifc.LaborResource(...)</para><para>new ifc.SubContractResource(...)</para><para>new ifc.TypeObject(...)</para><para>new ifc.PropertyDefinition(...)</para><para>new ifc.PropertySetDefinition(...)</para><para>new ifc.PreDefinedPropertySet(...)</para><para>new ifc.DoorLiningProperties(...)</para><para>new ifc.DoorPanelProperties(...)</para><para>new ifc.PermeableCoveringProperties(...)</para><para>new ifc.ReinforcementDefinitionProperties(...)</para><para>new ifc.WindowLiningProperties(...)</para><para>new ifc.WindowPanelProperties(...)</para><para>new ifc.PropertySet(...)</para><para>new ifc.QuantitySet(...)</para><para>new ifc.ElementQuantity(...)</para><para>new ifc.EnergyProperties(...)</para><para>new ifc.FluidFlowProperties(...)</para><para>new ifc.ServiceLifeFactor(...)</para><para>new ifc.SoundProperties(...)</para><para>new ifc.SoundValue(...)</para><para>new ifc.SpaceThermalLoadProperties(...)</para><para>new ifc.PropertyTemplateDefinition(...)</para><para>new ifc.PropertySetTemplate(...)</para><para>new ifc.PropertyTemplate(...)</para><para>new ifc.ComplexPropertyTemplate(...)</para><para>new ifc.Relationship(...)</para><para>new ifc.RelAssigns(...)</para><para>new ifc.RelAssignsToActor(...)</para><para>new ifc.RelOccupiesSpaces(...)</para><para>new ifc.RelAssignsToControl(...)</para><para>new ifc.RelAssignsTasks(...)</para><para>new ifc.RelAssignsToProjectOrder(...)</para><para>new ifc.RelSchedulesCostItems(...)</para><para>new ifc.RelAssignsToGroup(...)</para><para>new ifc.RelAssignsToProcess(...)</para><para>new ifc.RelAssignsToProduct(...)</para><para>new ifc.RelAssignsToResource(...)</para><para>new ifc.RelAssociates(...)</para><para>new ifc.RelAssociatesApproval(...)</para><para>new ifc.RelAssociatesClassification(...)</para><para>new ifc.RelAssociatesConstraint(...)</para><para>new ifc.RelAssociatesDocument(...)</para><para>new ifc.RelAssociatesLibrary(...)</para><para>new ifc.RelAssociatesMaterial(...)</para><para>new ifc.RelAssociatesAppliedValue(...)</para><para>new ifc.RelAssociatesProfileProperties(...)</para><para>new ifc.RelConnects(...)</para><para>new ifc.RelConnectsElements(...)</para><para>new ifc.RelConnectsPathElements(...)</para><para>new ifc.RelConnectsWithRealizingElements(...)</para><para>new ifc.RelConnectsPortToElement(...)</para><para>new ifc.RelConnectsPorts(...)</para><para>new ifc.RelConnectsStructuralActivity(...)</para><para>new ifc.RelConnectsStructuralMember(...)</para><para>new ifc.RelConnectsWithEccentricity(...)</para><para>new ifc.RelContainedInSpatialStructure(...)</para><para>new ifc.RelCoversBldgElements(...)</para><para>new ifc.RelCoversSpaces(...)</para><para>new ifc.RelFillsElement(...)</para><para>new ifc.RelFlowControlElements(...)</para><para>new ifc.RelInterferesElements(...)</para><para>new ifc.RelReferencedInSpatialStructure(...)</para><para>new ifc.RelSequence(...)</para><para>new ifc.RelServicesBuildings(...)</para><para>new ifc.RelSpaceBoundary(...)</para><para>new ifc.RelConnectsStructuralElement(...)</para><para>new ifc.RelInteractionRequirements(...)</para><para>new ifc.RelDeclares(...)</para><para>new ifc.RelDecomposes(...)</para><para>new ifc.RelAggregates(...)</para><para>new ifc.RelNests(...)</para><para>new ifc.RelProjectsElement(...)</para><para>new ifc.RelVoidsElement(...)</para><para>new ifc.RelDefines(...)</para><para>new ifc.RelDefinesByObject(...)</para><para>new ifc.RelDefinesByProperties(...)</para><para>new ifc.RelOverridesProperties(...)</para><para>new ifc.RelDefinesByTemplate(...)</para><para>new ifc.RelDefinesByType(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1060,TableId:3)] public partial class Root:ENTITY{//=====================================================================================
public               Root():base(){}// abstract
[ifc(1)] public GloballyUniqueId GlobalId; //TYPE
[ifc(2,optional=true)] public OwnerHistory _OwnerHistory; //ENTITY
[ifc(3,optional=true)] public Label Name; //TYPE
[ifc(4,optional=true)] public Text Description; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcprofileresource/lexical/ifcroundedrectangleprofiledef.htm
[ifcSql(TypeGroupId:5,TypeId:1061,TableId:3)] public partial class RoundedRectangleProfileDef:RectangleProfileDef{//==================================================
public               RoundedRectangleProfileDef():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ProfileType"><para>ProfileTypeEnum</para></param>
/// <param name="ProfileName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Position">[optional]<para>new ifc.Axis2Placement2D(...)</para></param>
/// <param name="XDim"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="YDim"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="RoundingRadius"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RoundedRectangleProfileDef(ProfileTypeEnum ProfileType,Label ProfileName,Axis2Placement2D Position,PositiveLengthMeasure XDim,PositiveLengthMeasure YDim,PositiveLengthMeasure RoundingRadius,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.ProfileName=ProfileName;this.Position=Position;this.XDim=XDim;this.YDim=YDim;this.RoundingRadius=RoundingRadius;this.EndOfLineComment=EndOfLineComment;}
public               RoundedRectangleProfileDef(ProfileTypeEnum ProfileType,PositiveLengthMeasure XDim,PositiveLengthMeasure YDim,PositiveLengthMeasure RoundingRadius,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.XDim=XDim;this.YDim=YDim;this.RoundingRadius=RoundingRadius;this.EndOfLineComment=EndOfLineComment;}
[ifc(6)] public PositiveLengthMeasure RoundingRadius; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcmeasureresource/lexical/ifcsiunit.htm
[ifcSql(TypeGroupId:5,TypeId:1062,TableId:3)] public partial class SIUnit:NamedUnit{//================================================================================
public               SIUnit():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Dimensions"><para>new ifc.DimensionalExponents(...)</para></param>
/// <param name="UnitType"><para>UnitEnum</para></param>
/// <param name="Prefix">[optional]<para>SIPrefix</para></param>
/// <param name="Name"><para>SIUnitName</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               SIUnit(DimensionalExponents Dimensions,UnitEnum UnitType,SIPrefix? Prefix,SIUnitName Name,string EndOfLineComment=null):base(){AddNext();this.Dimensions=Dimensions;this.UnitType=UnitType;this.Prefix=Prefix;this.Name=Name;this.EndOfLineComment=EndOfLineComment;}
public               SIUnit(DimensionalExponents Dimensions,UnitEnum UnitType,SIUnitName Name):base(){AddNext();this.Dimensions=Dimensions;this.UnitType=UnitType;this.Name=Name;}
[ifc(3,optional=true)] public SIPrefix? Prefix; //ENUM
[ifc(4)] public SIUnitName Name; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcplumbingfireprotectiondomain/lexical/ifcsanitaryterminaltype.htm
[ifcSql(TypeGroupId:5,TypeId:1064,TableId:3)] public partial class SanitaryTerminalType:FlowTerminalType{//===========================================================
public               SanitaryTerminalType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>SanitaryTerminalTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               SanitaryTerminalType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,SanitaryTerminalTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               SanitaryTerminalType(SanitaryTerminalTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public SanitaryTerminalTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.LagTime(...)</para><para>new ifc.ResourceTime(...)</para><para>new ifc.TaskTime(...)</para><para>new ifc.WorkTime(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1065,TableId:3)] public partial class SchedulingTime:ENTITY{//===========================================================================
public               SchedulingTime():base(){}// abstract
[ifc(1,optional=true)] public Label Name; //TYPE
[ifc(2,optional=true)] public DataOriginEnum? DataOrigin; //ENUM
[ifc(3,optional=true)] public Label UserDefinedDataOrigin; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcprofileresource/lexical/ifcsectionproperties.htm
[ifcSql(TypeGroupId:5,TypeId:1066,TableId:3)] public partial class SectionProperties:PreDefinedProperties{//==========================================================
public               SectionProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="SectionType"><para>SectionTypeEnum</para></param>
/// <param name="StartProfile"><para>new ifc.ProfileDef(...)</para><para>new ifc.ArbitraryClosedProfileDef(...)</para><para>new ifc.ArbitraryProfileDefWithVoids(...)</para><para>new ifc.ArbitraryOpenProfileDef(...)</para><para>new ifc.CenterLineProfileDef(...)</para><para>new ifc.CompositeProfileDef(...)</para><para>new ifc.DerivedProfileDef(...)</para><para>new ifc.AsymmetricIShapeProfileDef(...)</para><para>new ifc.CShapeProfileDef(...)</para><para>new ifc.CircleProfileDef(...)</para><para>new ifc.CircleHollowProfileDef(...)</para><para>new ifc.EllipseProfileDef(...)</para><para>new ifc.IShapeProfileDef(...)</para><para>new ifc.LShapeProfileDef(...)</para><para>new ifc.RectangleProfileDef(...)</para><para>new ifc.TShapeProfileDef(...)</para><para>new ifc.TrapeziumProfileDef(...)</para><para>new ifc.UShapeProfileDef(...)</para><para>new ifc.ZShapeProfileDef(...)</para><para>new ifc.CraneRailAShapeProfileDef(...)</para><para>new ifc.CraneRailFShapeProfileDef(...)</para></param>
/// <param name="EndProfile">[optional]<para>new ifc.ProfileDef(...)</para><para>new ifc.ArbitraryClosedProfileDef(...)</para><para>new ifc.ArbitraryProfileDefWithVoids(...)</para><para>new ifc.ArbitraryOpenProfileDef(...)</para><para>new ifc.CenterLineProfileDef(...)</para><para>new ifc.CompositeProfileDef(...)</para><para>new ifc.DerivedProfileDef(...)</para><para>new ifc.AsymmetricIShapeProfileDef(...)</para><para>new ifc.CShapeProfileDef(...)</para><para>new ifc.CircleProfileDef(...)</para><para>new ifc.CircleHollowProfileDef(...)</para><para>new ifc.EllipseProfileDef(...)</para><para>new ifc.IShapeProfileDef(...)</para><para>new ifc.LShapeProfileDef(...)</para><para>new ifc.RectangleProfileDef(...)</para><para>new ifc.TShapeProfileDef(...)</para><para>new ifc.TrapeziumProfileDef(...)</para><para>new ifc.UShapeProfileDef(...)</para><para>new ifc.ZShapeProfileDef(...)</para><para>new ifc.CraneRailAShapeProfileDef(...)</para><para>new ifc.CraneRailFShapeProfileDef(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               SectionProperties(SectionTypeEnum SectionType,ProfileDef StartProfile,ProfileDef EndProfile=null,string EndOfLineComment=null):base(){AddNext();this.SectionType=SectionType;this.StartProfile=StartProfile;this.EndProfile=EndProfile;this.EndOfLineComment=EndOfLineComment;}
public               SectionProperties(SectionTypeEnum SectionType,ProfileDef StartProfile):base(){AddNext();this.SectionType=SectionType;this.StartProfile=StartProfile;}
[ifc(1)] public SectionTypeEnum SectionType; //ENUM
[ifc(2)] public ProfileDef StartProfile; //ENTITY
[ifc(3,optional=true)] public ProfileDef EndProfile; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcprofileresource/lexical/ifcsectionreinforcementproperties.htm
[ifcSql(TypeGroupId:5,TypeId:1067,TableId:3)] public partial class SectionReinforcementProperties:PreDefinedProperties{//=============================================
public               SectionReinforcementProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="LongitudinalStartPosition"><para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="LongitudinalEndPosition"><para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="TransversePosition">[optional]<para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="ReinforcementRole"><para>ReinforcingBarRoleEnum</para></param>
/// <param name="SectionDefinition"><para>new ifc.SectionProperties(...)</para></param>
/// <param name="CrossSectionReinforcementDefinitions"><para>Set1toUnbounded_ReinforcementBarProperties</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               SectionReinforcementProperties(LengthMeasure LongitudinalStartPosition,LengthMeasure LongitudinalEndPosition,LengthMeasure TransversePosition,ReinforcingBarRoleEnum ReinforcementRole,SectionProperties SectionDefinition,Set1toUnbounded_ReinforcementBarProperties CrossSectionReinforcementDefinitions,string EndOfLineComment=null):base(){AddNext();this.LongitudinalStartPosition=LongitudinalStartPosition;this.LongitudinalEndPosition=LongitudinalEndPosition;this.TransversePosition=TransversePosition;this.ReinforcementRole=ReinforcementRole;this.SectionDefinition=SectionDefinition;this.CrossSectionReinforcementDefinitions=CrossSectionReinforcementDefinitions;this.EndOfLineComment=EndOfLineComment;}
public               SectionReinforcementProperties(LengthMeasure LongitudinalStartPosition,LengthMeasure LongitudinalEndPosition,ReinforcingBarRoleEnum ReinforcementRole,SectionProperties SectionDefinition,Set1toUnbounded_ReinforcementBarProperties CrossSectionReinforcementDefinitions):base(){AddNext();this.LongitudinalStartPosition=LongitudinalStartPosition;this.LongitudinalEndPosition=LongitudinalEndPosition;this.ReinforcementRole=ReinforcementRole;this.SectionDefinition=SectionDefinition;this.CrossSectionReinforcementDefinitions=CrossSectionReinforcementDefinitions;}
[ifc(1)] public LengthMeasure LongitudinalStartPosition; //TYPE
[ifc(2)] public LengthMeasure LongitudinalEndPosition; //TYPE
[ifc(3,optional=true)] public LengthMeasure TransversePosition; //TYPE
[ifc(4)] public ReinforcingBarRoleEnum ReinforcementRole; //ENUM
[ifc(5)] public SectionProperties SectionDefinition; //ENTITY
[ifc(6)] public Set1toUnbounded_ReinforcementBarProperties CrossSectionReinforcementDefinitions; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricmodelresource/lexical/ifcsectionedspine.htm
[ifcSql(TypeGroupId:5,TypeId:1068,TableId:3)] public partial class SectionedSpine:GeometricRepresentationItem{//======================================================
public               SectionedSpine():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="SpineCurve"><para>new ifc.CompositeCurve(...)</para><para>new ifc.CompositeCurveOnSurface(...)</para><para>new ifc.2DCompositeCurve(...)</para></param>
/// <param name="CrossSections"><para>List2toUnbounded_ProfileDef</para></param>
/// <param name="CrossSectionPositions"><para>List2toUnbounded_Axis2Placement3D</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               SectionedSpine(CompositeCurve SpineCurve,List2toUnbounded_ProfileDef CrossSections,List2toUnbounded_Axis2Placement3D CrossSectionPositions,string EndOfLineComment=null):base(){AddNext();this.SpineCurve=SpineCurve;this.CrossSections=CrossSections;this.CrossSectionPositions=CrossSectionPositions;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public CompositeCurve SpineCurve; //ENTITY
[ifc(2)] public List2toUnbounded_ProfileDef CrossSections; //ListType1d
[ifc(3)] public List2toUnbounded_Axis2Placement3D CrossSectionPositions; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcbuildingcontrolsdomain/lexical/ifcsensor.htm
[ifcSql(TypeGroupId:5,TypeId:1069,TableId:3)] public partial class Sensor:DistributionControlElement{//===============================================================
public               Sensor():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>SensorTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Sensor(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,SensorTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public SensorTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcbuildingcontrolsdomain/lexical/ifcsensortype.htm
[ifcSql(TypeGroupId:5,TypeId:1070,TableId:3)] public partial class SensorType:DistributionControlElementType{//=======================================================
public               SensorType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>SensorTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               SensorType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,SensorTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               SensorType(SensorTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public SensorTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcrepresentationresource/lexical/ifcshapeaspect.htm
[ifcSql(TypeGroupId:5,TypeId:1073,TableId:3)] public partial class ShapeAspect:ENTITY{//==============================================================================
public               ShapeAspect():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ShapeRepresentations"><para>List1toUnbounded_ShapeModel</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ProductDefinitional"><para>cast to (ifc.Logical)...</para></param>
/// <param name="PartOfProductDefinitionShape">[optional]<para>new ifc.ProductRepresentationSelect(new ProductDefinitionShape(...))...</para><para>new ifc.ProductRepresentationSelect(new RepresentationMap(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ShapeAspect(List1toUnbounded_ShapeModel ShapeRepresentations,Label Name,Text Description,Logical ProductDefinitional,ProductRepresentationSelect PartOfProductDefinitionShape=null,string EndOfLineComment=null):base(){AddNext();this.ShapeRepresentations=ShapeRepresentations;this.Name=Name;this.Description=Description;this.ProductDefinitional=ProductDefinitional;this.PartOfProductDefinitionShape=PartOfProductDefinitionShape;this.EndOfLineComment=EndOfLineComment;}
public               ShapeAspect(List1toUnbounded_ShapeModel ShapeRepresentations,Logical ProductDefinitional,string EndOfLineComment=null):base(){AddNext();this.ShapeRepresentations=ShapeRepresentations;this.ProductDefinitional=ProductDefinitional;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public List1toUnbounded_ShapeModel ShapeRepresentations; //ListType1d
[ifc(2,optional=true)] public Label Name; //TYPE
[ifc(3,optional=true)] public Text Description; //TYPE
[ifc(4)] public Logical ProductDefinitional; //TYPE
[ifc(5,optional=true)] public ProductRepresentationSelect PartOfProductDefinitionShape; //SELECT
public override void AssignInverseElements(){if (PartOfProductDefinitionShape!=null) if (PartOfProductDefinitionShape.SelectType()==typeof(ProductDefinitionShape))  {if (((ProductDefinitionShape)PartOfProductDefinitionShape).HasShapeAspects==null) ((ProductDefinitionShape)PartOfProductDefinitionShape).HasShapeAspects=new LIST<ShapeAspect>();((ProductDefinitionShape)PartOfProductDefinitionShape).HasShapeAspects.Add(this);}
                                             if (PartOfProductDefinitionShape!=null) if (PartOfProductDefinitionShape.SelectType()==typeof(RepresentationMap))  {if (((RepresentationMap)PartOfProductDefinitionShape).HasShapeAspects==null) ((RepresentationMap)PartOfProductDefinitionShape).HasShapeAspects=new LIST<ShapeAspect>();((RepresentationMap)PartOfProductDefinitionShape).HasShapeAspects.Add(this);}
                                             if (ShapeRepresentations!=null) foreach (ShapeModel __ShapeModel in ShapeRepresentations) if (__ShapeModel is ShapeModel) ((ShapeModel)__ShapeModel).OfShapeAspect=this;
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ShapeRepresentation(...)</para><para>new ifc.TopologyRepresentation(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1074,TableId:3)] public partial class ShapeModel:Representation{//=======================================================================
public               ShapeModel():base(){}// abstract
/// <summary>INVERSE: OfShapeAspect of ShapeAspect for ShapeRepresentations</summary>
[ifcInverse(For:"ShapeRepresentations")] public ShapeAspect OfShapeAspect;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcrepresentationresource/lexical/ifcshaperepresentation.htm
[ifcSql(TypeGroupId:5,TypeId:1075,TableId:3)] public partial class ShapeRepresentation:ShapeModel{//==================================================================
public               ShapeRepresentation():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ContextOfItems"><para>new ifc.GeometricRepresentationContext(...)</para><para>new ifc.GeometricRepresentationSubContext(...)</para></param>
/// <param name="RepresentationIdentifier">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="RepresentationType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Items"><para>Set1toUnbounded_RepresentationItem</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ShapeRepresentation(RepresentationContext ContextOfItems,Label RepresentationIdentifier,Label RepresentationType,Set1toUnbounded_RepresentationItem Items,string EndOfLineComment=null):base(){AddNext();this.ContextOfItems=ContextOfItems;this.RepresentationIdentifier=RepresentationIdentifier;this.RepresentationType=RepresentationType;this.Items=Items;this.EndOfLineComment=EndOfLineComment;}
public               ShapeRepresentation(RepresentationContext ContextOfItems,Set1toUnbounded_RepresentationItem Items,string EndOfLineComment=null):base(){AddNext();this.ContextOfItems=ContextOfItems;this.Items=Items;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricmodelresource/lexical/ifcshellbasedsurfacemodel.htm
[ifcSql(TypeGroupId:5,TypeId:1076,TableId:3)] public partial class ShellBasedSurfaceModel:GeometricRepresentationItem{//==============================================
public               ShellBasedSurfaceModel():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="SbsmBoundary"><para>Set1toUnbounded_Shell</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ShellBasedSurfaceModel(Set1toUnbounded_Shell SbsmBoundary,string EndOfLineComment=null):base(){AddNext();this.SbsmBoundary=SbsmBoundary;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Set1toUnbounded_Shell SbsmBoundary; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.PropertyBoundedValue(...)</para><para>new ifc.PropertyEnumeratedValue(...)</para><para>new ifc.PropertyListValue(...)</para><para>new ifc.PropertyReferenceValue(...)</para><para>new ifc.PropertySingleValue(...)</para><para>new ifc.PropertyTableValue(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1077,TableId:3)] public partial class SimpleProperty:Property{//=========================================================================
public               SimpleProperty():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifcsite.htm
[ifcSql(TypeGroupId:5,TypeId:1079,TableId:3)] public partial class Site:SpatialStructureElement{//====================================================================
public               Site():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="LongName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="CompositionType">[optional]<para>ElementCompositionEnum</para></param>
/// <param name="RefLatitude">[optional]<para>CompoundPlaneAngleMeasure</para></param>
/// <param name="RefLongitude">[optional]<para>CompoundPlaneAngleMeasure</para></param>
/// <param name="RefElevation">[optional]<para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="LandTitleNumber">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="SiteAddress">[optional]<para>new ifc.PostalAddress(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Site(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Label LongName=null,ElementCompositionEnum? CompositionType=null,CompoundPlaneAngleMeasure RefLatitude=null,CompoundPlaneAngleMeasure RefLongitude=null,LengthMeasure RefElevation=null,Label LandTitleNumber=null,PostalAddress SiteAddress=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.LongName=LongName;this.CompositionType=CompositionType;this.RefLatitude=RefLatitude;this.RefLongitude=RefLongitude;this.RefElevation=RefElevation;this.LandTitleNumber=LandTitleNumber;this.SiteAddress=SiteAddress;this.EndOfLineComment=EndOfLineComment;}
[ifc(10,optional=true)] public CompoundPlaneAngleMeasure RefLatitude; //ListType1d
[ifc(11,optional=true)] public CompoundPlaneAngleMeasure RefLongitude; //ListType1d
[ifc(12,optional=true)] public LengthMeasure RefElevation; //TYPE
[ifc(13,optional=true)] public Label LandTitleNumber; //TYPE
[ifc(14,optional=true)] public PostalAddress SiteAddress; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.SlabStandardCase(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifcslab.htm
[ifcSql(TypeGroupId:5,TypeId:1080,TableId:3)] public partial class Slab:BuildingElement{//============================================================================
public               Slab():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>SlabTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Slab(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,SlabTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public SlabTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifcslabstandardcase.htm
[ifcSql(TypeGroupId:5,TypeId:1082,TableId:3)] public partial class SlabStandardCase:Slab{//===========================================================================
public               SlabStandardCase():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>SlabTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               SlabStandardCase(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,SlabTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifcslabtype.htm
[ifcSql(TypeGroupId:5,TypeId:1083,TableId:3)] public partial class SlabType:BuildingElementType{//====================================================================
public               SlabType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>SlabTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               SlabType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,SlabTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               SlabType(SlabTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public SlabTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralloadresource/lexical/ifcslippageconnectioncondition.htm
[ifcSql(TypeGroupId:5,TypeId:1084,TableId:3)] public partial class SlippageConnectionCondition:StructuralConnectionCondition{//=======================================
public               SlippageConnectionCondition():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="SlippageX">[optional]<para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="SlippageY">[optional]<para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="SlippageZ">[optional]<para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               SlippageConnectionCondition(Label Name=null,LengthMeasure SlippageX=null,LengthMeasure SlippageY=null,LengthMeasure SlippageZ=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.SlippageX=SlippageX;this.SlippageY=SlippageY;this.SlippageZ=SlippageZ;this.EndOfLineComment=EndOfLineComment;}
[ifc(2,optional=true)] public LengthMeasure SlippageX; //TYPE
[ifc(3,optional=true)] public LengthMeasure SlippageY; //TYPE
[ifc(4,optional=true)] public LengthMeasure SlippageZ; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.CsgSolid(...)</para><para>new ifc.ManifoldSolidBrep(...)</para><para>new ifc.FacetedBrep(...)</para><para>new ifc.FacetedBrepWithVoids(...)</para><para>new ifc.SweptAreaSolid(...)</para><para>new ifc.SweptDiskSolid(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1087,TableId:3)] public partial class SolidModel:GeometricRepresentationItem{//==========================================================
public               SolidModel():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifcspace.htm
[ifcSql(TypeGroupId:5,TypeId:1088,TableId:3)] public partial class Space:SpatialStructureElement{//===================================================================
public               Space():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="LongName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="CompositionType">[optional]<para>ElementCompositionEnum</para></param>
/// <param name="PredefinedType">[optional]<para>SpaceTypeEnum</para></param>
/// <param name="ElevationWithFlooring">[optional]<para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Space(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Label LongName=null,ElementCompositionEnum? CompositionType=null,SpaceTypeEnum? PredefinedType=null,LengthMeasure ElevationWithFlooring=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.LongName=LongName;this.CompositionType=CompositionType;this.PredefinedType=PredefinedType;this.ElevationWithFlooring=ElevationWithFlooring;this.EndOfLineComment=EndOfLineComment;}
[ifc(10,optional=true)] public SpaceTypeEnum? PredefinedType; //ENUM
[ifc(11,optional=true)] public LengthMeasure ElevationWithFlooring; //TYPE
/// <summary>INVERSE: HasCoverings of RelCoversSpaces for RelatingSpace</summary>
[ifcInverse(For:"RelatingSpace")] public LIST<RelCoversSpaces> HasCoverings;
/// <summary>INVERSE: BoundedBy of RelSpaceBoundary for RelatingSpace</summary>
[ifcInverse(For:"RelatingSpace")] public LIST<RelSpaceBoundary> BoundedBy;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifcspaceheatertype.htm
[ifcSql(TypeGroupId:5,TypeId:1090,TableId:3)] public partial class SpaceHeaterType:FlowTerminalType{//================================================================
public               SpaceHeaterType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>SpaceHeaterTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               SpaceHeaterType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,SpaceHeaterTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               SpaceHeaterType(SpaceHeaterTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public SpaceHeaterTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifcspacetype.htm
[ifcSql(TypeGroupId:5,TypeId:1091,TableId:3)] public partial class SpaceType:SpatialStructureElementType{//===========================================================
public               SpaceType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>SpaceTypeEnum</para></param>
/// <param name="LongName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               SpaceType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,SpaceTypeEnum PredefinedType,Label LongName=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.LongName=LongName;this.EndOfLineComment=EndOfLineComment;}
public               SpaceType(SpaceTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public SpaceTypeEnum PredefinedType; //ENUM
[ifc(11,optional=true)] public Label LongName; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ExternalSpatialStructureElement(...)</para><para>new ifc.ExternalSpatialElement(...)</para><para>new ifc.SpatialStructureElement(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1092,TableId:3)] public partial class SpatialElement:Product{//==========================================================================
public               SpatialElement():base(){}// abstract
[ifc(8,optional=true)] public Label LongName; //TYPE
/// <summary>INVERSE: ContainsElements of RelContainedInSpatialStructure for RelatingStructure</summary>
[ifcInverse(For:"RelatingStructure")] public LIST<RelContainedInSpatialStructure> ContainsElements;
/// <summary>INVERSE: ReferencesElements of RelReferencedInSpatialStructure for RelatingStructure</summary>
[ifcInverse(For:"RelatingStructure")] public LIST<RelReferencedInSpatialStructure> ReferencesElements;
/// <summary>INVERSE: ServicedBySystems of RelServicesBuildings for RelatedBuildings</summary>
[ifcInverse(For:"RelatedBuildings")] public LIST<RelServicesBuildings> ServicedBySystems;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.SpatialStructureElementType(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1093,TableId:3)] public partial class SpatialElementType:TypeProduct{//==================================================================
public               SpatialElementType():base(){}// abstract
[ifc(9,optional=true)] public Label _ElementType; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.Building(...)</para><para>new ifc.BuildingStorey(...)</para><para>new ifc.Site(...)</para><para>new ifc.Space(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1094,TableId:3)] public partial class SpatialStructureElement:SpatialElement{//==========================================================
public               SpatialStructureElement():base(){}// abstract
[ifc(9,optional=true)] public ElementCompositionEnum? CompositionType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.SpaceType(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1095,TableId:3)] public partial class SpatialStructureElementType:SpatialElementType{//==================================================
public               SpatialStructureElementType():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricmodelresource/lexical/ifcsphere.htm
[ifcSql(TypeGroupId:5,TypeId:1098,TableId:3)] public partial class Sphere:CsgPrimitive3D{//===========================================================================
public               Sphere():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Position"><para>new ifc.Axis2Placement3D(...)</para></param>
/// <param name="Radius"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Sphere(Axis2Placement3D Position,PositiveLengthMeasure Radius,string EndOfLineComment=null):base(){AddNext();this.Position=Position;this.Radius=Radius;this.EndOfLineComment=EndOfLineComment;}
[ifc(2)] public PositiveLengthMeasure Radius; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcplumbingfireprotectiondomain/lexical/ifcstackterminaltype.htm
[ifcSql(TypeGroupId:5,TypeId:1100,TableId:3)] public partial class StackTerminalType:FlowTerminalType{//==============================================================
public               StackTerminalType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>StackTerminalTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StackTerminalType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,StackTerminalTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               StackTerminalType(StackTerminalTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public StackTerminalTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifcstair.htm
[ifcSql(TypeGroupId:5,TypeId:1101,TableId:3)] public partial class Stair:BuildingElement{//===========================================================================
public               Stair():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>StairTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Stair(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,StairTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public StairTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifcstairflight.htm
[ifcSql(TypeGroupId:5,TypeId:1102,TableId:3)] public partial class StairFlight:BuildingElement{//=====================================================================
public               StairFlight():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="NumberOfRisers">[optional]<para>cast to (ifc.Integer)...</para></param>
/// <param name="NumberOfTreads">[optional]<para>cast to (ifc.Integer)...</para></param>
/// <param name="RiserHeight">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="TreadLength">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="PredefinedType">[optional]<para>StairFlightTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StairFlight(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,Integer NumberOfRisers=null,Integer NumberOfTreads=null,PositiveLengthMeasure RiserHeight=null,PositiveLengthMeasure TreadLength=null,StairFlightTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.NumberOfRisers=NumberOfRisers;this.NumberOfTreads=NumberOfTreads;this.RiserHeight=RiserHeight;this.TreadLength=TreadLength;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public Integer NumberOfRisers; //TYPE
[ifc(10,optional=true)] public Integer NumberOfTreads; //TYPE
[ifc(11,optional=true)] public PositiveLengthMeasure RiserHeight; //TYPE
[ifc(12,optional=true)] public PositiveLengthMeasure TreadLength; //TYPE
[ifc(13,optional=true)] public StairFlightTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifcstairflighttype.htm
[ifcSql(TypeGroupId:5,TypeId:1103,TableId:3)] public partial class StairFlightType:BuildingElementType{//=============================================================
public               StairFlightType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>StairFlightTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StairFlightType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,StairFlightTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               StairFlightType(StairFlightTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public StairFlightTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.StructuralCurveAction(...)</para><para>new ifc.StructuralPointAction(...)</para><para>new ifc.StructuralSurfaceAction(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1105,TableId:3)] public partial class StructuralAction:StructuralActivity{//=============================================================
public               StructuralAction():base(){}// abstract
[ifc(10,optional=true)] public Boolean DestabilizingLoad; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.StructuralAction(...)</para><para>new ifc.StructuralCurveAction(...)</para><para>new ifc.StructuralPointAction(...)</para><para>new ifc.StructuralSurfaceAction(...)</para><para>new ifc.StructuralReaction(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1106,TableId:3)] public partial class StructuralActivity:Product{//======================================================================
public               StructuralActivity():base(){}// abstract
[ifc(8)] public StructuralLoad AppliedLoad; //ENTITY
[ifc(9)] public GlobalOrLocalEnum GlobalOrLocal; //ENUM
/// <summary>INVERSE: AssignedToStructuralItem of RelConnectsStructuralActivity for RelatedStructuralActivity</summary>
[ifcInverse(For:"RelatedStructuralActivity")] public RelConnectsStructuralActivity AssignedToStructuralItem;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralanalysisdomain/lexical/ifcstructuralanalysismodel.htm
[ifcSql(TypeGroupId:5,TypeId:1107,TableId:3)] public partial class StructuralAnalysisModel:System{//==================================================================
public               StructuralAnalysisModel():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>AnalysisModelTypeEnum</para></param>
/// <param name="OrientationOf2DPlane">[optional]<para>new ifc.Axis2Placement3D(...)</para></param>
/// <param name="LoadedBy">[optional]<para>Set1toUnbounded_StructuralLoadGroup</para></param>
/// <param name="HasResults">[optional]<para>Set1toUnbounded_StructuralResultGroup</para></param>
/// <param name="SharedPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StructuralAnalysisModel(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Label ObjectType,AnalysisModelTypeEnum PredefinedType,Axis2Placement3D OrientationOf2DPlane=null,Set1toUnbounded_StructuralLoadGroup LoadedBy=null,Set1toUnbounded_StructuralResultGroup HasResults=null,ObjectPlacement SharedPlacement=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.PredefinedType=PredefinedType;this.OrientationOf2DPlane=OrientationOf2DPlane;this.LoadedBy=LoadedBy;this.HasResults=HasResults;this.SharedPlacement=SharedPlacement;this.EndOfLineComment=EndOfLineComment;}
public               StructuralAnalysisModel(AnalysisModelTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(6)] public AnalysisModelTypeEnum PredefinedType; //ENUM
[ifc(7,optional=true)] public Axis2Placement3D OrientationOf2DPlane; //ENTITY
[ifc(8,optional=true)] public Set1toUnbounded_StructuralLoadGroup LoadedBy; //ListType1d
[ifc(9,optional=true)] public Set1toUnbounded_StructuralResultGroup HasResults; //ListType1d
[ifc(10,optional=true)] public ObjectPlacement SharedPlacement; //ENTITY
public override void AssignInverseElements(){if (LoadedBy!=null) foreach (StructuralLoadGroup __StructuralLoadGroup in LoadedBy) if (__StructuralLoadGroup is StructuralLoadGroup) {if (((StructuralLoadGroup)__StructuralLoadGroup).LoadGroupFor==null) ((StructuralLoadGroup)__StructuralLoadGroup).LoadGroupFor=new LIST<StructuralAnalysisModel>();((StructuralLoadGroup)__StructuralLoadGroup).LoadGroupFor.Add(this);}
                                             if (HasResults!=null) foreach (StructuralResultGroup __StructuralResultGroup in HasResults) if (__StructuralResultGroup is StructuralResultGroup) ((StructuralResultGroup)__StructuralResultGroup).ResultGroupFor=this;
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.StructuralCurveConnection(...)</para><para>new ifc.StructuralPointConnection(...)</para><para>new ifc.StructuralSurfaceConnection(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1108,TableId:3)] public partial class StructuralConnection:StructuralItem{//=============================================================
public               StructuralConnection():base(){}// abstract
[ifc(8,optional=true)] public BoundaryCondition AppliedCondition; //ENTITY
/// <summary>INVERSE: ConnectsStructuralMembers of RelConnectsStructuralMember for RelatedStructuralConnection</summary>
[ifcInverse(For:"RelatedStructuralConnection")] public LIST<RelConnectsStructuralMember> ConnectsStructuralMembers;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.FailureConnectionCondition(...)</para><para>new ifc.SlippageConnectionCondition(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1109,TableId:3)] public partial class StructuralConnectionCondition:ENTITY{//============================================================
public               StructuralConnectionCondition():base(){}// abstract
[ifc(1,optional=true)] public Label Name; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.StructuralLinearAction(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralanalysisdomain/lexical/ifcstructuralcurveaction.htm
[ifcSql(TypeGroupId:5,TypeId:1110,TableId:3)] public partial class StructuralCurveAction:StructuralAction{//==========================================================
public               StructuralCurveAction():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="AppliedLoad"></param>
/// <param name="GlobalOrLocal"><para>GlobalOrLocalEnum</para></param>
/// <param name="DestabilizingLoad">[optional]<para>cast to (ifc.Boolean)...</para></param>
/// <param name="ProjectedOrTrue">[optional]<para>ProjectedOrTrueLengthEnum</para></param>
/// <param name="PredefinedType"><para>StructuralCurveActivityTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StructuralCurveAction(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Label ObjectType,ObjectPlacement _ObjectPlacement,ProductRepresentation _Representation,StructuralLoad AppliedLoad,GlobalOrLocalEnum GlobalOrLocal,Boolean DestabilizingLoad,ProjectedOrTrueLengthEnum? ProjectedOrTrue,StructuralCurveActivityTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.AppliedLoad=AppliedLoad;this.GlobalOrLocal=GlobalOrLocal;this.DestabilizingLoad=DestabilizingLoad;this.ProjectedOrTrue=ProjectedOrTrue;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               StructuralCurveAction(StructuralLoad AppliedLoad,GlobalOrLocalEnum GlobalOrLocal,StructuralCurveActivityTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.AppliedLoad=AppliedLoad;this.GlobalOrLocal=GlobalOrLocal;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(11,optional=true)] public ProjectedOrTrueLengthEnum? ProjectedOrTrue; //ENUM
[ifc(12)] public StructuralCurveActivityTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralanalysisdomain/lexical/ifcstructuralcurveconnection.htm
[ifcSql(TypeGroupId:5,TypeId:1111,TableId:3)] public partial class StructuralCurveConnection:StructuralConnection{//==================================================
public               StructuralCurveConnection():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="AppliedCondition">[optional]<para>new ifc.BoundaryEdgeCondition(...)</para><para>new ifc.BoundaryFaceCondition(...)</para><para>new ifc.BoundaryNodeCondition(...)</para></param>
/// <param name="Axis"><para>new ifc.Direction(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StructuralCurveConnection(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Label ObjectType,ObjectPlacement _ObjectPlacement,ProductRepresentation _Representation,BoundaryCondition AppliedCondition,Direction Axis,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.AppliedCondition=AppliedCondition;this.Axis=Axis;this.EndOfLineComment=EndOfLineComment;}
public               StructuralCurveConnection(Direction Axis,string EndOfLineComment=null):base(){AddNext();this.Axis=Axis;this.EndOfLineComment=EndOfLineComment;}
[ifc(9)] public Direction Axis; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.StructuralCurveMemberVarying(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralanalysisdomain/lexical/ifcstructuralcurvemember.htm
[ifcSql(TypeGroupId:5,TypeId:1112,TableId:3)] public partial class StructuralCurveMember:StructuralMember{//==========================================================
public               StructuralCurveMember():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="PredefinedType"><para>StructuralCurveMemberTypeEnum</para></param>
/// <param name="Axis"><para>new ifc.Direction(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StructuralCurveMember(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Label ObjectType,ObjectPlacement _ObjectPlacement,ProductRepresentation _Representation,StructuralCurveMemberTypeEnum PredefinedType,Direction Axis,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.PredefinedType=PredefinedType;this.Axis=Axis;this.EndOfLineComment=EndOfLineComment;}
public               StructuralCurveMember(StructuralCurveMemberTypeEnum PredefinedType,Direction Axis,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.Axis=Axis;this.EndOfLineComment=EndOfLineComment;}
[ifc(8)] public StructuralCurveMemberTypeEnum PredefinedType; //ENUM
[ifc(9)] public Direction Axis; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralanalysisdomain/lexical/ifcstructuralcurvemembervarying.htm
[ifcSql(TypeGroupId:5,TypeId:1113,TableId:3)] public partial class StructuralCurveMemberVarying:StructuralCurveMember{//==============================================
public               StructuralCurveMemberVarying():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="PredefinedType"><para>StructuralCurveMemberTypeEnum</para></param>
/// <param name="Axis"><para>new ifc.Direction(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StructuralCurveMemberVarying(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Label ObjectType,ObjectPlacement _ObjectPlacement,ProductRepresentation _Representation,StructuralCurveMemberTypeEnum PredefinedType,Direction Axis,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.PredefinedType=PredefinedType;this.Axis=Axis;this.EndOfLineComment=EndOfLineComment;}
public               StructuralCurveMemberVarying(StructuralCurveMemberTypeEnum PredefinedType,Direction Axis,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.Axis=Axis;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.StructuralConnection(...)</para><para>new ifc.StructuralCurveConnection(...)</para><para>new ifc.StructuralPointConnection(...)</para><para>new ifc.StructuralSurfaceConnection(...)</para><para>new ifc.StructuralMember(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1115,TableId:3)] public partial class StructuralItem:Product{//==========================================================================
public               StructuralItem():base(){}// abstract
/// <summary>INVERSE: AssignedStructuralActivity of RelConnectsStructuralActivity for RelatingElement</summary>
[ifcInverse(For:"RelatingElement")] public LIST<RelConnectsStructuralActivity> AssignedStructuralActivity;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.StructuralLinearActionVarying(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralanalysisdomain/lexical/ifcstructurallinearaction.htm
[ifcSql(TypeGroupId:5,TypeId:1116,TableId:3)] public partial class StructuralLinearAction:StructuralCurveAction{//====================================================
public               StructuralLinearAction():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="AppliedLoad"></param>
/// <param name="GlobalOrLocal"><para>GlobalOrLocalEnum</para></param>
/// <param name="DestabilizingLoad">[optional]<para>cast to (ifc.Boolean)...</para></param>
/// <param name="ProjectedOrTrue">[optional]<para>ProjectedOrTrueLengthEnum</para></param>
/// <param name="PredefinedType"><para>StructuralCurveActivityTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StructuralLinearAction(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Label ObjectType,ObjectPlacement _ObjectPlacement,ProductRepresentation _Representation,StructuralLoad AppliedLoad,GlobalOrLocalEnum GlobalOrLocal,Boolean DestabilizingLoad,ProjectedOrTrueLengthEnum? ProjectedOrTrue,StructuralCurveActivityTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.AppliedLoad=AppliedLoad;this.GlobalOrLocal=GlobalOrLocal;this.DestabilizingLoad=DestabilizingLoad;this.ProjectedOrTrue=ProjectedOrTrue;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               StructuralLinearAction(StructuralLoad AppliedLoad,GlobalOrLocalEnum GlobalOrLocal,StructuralCurveActivityTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.AppliedLoad=AppliedLoad;this.GlobalOrLocal=GlobalOrLocal;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.StructuralLoadOrResult(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1117,TableId:3)] public partial class StructuralLoad:ENTITY{//===========================================================================
public               StructuralLoad():base(){}// abstract
[ifc(1,optional=true)] public Label Name; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralanalysisdomain/lexical/ifcstructuralloadgroup.htm
[ifcSql(TypeGroupId:5,TypeId:1120,TableId:3)] public partial class StructuralLoadGroup:Group{//=======================================================================
public               StructuralLoadGroup():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>LoadGroupTypeEnum</para></param>
/// <param name="ActionType"><para>ActionTypeEnum</para></param>
/// <param name="ActionSource"><para>ActionSourceTypeEnum</para></param>
/// <param name="Coefficient">[optional]<para>cast to (ifc.RatioMeasure)...</para></param>
/// <param name="Purpose">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StructuralLoadGroup(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Label ObjectType,LoadGroupTypeEnum PredefinedType,ActionTypeEnum ActionType,ActionSourceTypeEnum ActionSource,RatioMeasure Coefficient=null,Label Purpose=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.PredefinedType=PredefinedType;this.ActionType=ActionType;this.ActionSource=ActionSource;this.Coefficient=Coefficient;this.Purpose=Purpose;this.EndOfLineComment=EndOfLineComment;}
public               StructuralLoadGroup(LoadGroupTypeEnum PredefinedType,ActionTypeEnum ActionType,ActionSourceTypeEnum ActionSource,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.ActionType=ActionType;this.ActionSource=ActionSource;this.EndOfLineComment=EndOfLineComment;}
[ifc(6)] public LoadGroupTypeEnum PredefinedType; //ENUM
[ifc(7)] public ActionTypeEnum ActionType; //ENUM
[ifc(8)] public ActionSourceTypeEnum ActionSource; //ENUM
[ifc(9,optional=true)] public RatioMeasure Coefficient; //TYPE
[ifc(10,optional=true)] public Label Purpose; //TYPE
/// <summary>INVERSE: LoadGroupFor of StructuralAnalysisModel for LoadedBy</summary>
[ifcInverse(For:"LoadedBy")] public LIST<StructuralAnalysisModel> LoadGroupFor;
/// <summary>INVERSE: SourceOfResultGroup of StructuralResultGroup for ResultForLoadGroup</summary>
[ifcInverse(For:"ResultForLoadGroup")] public StructuralResultGroup SourceOfResultGroup;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralloadresource/lexical/ifcstructuralloadlinearforce.htm
[ifcSql(TypeGroupId:5,TypeId:1121,TableId:3)] public partial class StructuralLoadLinearForce:StructuralLoadStatic{//==================================================
public               StructuralLoadLinearForce():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="LinearForceX">[optional]<para>cast to (ifc.LinearForceMeasure)...</para></param>
/// <param name="LinearForceY">[optional]<para>cast to (ifc.LinearForceMeasure)...</para></param>
/// <param name="LinearForceZ">[optional]<para>cast to (ifc.LinearForceMeasure)...</para></param>
/// <param name="LinearMomentX">[optional]<para>cast to (ifc.LinearMomentMeasure)...</para></param>
/// <param name="LinearMomentY">[optional]<para>cast to (ifc.LinearMomentMeasure)...</para></param>
/// <param name="LinearMomentZ">[optional]<para>cast to (ifc.LinearMomentMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StructuralLoadLinearForce(Label Name=null,LinearForceMeasure LinearForceX=null,LinearForceMeasure LinearForceY=null,LinearForceMeasure LinearForceZ=null,LinearMomentMeasure LinearMomentX=null,LinearMomentMeasure LinearMomentY=null,LinearMomentMeasure LinearMomentZ=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.LinearForceX=LinearForceX;this.LinearForceY=LinearForceY;this.LinearForceZ=LinearForceZ;this.LinearMomentX=LinearMomentX;this.LinearMomentY=LinearMomentY;this.LinearMomentZ=LinearMomentZ;this.EndOfLineComment=EndOfLineComment;}
[ifc(2,optional=true)] public LinearForceMeasure LinearForceX; //TYPE
[ifc(3,optional=true)] public LinearForceMeasure LinearForceY; //TYPE
[ifc(4,optional=true)] public LinearForceMeasure LinearForceZ; //TYPE
[ifc(5,optional=true)] public LinearMomentMeasure LinearMomentX; //TYPE
[ifc(6,optional=true)] public LinearMomentMeasure LinearMomentY; //TYPE
[ifc(7,optional=true)] public LinearMomentMeasure LinearMomentZ; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.StructuralLoadStatic(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1122,TableId:3)] public partial class StructuralLoadOrResult:StructuralLoad{//===========================================================
public               StructuralLoadOrResult():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralloadresource/lexical/ifcstructuralloadplanarforce.htm
[ifcSql(TypeGroupId:5,TypeId:1123,TableId:3)] public partial class StructuralLoadPlanarForce:StructuralLoadStatic{//==================================================
public               StructuralLoadPlanarForce():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PlanarForceX">[optional]<para>cast to (ifc.PlanarForceMeasure)...</para></param>
/// <param name="PlanarForceY">[optional]<para>cast to (ifc.PlanarForceMeasure)...</para></param>
/// <param name="PlanarForceZ">[optional]<para>cast to (ifc.PlanarForceMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StructuralLoadPlanarForce(Label Name=null,PlanarForceMeasure PlanarForceX=null,PlanarForceMeasure PlanarForceY=null,PlanarForceMeasure PlanarForceZ=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.PlanarForceX=PlanarForceX;this.PlanarForceY=PlanarForceY;this.PlanarForceZ=PlanarForceZ;this.EndOfLineComment=EndOfLineComment;}
[ifc(2,optional=true)] public PlanarForceMeasure PlanarForceX; //TYPE
[ifc(3,optional=true)] public PlanarForceMeasure PlanarForceY; //TYPE
[ifc(4,optional=true)] public PlanarForceMeasure PlanarForceZ; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.StructuralLoadSingleDisplacementDistortion(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralloadresource/lexical/ifcstructuralloadsingledisplacement.htm
[ifcSql(TypeGroupId:5,TypeId:1124,TableId:3)] public partial class StructuralLoadSingleDisplacement:StructuralLoadStatic{//===========================================
public               StructuralLoadSingleDisplacement():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="DisplacementX">[optional]<para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="DisplacementY">[optional]<para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="DisplacementZ">[optional]<para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="RotationalDisplacementRX">[optional]<para>cast to (ifc.PlaneAngleMeasure)...</para></param>
/// <param name="RotationalDisplacementRY">[optional]<para>cast to (ifc.PlaneAngleMeasure)...</para></param>
/// <param name="RotationalDisplacementRZ">[optional]<para>cast to (ifc.PlaneAngleMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StructuralLoadSingleDisplacement(Label Name=null,LengthMeasure DisplacementX=null,LengthMeasure DisplacementY=null,LengthMeasure DisplacementZ=null,PlaneAngleMeasure RotationalDisplacementRX=null,PlaneAngleMeasure RotationalDisplacementRY=null,PlaneAngleMeasure RotationalDisplacementRZ=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.DisplacementX=DisplacementX;this.DisplacementY=DisplacementY;this.DisplacementZ=DisplacementZ;this.RotationalDisplacementRX=RotationalDisplacementRX;this.RotationalDisplacementRY=RotationalDisplacementRY;this.RotationalDisplacementRZ=RotationalDisplacementRZ;this.EndOfLineComment=EndOfLineComment;}
[ifc(2,optional=true)] public LengthMeasure DisplacementX; //TYPE
[ifc(3,optional=true)] public LengthMeasure DisplacementY; //TYPE
[ifc(4,optional=true)] public LengthMeasure DisplacementZ; //TYPE
[ifc(5,optional=true)] public PlaneAngleMeasure RotationalDisplacementRX; //TYPE
[ifc(6,optional=true)] public PlaneAngleMeasure RotationalDisplacementRY; //TYPE
[ifc(7,optional=true)] public PlaneAngleMeasure RotationalDisplacementRZ; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralloadresource/lexical/ifcstructuralloadsingledisplacementdistortion.htm
[ifcSql(TypeGroupId:5,TypeId:1125,TableId:3)] public partial class StructuralLoadSingleDisplacementDistortion:StructuralLoadSingleDisplacement{//=====================
public               StructuralLoadSingleDisplacementDistortion():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="DisplacementX">[optional]<para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="DisplacementY">[optional]<para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="DisplacementZ">[optional]<para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="RotationalDisplacementRX">[optional]<para>cast to (ifc.PlaneAngleMeasure)...</para></param>
/// <param name="RotationalDisplacementRY">[optional]<para>cast to (ifc.PlaneAngleMeasure)...</para></param>
/// <param name="RotationalDisplacementRZ">[optional]<para>cast to (ifc.PlaneAngleMeasure)...</para></param>
/// <param name="Distortion">[optional]<para>cast to (ifc.CurvatureMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StructuralLoadSingleDisplacementDistortion(Label Name=null,LengthMeasure DisplacementX=null,LengthMeasure DisplacementY=null,LengthMeasure DisplacementZ=null,PlaneAngleMeasure RotationalDisplacementRX=null,PlaneAngleMeasure RotationalDisplacementRY=null,PlaneAngleMeasure RotationalDisplacementRZ=null,CurvatureMeasure Distortion=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.DisplacementX=DisplacementX;this.DisplacementY=DisplacementY;this.DisplacementZ=DisplacementZ;this.RotationalDisplacementRX=RotationalDisplacementRX;this.RotationalDisplacementRY=RotationalDisplacementRY;this.RotationalDisplacementRZ=RotationalDisplacementRZ;this.Distortion=Distortion;this.EndOfLineComment=EndOfLineComment;}
[ifc(8,optional=true)] public CurvatureMeasure Distortion; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.StructuralLoadSingleForceWarping(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralloadresource/lexical/ifcstructuralloadsingleforce.htm
[ifcSql(TypeGroupId:5,TypeId:1126,TableId:3)] public partial class StructuralLoadSingleForce:StructuralLoadStatic{//==================================================
public               StructuralLoadSingleForce():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="ForceX">[optional]<para>cast to (ifc.ForceMeasure)...</para></param>
/// <param name="ForceY">[optional]<para>cast to (ifc.ForceMeasure)...</para></param>
/// <param name="ForceZ">[optional]<para>cast to (ifc.ForceMeasure)...</para></param>
/// <param name="MomentX">[optional]<para>cast to (ifc.TorqueMeasure)...</para></param>
/// <param name="MomentY">[optional]<para>cast to (ifc.TorqueMeasure)...</para></param>
/// <param name="MomentZ">[optional]<para>cast to (ifc.TorqueMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StructuralLoadSingleForce(Label Name=null,ForceMeasure ForceX=null,ForceMeasure ForceY=null,ForceMeasure ForceZ=null,TorqueMeasure MomentX=null,TorqueMeasure MomentY=null,TorqueMeasure MomentZ=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.ForceX=ForceX;this.ForceY=ForceY;this.ForceZ=ForceZ;this.MomentX=MomentX;this.MomentY=MomentY;this.MomentZ=MomentZ;this.EndOfLineComment=EndOfLineComment;}
[ifc(2,optional=true)] public ForceMeasure ForceX; //TYPE
[ifc(3,optional=true)] public ForceMeasure ForceY; //TYPE
[ifc(4,optional=true)] public ForceMeasure ForceZ; //TYPE
[ifc(5,optional=true)] public TorqueMeasure MomentX; //TYPE
[ifc(6,optional=true)] public TorqueMeasure MomentY; //TYPE
[ifc(7,optional=true)] public TorqueMeasure MomentZ; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralloadresource/lexical/ifcstructuralloadsingleforcewarping.htm
[ifcSql(TypeGroupId:5,TypeId:1127,TableId:3)] public partial class StructuralLoadSingleForceWarping:StructuralLoadSingleForce{//======================================
public               StructuralLoadSingleForceWarping():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="ForceX">[optional]<para>cast to (ifc.ForceMeasure)...</para></param>
/// <param name="ForceY">[optional]<para>cast to (ifc.ForceMeasure)...</para></param>
/// <param name="ForceZ">[optional]<para>cast to (ifc.ForceMeasure)...</para></param>
/// <param name="MomentX">[optional]<para>cast to (ifc.TorqueMeasure)...</para></param>
/// <param name="MomentY">[optional]<para>cast to (ifc.TorqueMeasure)...</para></param>
/// <param name="MomentZ">[optional]<para>cast to (ifc.TorqueMeasure)...</para></param>
/// <param name="WarpingMoment">[optional]<para>cast to (ifc.WarpingMomentMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StructuralLoadSingleForceWarping(Label Name=null,ForceMeasure ForceX=null,ForceMeasure ForceY=null,ForceMeasure ForceZ=null,TorqueMeasure MomentX=null,TorqueMeasure MomentY=null,TorqueMeasure MomentZ=null,WarpingMomentMeasure WarpingMoment=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.ForceX=ForceX;this.ForceY=ForceY;this.ForceZ=ForceZ;this.MomentX=MomentX;this.MomentY=MomentY;this.MomentZ=MomentZ;this.WarpingMoment=WarpingMoment;this.EndOfLineComment=EndOfLineComment;}
[ifc(8,optional=true)] public WarpingMomentMeasure WarpingMoment; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.StructuralLoadLinearForce(...)</para><para>new ifc.StructuralLoadPlanarForce(...)</para><para>new ifc.StructuralLoadSingleDisplacement(...)</para><para>new ifc.StructuralLoadSingleDisplacementDistortion(...)</para><para>new ifc.StructuralLoadSingleForce(...)</para><para>new ifc.StructuralLoadSingleForceWarping(...)</para><para>new ifc.StructuralLoadTemperature(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1128,TableId:3)] public partial class StructuralLoadStatic:StructuralLoadOrResult{//=====================================================
public               StructuralLoadStatic():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralloadresource/lexical/ifcstructuralloadtemperature.htm
[ifcSql(TypeGroupId:5,TypeId:1129,TableId:3)] public partial class StructuralLoadTemperature:StructuralLoadStatic{//==================================================
public               StructuralLoadTemperature():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="DeltaTConstant">[optional]<para>cast to (ifc.ThermodynamicTemperatureMeasure)...</para></param>
/// <param name="DeltaTY">[optional]<para>cast to (ifc.ThermodynamicTemperatureMeasure)...</para></param>
/// <param name="DeltaTZ">[optional]<para>cast to (ifc.ThermodynamicTemperatureMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StructuralLoadTemperature(Label Name=null,ThermodynamicTemperatureMeasure DeltaTConstant=null,ThermodynamicTemperatureMeasure DeltaTY=null,ThermodynamicTemperatureMeasure DeltaTZ=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.DeltaTConstant=DeltaTConstant;this.DeltaTY=DeltaTY;this.DeltaTZ=DeltaTZ;this.EndOfLineComment=EndOfLineComment;}
[ifc(2,optional=true)] public ThermodynamicTemperatureMeasure DeltaTConstant; //TYPE
[ifc(3,optional=true)] public ThermodynamicTemperatureMeasure DeltaTY; //TYPE
[ifc(4,optional=true)] public ThermodynamicTemperatureMeasure DeltaTZ; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.StructuralCurveMember(...)</para><para>new ifc.StructuralCurveMemberVarying(...)</para><para>new ifc.StructuralSurfaceMember(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1130,TableId:3)] public partial class StructuralMember:StructuralItem{//=================================================================
public               StructuralMember():base(){}// abstract
/// <summary>INVERSE: ConnectedBy of RelConnectsStructuralMember for RelatingStructuralMember</summary>
[ifcInverse(For:"RelatingStructuralMember")] public LIST<RelConnectsStructuralMember> ConnectedBy;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.StructuralPlanarActionVarying(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralanalysisdomain/lexical/ifcstructuralplanaraction.htm
[ifcSql(TypeGroupId:5,TypeId:1131,TableId:3)] public partial class StructuralPlanarAction:StructuralSurfaceAction{//==================================================
public               StructuralPlanarAction():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="AppliedLoad"></param>
/// <param name="GlobalOrLocal"><para>GlobalOrLocalEnum</para></param>
/// <param name="DestabilizingLoad">[optional]<para>cast to (ifc.Boolean)...</para></param>
/// <param name="ProjectedOrTrue">[optional]<para>ProjectedOrTrueLengthEnum</para></param>
/// <param name="PredefinedType"><para>StructuralSurfaceActivityTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StructuralPlanarAction(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Label ObjectType,ObjectPlacement _ObjectPlacement,ProductRepresentation _Representation,StructuralLoad AppliedLoad,GlobalOrLocalEnum GlobalOrLocal,Boolean DestabilizingLoad,ProjectedOrTrueLengthEnum? ProjectedOrTrue,StructuralSurfaceActivityTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.AppliedLoad=AppliedLoad;this.GlobalOrLocal=GlobalOrLocal;this.DestabilizingLoad=DestabilizingLoad;this.ProjectedOrTrue=ProjectedOrTrue;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               StructuralPlanarAction(StructuralLoad AppliedLoad,GlobalOrLocalEnum GlobalOrLocal,StructuralSurfaceActivityTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.AppliedLoad=AppliedLoad;this.GlobalOrLocal=GlobalOrLocal;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralanalysisdomain/lexical/ifcstructuralpointaction.htm
[ifcSql(TypeGroupId:5,TypeId:1132,TableId:3)] public partial class StructuralPointAction:StructuralAction{//==========================================================
public               StructuralPointAction():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="AppliedLoad"></param>
/// <param name="GlobalOrLocal"><para>GlobalOrLocalEnum</para></param>
/// <param name="DestabilizingLoad">[optional]<para>cast to (ifc.Boolean)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StructuralPointAction(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Label ObjectType,ObjectPlacement _ObjectPlacement,ProductRepresentation _Representation,StructuralLoad AppliedLoad,GlobalOrLocalEnum GlobalOrLocal,Boolean DestabilizingLoad=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.AppliedLoad=AppliedLoad;this.GlobalOrLocal=GlobalOrLocal;this.DestabilizingLoad=DestabilizingLoad;this.EndOfLineComment=EndOfLineComment;}
public               StructuralPointAction(StructuralLoad AppliedLoad,GlobalOrLocalEnum GlobalOrLocal,string EndOfLineComment=null):base(){AddNext();this.AppliedLoad=AppliedLoad;this.GlobalOrLocal=GlobalOrLocal;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralanalysisdomain/lexical/ifcstructuralpointconnection.htm
[ifcSql(TypeGroupId:5,TypeId:1133,TableId:3)] public partial class StructuralPointConnection:StructuralConnection{//==================================================
public               StructuralPointConnection():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="AppliedCondition">[optional]<para>new ifc.BoundaryEdgeCondition(...)</para><para>new ifc.BoundaryFaceCondition(...)</para><para>new ifc.BoundaryNodeCondition(...)</para></param>
/// <param name="ConditionCoordinateSystem">[optional]<para>new ifc.Axis2Placement3D(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StructuralPointConnection(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,BoundaryCondition AppliedCondition=null,Axis2Placement3D ConditionCoordinateSystem=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.AppliedCondition=AppliedCondition;this.ConditionCoordinateSystem=ConditionCoordinateSystem;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public Axis2Placement3D ConditionCoordinateSystem; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralanalysisdomain/lexical/ifcstructuralpointreaction.htm
[ifcSql(TypeGroupId:5,TypeId:1134,TableId:3)] public partial class StructuralPointReaction:StructuralReaction{//======================================================
public               StructuralPointReaction():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="AppliedLoad"></param>
/// <param name="GlobalOrLocal"><para>GlobalOrLocalEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StructuralPointReaction(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Label ObjectType,ObjectPlacement _ObjectPlacement,ProductRepresentation _Representation,StructuralLoad AppliedLoad,GlobalOrLocalEnum GlobalOrLocal,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.AppliedLoad=AppliedLoad;this.GlobalOrLocal=GlobalOrLocal;this.EndOfLineComment=EndOfLineComment;}
public               StructuralPointReaction(StructuralLoad AppliedLoad,GlobalOrLocalEnum GlobalOrLocal,string EndOfLineComment=null):base(){AddNext();this.AppliedLoad=AppliedLoad;this.GlobalOrLocal=GlobalOrLocal;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.StructuralPointReaction(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1135,TableId:3)] public partial class StructuralReaction:StructuralActivity{//===========================================================
public               StructuralReaction():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralanalysisdomain/lexical/ifcstructuralresultgroup.htm
[ifcSql(TypeGroupId:5,TypeId:1136,TableId:3)] public partial class StructuralResultGroup:Group{//=====================================================================
public               StructuralResultGroup():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="TheoryType"><para>AnalysisTheoryTypeEnum</para></param>
/// <param name="ResultForLoadGroup">[optional]<para>new ifc.StructuralLoadGroup(...)</para></param>
/// <param name="IsLinear"><para>cast to (ifc.Boolean)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StructuralResultGroup(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Label ObjectType,AnalysisTheoryTypeEnum TheoryType,StructuralLoadGroup ResultForLoadGroup,Boolean IsLinear,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.TheoryType=TheoryType;this.ResultForLoadGroup=ResultForLoadGroup;this.IsLinear=IsLinear;this.EndOfLineComment=EndOfLineComment;}
public               StructuralResultGroup(AnalysisTheoryTypeEnum TheoryType,Boolean IsLinear,string EndOfLineComment=null):base(){AddNext();this.TheoryType=TheoryType;this.IsLinear=IsLinear;this.EndOfLineComment=EndOfLineComment;}
[ifc(6)] public AnalysisTheoryTypeEnum TheoryType; //ENUM
[ifc(7,optional=true)] public StructuralLoadGroup ResultForLoadGroup; //ENTITY
[ifc(8)] public Boolean IsLinear; //TYPE
/// <summary>INVERSE: ResultGroupFor of StructuralAnalysisModel for HasResults</summary>
[ifcInverse(For:"HasResults")] public StructuralAnalysisModel ResultGroupFor;
public override void AssignInverseElements(){if (ResultForLoadGroup!=null) ResultForLoadGroup.SourceOfResultGroup=this;
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.StructuralPlanarAction(...)</para><para>new ifc.StructuralPlanarActionVarying(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralanalysisdomain/lexical/ifcstructuralsurfaceaction.htm
[ifcSql(TypeGroupId:5,TypeId:1137,TableId:3)] public partial class StructuralSurfaceAction:StructuralAction{//========================================================
public               StructuralSurfaceAction():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="AppliedLoad"></param>
/// <param name="GlobalOrLocal"><para>GlobalOrLocalEnum</para></param>
/// <param name="DestabilizingLoad">[optional]<para>cast to (ifc.Boolean)...</para></param>
/// <param name="ProjectedOrTrue">[optional]<para>ProjectedOrTrueLengthEnum</para></param>
/// <param name="PredefinedType"><para>StructuralSurfaceActivityTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StructuralSurfaceAction(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Label ObjectType,ObjectPlacement _ObjectPlacement,ProductRepresentation _Representation,StructuralLoad AppliedLoad,GlobalOrLocalEnum GlobalOrLocal,Boolean DestabilizingLoad,ProjectedOrTrueLengthEnum? ProjectedOrTrue,StructuralSurfaceActivityTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.AppliedLoad=AppliedLoad;this.GlobalOrLocal=GlobalOrLocal;this.DestabilizingLoad=DestabilizingLoad;this.ProjectedOrTrue=ProjectedOrTrue;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               StructuralSurfaceAction(StructuralLoad AppliedLoad,GlobalOrLocalEnum GlobalOrLocal,StructuralSurfaceActivityTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.AppliedLoad=AppliedLoad;this.GlobalOrLocal=GlobalOrLocal;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(11,optional=true)] public ProjectedOrTrueLengthEnum? ProjectedOrTrue; //ENUM
[ifc(12)] public StructuralSurfaceActivityTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralanalysisdomain/lexical/ifcstructuralsurfaceconnection.htm
[ifcSql(TypeGroupId:5,TypeId:1138,TableId:3)] public partial class StructuralSurfaceConnection:StructuralConnection{//================================================
public               StructuralSurfaceConnection():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="AppliedCondition">[optional]<para>new ifc.BoundaryEdgeCondition(...)</para><para>new ifc.BoundaryFaceCondition(...)</para><para>new ifc.BoundaryNodeCondition(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StructuralSurfaceConnection(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,BoundaryCondition AppliedCondition=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.AppliedCondition=AppliedCondition;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.StructuralSurfaceMemberVarying(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralanalysisdomain/lexical/ifcstructuralsurfacemember.htm
[ifcSql(TypeGroupId:5,TypeId:1139,TableId:3)] public partial class StructuralSurfaceMember:StructuralMember{//========================================================
public               StructuralSurfaceMember():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="PredefinedType"><para>StructuralSurfaceMemberTypeEnum</para></param>
/// <param name="Thickness">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StructuralSurfaceMember(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Label ObjectType,ObjectPlacement _ObjectPlacement,ProductRepresentation _Representation,StructuralSurfaceMemberTypeEnum PredefinedType,PositiveLengthMeasure Thickness=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.PredefinedType=PredefinedType;this.Thickness=Thickness;this.EndOfLineComment=EndOfLineComment;}
public               StructuralSurfaceMember(StructuralSurfaceMemberTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(8)] public StructuralSurfaceMemberTypeEnum PredefinedType; //ENUM
[ifc(9,optional=true)] public PositiveLengthMeasure Thickness; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralanalysisdomain/lexical/ifcstructuralsurfacemembervarying.htm
[ifcSql(TypeGroupId:5,TypeId:1140,TableId:3)] public partial class StructuralSurfaceMemberVarying:StructuralSurfaceMember{//==========================================
public               StructuralSurfaceMemberVarying():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="PredefinedType"><para>StructuralSurfaceMemberTypeEnum</para></param>
/// <param name="Thickness">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StructuralSurfaceMemberVarying(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Label ObjectType,ObjectPlacement _ObjectPlacement,ProductRepresentation _Representation,StructuralSurfaceMemberTypeEnum PredefinedType,PositiveLengthMeasure Thickness=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.PredefinedType=PredefinedType;this.Thickness=Thickness;this.EndOfLineComment=EndOfLineComment;}
public               StructuralSurfaceMemberVarying(StructuralSurfaceMemberTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.StyledRepresentation(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1142,TableId:3)] public partial class StyleModel:Representation{//=======================================================================
public               StyleModel():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.AnnotationOccurrence(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifcstyleditem.htm
[ifcSql(TypeGroupId:5,TypeId:1143,TableId:3)] public partial class StyledItem:RepresentationItem{//===================================================================
public               StyledItem():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Item">[optional]<para>new ifc.AnnotationFillArea(...)</para><para>new ifc.BooleanResult(...)</para><para>new ifc.BooleanClippingResult(...)</para><para>new ifc.BoundingBox(...)</para><para>new ifc.CartesianPointList3D(...)</para><para>new ifc.CartesianTransformationOperator2D(...)</para><para>new ifc.CartesianTransformationOperator2DnonUniform(...)</para><para>new ifc.CartesianTransformationOperator3D(...)</para><para>new ifc.CartesianTransformationOperator3DnonUniform(...)</para><para>new ifc.CompositeCurveSegment(...)</para><para>new ifc.Block(...)</para><para>new ifc.RectangularPyramid(...)</para><para>new ifc.RightCircularCone(...)</para><para>new ifc.RightCircularCylinder(...)</para><para>new ifc.Sphere(...)</para><para>new ifc.BezierCurve(...)</para><para>new ifc.CompositeCurve(...)</para><para>new ifc.CompositeCurveOnSurface(...)</para><para>new ifc.BoundaryCurve(...)</para><para>new ifc.2DCompositeCurve(...)</para><para>new ifc.Polyline(...)</para><para>new ifc.TrimmedCurve(...)</para><para>new ifc.Circle(...)</para><para>new ifc.Ellipse(...)</para><para>new ifc.Line(...)</para><para>new ifc.OffsetCurve2D(...)</para><para>new ifc.OffsetCurve3D(...)</para><para>new ifc.Direction(...)</para><para>new ifc.FaceBasedSurfaceModel(...)</para><para>new ifc.FillAreaStyleHatching(...)</para><para>new ifc.FillAreaStyleTiles(...)</para><para>new ifc.GeometricSet(...)</para><para>new ifc.GeometricCurveSet(...)</para><para>new ifc.HalfSpaceSolid(...)</para><para>new ifc.BoxedHalfSpace(...)</para><para>new ifc.PolygonalBoundedHalfSpace(...)</para><para>new ifc.LightSourceAmbient(...)</para><para>new ifc.LightSourceDirectional(...)</para><para>new ifc.LightSourceGoniometric(...)</para><para>new ifc.LightSourcePositional(...)</para><para>new ifc.LightSourceSpot(...)</para><para>new ifc.Axis1Placement(...)</para><para>new ifc.Axis2Placement2D(...)</para><para>new ifc.Axis2Placement3D(...)</para><para>new ifc.PlanarExtent(...)</para><para>new ifc.PlanarBox(...)</para><para>new ifc.CartesianPoint(...)</para><para>new ifc.PointOnCurve(...)</para><para>new ifc.PointOnSurface(...)</para><para>new ifc.SectionedSpine(...)</para><para>new ifc.ShellBasedSurfaceModel(...)</para><para>new ifc.TextLiteral(...)</para><para>new ifc.Vector(...)</para><para>new ifc.AnnotationSurface(...)</para><para>new ifc.DefinedSymbol(...)</para><para>new ifc.DraughtingCallout(...)</para><para>new ifc.FillAreaStyleTileSymbolWithStyle(...)</para><para>new ifc.OneDirectionRepeatFactor(...)</para><para>new ifc.MappedItem(...)</para><para>new ifc.StyledItem(...)</para></param>
/// <param name="Styles"><para>Set1toUnbounded_StyleAssignmentSelect</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StyledItem(RepresentationItem Item,Set1toUnbounded_StyleAssignmentSelect Styles,Label Name=null,string EndOfLineComment=null):base(){AddNext();this.Item=Item;this.Styles=Styles;this.Name=Name;this.EndOfLineComment=EndOfLineComment;}
public               StyledItem(Set1toUnbounded_StyleAssignmentSelect Styles,string EndOfLineComment=null):base(){AddNext();this.Styles=Styles;this.EndOfLineComment=EndOfLineComment;}
[ifc(1,optional=true)] public RepresentationItem Item; //ENTITY
[ifc(2)] public Set1toUnbounded_StyleAssignmentSelect Styles; //ListType1d
[ifc(3,optional=true)] public Label Name; //TYPE
public override void AssignInverseElements(){if (Item!=null) Item.StyledByItem=this;
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcrepresentationresource/lexical/ifcstyledrepresentation.htm
[ifcSql(TypeGroupId:5,TypeId:1144,TableId:3)] public partial class StyledRepresentation:StyleModel{//=================================================================
public               StyledRepresentation():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ContextOfItems"><para>new ifc.GeometricRepresentationContext(...)</para><para>new ifc.GeometricRepresentationSubContext(...)</para></param>
/// <param name="RepresentationIdentifier">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="RepresentationType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Items"><para>Set1toUnbounded_RepresentationItem</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StyledRepresentation(RepresentationContext ContextOfItems,Label RepresentationIdentifier,Label RepresentationType,Set1toUnbounded_RepresentationItem Items,string EndOfLineComment=null):base(){AddNext();this.ContextOfItems=ContextOfItems;this.RepresentationIdentifier=RepresentationIdentifier;this.RepresentationType=RepresentationType;this.Items=Items;this.EndOfLineComment=EndOfLineComment;}
public               StyledRepresentation(RepresentationContext ContextOfItems,Set1toUnbounded_RepresentationItem Items,string EndOfLineComment=null):base(){AddNext();this.ContextOfItems=ContextOfItems;this.Items=Items;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcconstructionmgmtdomain/lexical/ifcsubcontractresource.htm
[ifcSql(TypeGroupId:5,TypeId:1145,TableId:3)] public partial class SubContractResource:ConstructionResource{//========================================================
public               SubContractResource():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Identification">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="LongDescription">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="Usage">[optional]<para>new ifc.ResourceTime(...)</para></param>
/// <param name="BaseCosts">[optional]<para>List1toUnbounded_AppliedValue</para></param>
/// <param name="BaseQuantity">[optional]<para>new ifc.PhysicalComplexQuantity(...)</para></param>
/// <param name="PredefinedType">[optional]<para>SubContractResourceTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               SubContractResource(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,Identifier Identification=null,Text LongDescription=null,ResourceTime Usage=null,List1toUnbounded_AppliedValue BaseCosts=null,PhysicalQuantity BaseQuantity=null,SubContractResourceTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.Identification=Identification;this.LongDescription=LongDescription;this.Usage=Usage;this.BaseCosts=BaseCosts;this.BaseQuantity=BaseQuantity;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(11,optional=true)] public SubContractResourceTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifctopologyresource/lexical/ifcsubedge.htm
[ifcSql(TypeGroupId:5,TypeId:1147,TableId:3)] public partial class Subedge:Edge{//====================================================================================
public               Subedge():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="EdgeStart"><para>new ifc.Vertex(...)</para><para>new ifc.VertexPoint(...)</para></param>
/// <param name="EdgeEnd"><para>new ifc.Vertex(...)</para><para>new ifc.VertexPoint(...)</para></param>
/// <param name="ParentEdge"><para>new ifc.Edge(...)</para><para>new ifc.EdgeCurve(...)</para><para>new ifc.OrientedEdge(...)</para><para>new ifc.Subedge(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Subedge(Vertex EdgeStart,Vertex EdgeEnd,Edge ParentEdge,string EndOfLineComment=null):base(){AddNext();this.EdgeStart=EdgeStart;this.EdgeEnd=EdgeEnd;this.ParentEdge=ParentEdge;this.EndOfLineComment=EndOfLineComment;}
[ifc(3)] public Edge ParentEdge; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.BoundedSurface(...)</para><para>new ifc.CurveBoundedPlane(...)</para><para>new ifc.RectangularTrimmedSurface(...)</para><para>new ifc.ElementarySurface(...)</para><para>new ifc.Plane(...)</para><para>new ifc.SweptSurface(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1148,TableId:3)] public partial class Surface:GeometricRepresentationItem{//=============================================================
public               Surface():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricmodelresource/lexical/ifcsurfacecurvesweptareasolid.htm
[ifcSql(TypeGroupId:5,TypeId:1149,TableId:3)] public partial class SurfaceCurveSweptAreaSolid:SweptAreaSolid{//=======================================================
public               SurfaceCurveSweptAreaSolid():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="SweptArea"><para>new ifc.ProfileDef(...)</para><para>new ifc.ArbitraryClosedProfileDef(...)</para><para>new ifc.ArbitraryProfileDefWithVoids(...)</para><para>new ifc.ArbitraryOpenProfileDef(...)</para><para>new ifc.CenterLineProfileDef(...)</para><para>new ifc.CompositeProfileDef(...)</para><para>new ifc.DerivedProfileDef(...)</para><para>new ifc.AsymmetricIShapeProfileDef(...)</para><para>new ifc.CShapeProfileDef(...)</para><para>new ifc.CircleProfileDef(...)</para><para>new ifc.CircleHollowProfileDef(...)</para><para>new ifc.EllipseProfileDef(...)</para><para>new ifc.IShapeProfileDef(...)</para><para>new ifc.LShapeProfileDef(...)</para><para>new ifc.RectangleProfileDef(...)</para><para>new ifc.TShapeProfileDef(...)</para><para>new ifc.TrapeziumProfileDef(...)</para><para>new ifc.UShapeProfileDef(...)</para><para>new ifc.ZShapeProfileDef(...)</para><para>new ifc.CraneRailAShapeProfileDef(...)</para><para>new ifc.CraneRailFShapeProfileDef(...)</para></param>
/// <param name="Position">[optional]<para>new ifc.Axis2Placement3D(...)</para></param>
/// <param name="Directrix"><para>new ifc.BezierCurve(...)</para><para>new ifc.CompositeCurve(...)</para><para>new ifc.CompositeCurveOnSurface(...)</para><para>new ifc.BoundaryCurve(...)</para><para>new ifc.2DCompositeCurve(...)</para><para>new ifc.Polyline(...)</para><para>new ifc.TrimmedCurve(...)</para><para>new ifc.Circle(...)</para><para>new ifc.Ellipse(...)</para><para>new ifc.Line(...)</para><para>new ifc.OffsetCurve2D(...)</para><para>new ifc.OffsetCurve3D(...)</para></param>
/// <param name="StartParam">[optional]<para>cast to (ifc.ParameterValue)...</para></param>
/// <param name="EndParam">[optional]<para>cast to (ifc.ParameterValue)...</para></param>
/// <param name="ReferenceSurface"><para>new ifc.CurveBoundedPlane(...)</para><para>new ifc.RectangularTrimmedSurface(...)</para><para>new ifc.Plane(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               SurfaceCurveSweptAreaSolid(ProfileDef SweptArea,Axis2Placement3D Position,Curve Directrix,ParameterValue StartParam,ParameterValue EndParam,Surface ReferenceSurface,string EndOfLineComment=null):base(){AddNext();this.SweptArea=SweptArea;this.Position=Position;this.Directrix=Directrix;this.StartParam=StartParam;this.EndParam=EndParam;this.ReferenceSurface=ReferenceSurface;this.EndOfLineComment=EndOfLineComment;}
public               SurfaceCurveSweptAreaSolid(ProfileDef SweptArea,Curve Directrix,Surface ReferenceSurface,string EndOfLineComment=null):base(){AddNext();this.SweptArea=SweptArea;this.Directrix=Directrix;this.ReferenceSurface=ReferenceSurface;this.EndOfLineComment=EndOfLineComment;}
[ifc(3)] public Curve Directrix; //ENTITY
[ifc(4,optional=true)] public ParameterValue StartParam; //TYPE
[ifc(5,optional=true)] public ParameterValue EndParam; //TYPE
[ifc(6)] public Surface ReferenceSurface; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometryresource/lexical/ifcsurfaceoflinearextrusion.htm
[ifcSql(TypeGroupId:5,TypeId:1151,TableId:3)] public partial class SurfaceOfLinearExtrusion:SweptSurface{//===========================================================
public               SurfaceOfLinearExtrusion():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="SweptCurve"><para>new ifc.ProfileDef(...)</para><para>new ifc.ArbitraryClosedProfileDef(...)</para><para>new ifc.ArbitraryProfileDefWithVoids(...)</para><para>new ifc.ArbitraryOpenProfileDef(...)</para><para>new ifc.CenterLineProfileDef(...)</para><para>new ifc.CompositeProfileDef(...)</para><para>new ifc.DerivedProfileDef(...)</para><para>new ifc.AsymmetricIShapeProfileDef(...)</para><para>new ifc.CShapeProfileDef(...)</para><para>new ifc.CircleProfileDef(...)</para><para>new ifc.CircleHollowProfileDef(...)</para><para>new ifc.EllipseProfileDef(...)</para><para>new ifc.IShapeProfileDef(...)</para><para>new ifc.LShapeProfileDef(...)</para><para>new ifc.RectangleProfileDef(...)</para><para>new ifc.TShapeProfileDef(...)</para><para>new ifc.TrapeziumProfileDef(...)</para><para>new ifc.UShapeProfileDef(...)</para><para>new ifc.ZShapeProfileDef(...)</para><para>new ifc.CraneRailAShapeProfileDef(...)</para><para>new ifc.CraneRailFShapeProfileDef(...)</para></param>
/// <param name="Position">[optional]<para>new ifc.Axis2Placement3D(...)</para></param>
/// <param name="ExtrudedDirection"><para>new ifc.Direction(...)</para></param>
/// <param name="Depth"><para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               SurfaceOfLinearExtrusion(ProfileDef SweptCurve,Axis2Placement3D Position,Direction ExtrudedDirection,LengthMeasure Depth,string EndOfLineComment=null):base(){AddNext();this.SweptCurve=SweptCurve;this.Position=Position;this.ExtrudedDirection=ExtrudedDirection;this.Depth=Depth;this.EndOfLineComment=EndOfLineComment;}
public               SurfaceOfLinearExtrusion(ProfileDef SweptCurve,Direction ExtrudedDirection,LengthMeasure Depth):base(){AddNext();this.SweptCurve=SweptCurve;this.ExtrudedDirection=ExtrudedDirection;this.Depth=Depth;}
[ifc(3)] public Direction ExtrudedDirection; //ENTITY
[ifc(4)] public LengthMeasure Depth; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometryresource/lexical/ifcsurfaceofrevolution.htm
[ifcSql(TypeGroupId:5,TypeId:1152,TableId:3)] public partial class SurfaceOfRevolution:SweptSurface{//================================================================
public               SurfaceOfRevolution():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="SweptCurve"><para>new ifc.ProfileDef(...)</para><para>new ifc.ArbitraryClosedProfileDef(...)</para><para>new ifc.ArbitraryProfileDefWithVoids(...)</para><para>new ifc.ArbitraryOpenProfileDef(...)</para><para>new ifc.CenterLineProfileDef(...)</para><para>new ifc.CompositeProfileDef(...)</para><para>new ifc.DerivedProfileDef(...)</para><para>new ifc.AsymmetricIShapeProfileDef(...)</para><para>new ifc.CShapeProfileDef(...)</para><para>new ifc.CircleProfileDef(...)</para><para>new ifc.CircleHollowProfileDef(...)</para><para>new ifc.EllipseProfileDef(...)</para><para>new ifc.IShapeProfileDef(...)</para><para>new ifc.LShapeProfileDef(...)</para><para>new ifc.RectangleProfileDef(...)</para><para>new ifc.TShapeProfileDef(...)</para><para>new ifc.TrapeziumProfileDef(...)</para><para>new ifc.UShapeProfileDef(...)</para><para>new ifc.ZShapeProfileDef(...)</para><para>new ifc.CraneRailAShapeProfileDef(...)</para><para>new ifc.CraneRailFShapeProfileDef(...)</para></param>
/// <param name="Position">[optional]<para>new ifc.Axis2Placement3D(...)</para></param>
/// <param name="AxisPosition"><para>new ifc.Axis1Placement(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               SurfaceOfRevolution(ProfileDef SweptCurve,Axis2Placement3D Position,Axis1Placement AxisPosition,string EndOfLineComment=null):base(){AddNext();this.SweptCurve=SweptCurve;this.Position=Position;this.AxisPosition=AxisPosition;this.EndOfLineComment=EndOfLineComment;}
public               SurfaceOfRevolution(ProfileDef SweptCurve,Axis1Placement AxisPosition):base(){AddNext();this.SweptCurve=SweptCurve;this.AxisPosition=AxisPosition;}
[ifc(3)] public Axis1Placement AxisPosition; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifcsurfacestyle.htm
[ifcSql(TypeGroupId:5,TypeId:1154,TableId:3)] public partial class SurfaceStyle:PresentationStyle{//==================================================================
public               SurfaceStyle():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Side"><para>SurfaceSide</para></param>
/// <param name="Styles"><para>Set1to5_SurfaceStyleElementSelect</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               SurfaceStyle(Label Name,SurfaceSide Side,Set1to5_SurfaceStyleElementSelect Styles,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Side=Side;this.Styles=Styles;this.EndOfLineComment=EndOfLineComment;}
public               SurfaceStyle(SurfaceSide Side,Set1to5_SurfaceStyleElementSelect Styles):base(){AddNext();this.Side=Side;this.Styles=Styles;}
[ifc(2)] public SurfaceSide Side; //ENUM
[ifc(3)] public Set1to5_SurfaceStyleElementSelect Styles; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifcsurfacestylelighting.htm
[ifcSql(TypeGroupId:5,TypeId:1155,TableId:3)] public partial class SurfaceStyleLighting:PresentationItem{//===========================================================
public               SurfaceStyleLighting():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="DiffuseTransmissionColour"><para>new ifc.ColourRgb(...)</para></param>
/// <param name="DiffuseReflectionColour"><para>new ifc.ColourRgb(...)</para></param>
/// <param name="TransmissionColour"><para>new ifc.ColourRgb(...)</para></param>
/// <param name="ReflectanceColour"><para>new ifc.ColourRgb(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               SurfaceStyleLighting(ColourRgb DiffuseTransmissionColour,ColourRgb DiffuseReflectionColour,ColourRgb TransmissionColour,ColourRgb ReflectanceColour,string EndOfLineComment=null):base(){AddNext();this.DiffuseTransmissionColour=DiffuseTransmissionColour;this.DiffuseReflectionColour=DiffuseReflectionColour;this.TransmissionColour=TransmissionColour;this.ReflectanceColour=ReflectanceColour;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public ColourRgb DiffuseTransmissionColour; //ENTITY
[ifc(2)] public ColourRgb DiffuseReflectionColour; //ENTITY
[ifc(3)] public ColourRgb TransmissionColour; //ENTITY
[ifc(4)] public ColourRgb ReflectanceColour; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifcsurfacestylerefraction.htm
[ifcSql(TypeGroupId:5,TypeId:1156,TableId:3)] public partial class SurfaceStyleRefraction:PresentationItem{//=========================================================
public               SurfaceStyleRefraction():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="RefractionIndex">[optional]<para>cast to (ifc.Real)...</para></param>
/// <param name="DispersionFactor">[optional]<para>cast to (ifc.Real)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               SurfaceStyleRefraction(Real RefractionIndex=null,Real DispersionFactor=null,string EndOfLineComment=null):base(){AddNext();this.RefractionIndex=RefractionIndex;this.DispersionFactor=DispersionFactor;this.EndOfLineComment=EndOfLineComment;}
[ifc(1,optional=true)] public Real RefractionIndex; //TYPE
[ifc(2,optional=true)] public Real DispersionFactor; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifcsurfacestylerendering.htm
[ifcSql(TypeGroupId:5,TypeId:1157,TableId:3)] public partial class SurfaceStyleRendering:SurfaceStyleShading{//=======================================================
public               SurfaceStyleRendering():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="SurfaceColour"><para>new ifc.ColourRgb(...)</para></param>
/// <param name="Transparency">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="DiffuseColour">[optional]<para>new ifc.ColourOrFactor(new NormalisedRatioMeasure(...))...</para><para>new ifc.ColourOrFactor(new ColourRgb(...))...</para></param>
/// <param name="TransmissionColour">[optional]<para>new ifc.ColourOrFactor(new NormalisedRatioMeasure(...))...</para><para>new ifc.ColourOrFactor(new ColourRgb(...))...</para></param>
/// <param name="DiffuseTransmissionColour">[optional]<para>new ifc.ColourOrFactor(new NormalisedRatioMeasure(...))...</para><para>new ifc.ColourOrFactor(new ColourRgb(...))...</para></param>
/// <param name="ReflectionColour">[optional]<para>new ifc.ColourOrFactor(new NormalisedRatioMeasure(...))...</para><para>new ifc.ColourOrFactor(new ColourRgb(...))...</para></param>
/// <param name="SpecularColour">[optional]<para>new ifc.ColourOrFactor(new NormalisedRatioMeasure(...))...</para><para>new ifc.ColourOrFactor(new ColourRgb(...))...</para></param>
/// <param name="SpecularHighlight">[optional]<para>new ifc.SpecularHighlightSelect(new SpecularExponent(...))...</para><para>new ifc.SpecularHighlightSelect(new SpecularRoughness(...))...</para></param>
/// <param name="ReflectanceMethod"><para>ReflectanceMethodEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               SurfaceStyleRendering(ColourRgb SurfaceColour,NormalisedRatioMeasure Transparency,ColourOrFactor DiffuseColour,ColourOrFactor TransmissionColour,ColourOrFactor DiffuseTransmissionColour,ColourOrFactor ReflectionColour,ColourOrFactor SpecularColour,SpecularHighlightSelect SpecularHighlight,ReflectanceMethodEnum ReflectanceMethod,string EndOfLineComment=null):base(){AddNext();this.SurfaceColour=SurfaceColour;this.Transparency=Transparency;this.DiffuseColour=DiffuseColour;this.TransmissionColour=TransmissionColour;this.DiffuseTransmissionColour=DiffuseTransmissionColour;this.ReflectionColour=ReflectionColour;this.SpecularColour=SpecularColour;this.SpecularHighlight=SpecularHighlight;this.ReflectanceMethod=ReflectanceMethod;this.EndOfLineComment=EndOfLineComment;}
public               SurfaceStyleRendering(ColourRgb SurfaceColour,ReflectanceMethodEnum ReflectanceMethod,string EndOfLineComment=null):base(){AddNext();this.SurfaceColour=SurfaceColour;this.ReflectanceMethod=ReflectanceMethod;this.EndOfLineComment=EndOfLineComment;}
[ifc(2,optional=true)] public NormalisedRatioMeasure Transparency; //TYPE
[ifc(3,optional=true)] public ColourOrFactor DiffuseColour; //SELECT
[ifc(4,optional=true)] public ColourOrFactor TransmissionColour; //SELECT
[ifc(5,optional=true)] public ColourOrFactor DiffuseTransmissionColour; //SELECT
[ifc(6,optional=true)] public ColourOrFactor ReflectionColour; //SELECT
[ifc(7,optional=true)] public ColourOrFactor SpecularColour; //SELECT
[ifc(8,optional=true)] public SpecularHighlightSelect SpecularHighlight; //SELECT
[ifc(9)] public ReflectanceMethodEnum ReflectanceMethod; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.SurfaceStyleRendering(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifcsurfacestyleshading.htm
[ifcSql(TypeGroupId:5,TypeId:1158,TableId:3)] public partial class SurfaceStyleShading:PresentationItem{//============================================================
public               SurfaceStyleShading():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="SurfaceColour"><para>new ifc.ColourRgb(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               SurfaceStyleShading(ColourRgb SurfaceColour,string EndOfLineComment=null):base(){AddNext();this.SurfaceColour=SurfaceColour;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public ColourRgb SurfaceColour; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifcsurfacestylewithtextures.htm
[ifcSql(TypeGroupId:5,TypeId:1159,TableId:3)] public partial class SurfaceStyleWithTextures:PresentationItem{//=======================================================
public               SurfaceStyleWithTextures():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Textures"><para>List1toUnbounded_SurfaceTexture</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               SurfaceStyleWithTextures(List1toUnbounded_SurfaceTexture Textures,string EndOfLineComment=null):base(){AddNext();this.Textures=Textures;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public List1toUnbounded_SurfaceTexture Textures; //ListType1d
public override void AssignInverseElements(){if (Textures!=null) foreach (SurfaceTexture __SurfaceTexture in Textures) if (__SurfaceTexture is SurfaceTexture) {if (((SurfaceTexture)__SurfaceTexture).UsedInStyles==null) ((SurfaceTexture)__SurfaceTexture).UsedInStyles=new LIST<SurfaceStyleWithTextures>();((SurfaceTexture)__SurfaceTexture).UsedInStyles.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.BlobTexture(...)</para><para>new ifc.ImageTexture(...)</para><para>new ifc.PixelTexture(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1160,TableId:3)] public partial class SurfaceTexture:PresentationItem{//=================================================================
public               SurfaceTexture():base(){}// abstract
[ifc(1)] public Boolean RepeatS; //TYPE
[ifc(2)] public Boolean RepeatT; //TYPE
[ifc(3,optional=true)] public Identifier Mode; //TYPE
[ifc(4,optional=true)] public CartesianTransformationOperator2D TextureTransform; //ENTITY
[ifc(5,optional=true)] public List1toUnbounded_Identifier Parameter; //ListType1d
/// <summary>INVERSE: UsedInStyles of SurfaceStyleWithTextures for Textures</summary>
[ifcInverse(For:"Textures")] public LIST<SurfaceStyleWithTextures> UsedInStyles;
/// <summary>INVERSE: IsMappedBy of TextureCoordinate for Maps</summary>
[ifcInverse(For:"Maps")] public LIST<TextureCoordinate> IsMappedBy;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ExtrudedAreaSolid(...)</para><para>new ifc.FixedReferenceSweptAreaSolid(...)</para><para>new ifc.RevolvedAreaSolid(...)</para><para>new ifc.SurfaceCurveSweptAreaSolid(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1161,TableId:3)] public partial class SweptAreaSolid:SolidModel{//=======================================================================
public               SweptAreaSolid():base(){}// abstract
[ifc(1)] public ProfileDef SweptArea; //ENTITY
[ifc(2,optional=true)] public Axis2Placement3D Position; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricmodelresource/lexical/ifcsweptdisksolid.htm
[ifcSql(TypeGroupId:5,TypeId:1162,TableId:3)] public partial class SweptDiskSolid:SolidModel{//=======================================================================
public               SweptDiskSolid():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Directrix"><para>new ifc.BezierCurve(...)</para><para>new ifc.CompositeCurve(...)</para><para>new ifc.CompositeCurveOnSurface(...)</para><para>new ifc.BoundaryCurve(...)</para><para>new ifc.2DCompositeCurve(...)</para><para>new ifc.Polyline(...)</para><para>new ifc.TrimmedCurve(...)</para><para>new ifc.Circle(...)</para><para>new ifc.Ellipse(...)</para><para>new ifc.Line(...)</para><para>new ifc.OffsetCurve2D(...)</para><para>new ifc.OffsetCurve3D(...)</para></param>
/// <param name="Radius"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="InnerRadius">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="StartParam">[optional]<para>cast to (ifc.ParameterValue)...</para></param>
/// <param name="EndParam">[optional]<para>cast to (ifc.ParameterValue)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               SweptDiskSolid(Curve Directrix,PositiveLengthMeasure Radius,PositiveLengthMeasure InnerRadius=null,ParameterValue StartParam=null,ParameterValue EndParam=null,string EndOfLineComment=null):base(){AddNext();this.Directrix=Directrix;this.Radius=Radius;this.InnerRadius=InnerRadius;this.StartParam=StartParam;this.EndParam=EndParam;this.EndOfLineComment=EndOfLineComment;}
public               SweptDiskSolid(Curve Directrix,PositiveLengthMeasure Radius,string EndOfLineComment=null):base(){AddNext();this.Directrix=Directrix;this.Radius=Radius;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Curve Directrix; //ENTITY
[ifc(2)] public PositiveLengthMeasure Radius; //TYPE
[ifc(3,optional=true)] public PositiveLengthMeasure InnerRadius; //TYPE
[ifc(4,optional=true)] public ParameterValue StartParam; //TYPE
[ifc(5,optional=true)] public ParameterValue EndParam; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.SurfaceOfLinearExtrusion(...)</para><para>new ifc.SurfaceOfRevolution(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1164,TableId:3)] public partial class SweptSurface:Surface{//============================================================================
public               SweptSurface():base(){}// abstract
[ifc(1)] public ProfileDef SweptCurve; //ENTITY
[ifc(2,optional=true)] public Axis2Placement3D Position; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcelectricaldomain/lexical/ifcswitchingdevicetype.htm
[ifcSql(TypeGroupId:5,TypeId:1166,TableId:3)] public partial class SwitchingDeviceType:FlowControllerType{//==========================================================
public               SwitchingDeviceType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>SwitchingDeviceTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               SwitchingDeviceType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,SwitchingDeviceTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               SwitchingDeviceType(SwitchingDeviceTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public SwitchingDeviceTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.StructuralAnalysisModel(...)</para><para>new ifc.Zone(...)</para><para>new ifc.ElectricalCircuit(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifcsystem.htm
[ifcSql(TypeGroupId:5,TypeId:1167,TableId:3)] public partial class System:Group{//====================================================================================
public               System():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               System(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.EndOfLineComment=EndOfLineComment;}
/// <summary>INVERSE: ServicesBuildings of RelServicesBuildings for RelatingSystem</summary>
[ifcInverse(For:"RelatingSystem")] public RelServicesBuildings ServicesBuildings;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedfacilitieselements/lexical/ifcsystemfurnitureelementtype.htm
[ifcSql(TypeGroupId:5,TypeId:1169,TableId:3)] public partial class SystemFurnitureElementType:FurnishingElementType{//================================================
public               SystemFurnitureElementType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType">[optional]<para>SystemFurnitureElementTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               SystemFurnitureElementType(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Identifier ApplicableOccurrence=null,Set1toUnbounded_PropertySetDefinition HasPropertySets=null,List1toUnboundedUnique_RepresentationMap RepresentationMaps=null,Label Tag=null,Label _ElementType=null,SystemFurnitureElementTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10,optional=true)] public SystemFurnitureElementTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcprofileresource/lexical/ifctshapeprofiledef.htm
[ifcSql(TypeGroupId:5,TypeId:1170,TableId:3)] public partial class TShapeProfileDef:ParameterizedProfileDef{//========================================================
public               TShapeProfileDef():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ProfileType"><para>ProfileTypeEnum</para></param>
/// <param name="ProfileName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Position">[optional]<para>new ifc.Axis2Placement2D(...)</para></param>
/// <param name="Depth"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="FlangeWidth"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="WebThickness"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="FlangeThickness"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="FilletRadius">[optional]<para>cast to (ifc.NonNegativeLengthMeasure)...</para></param>
/// <param name="FlangeEdgeRadius">[optional]<para>cast to (ifc.NonNegativeLengthMeasure)...</para></param>
/// <param name="WebEdgeRadius">[optional]<para>cast to (ifc.NonNegativeLengthMeasure)...</para></param>
/// <param name="WebSlope">[optional]<para>cast to (ifc.PlaneAngleMeasure)...</para></param>
/// <param name="FlangeSlope">[optional]<para>cast to (ifc.PlaneAngleMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TShapeProfileDef(ProfileTypeEnum ProfileType,Label ProfileName,Axis2Placement2D Position,PositiveLengthMeasure Depth,PositiveLengthMeasure FlangeWidth,PositiveLengthMeasure WebThickness,PositiveLengthMeasure FlangeThickness,NonNegativeLengthMeasure FilletRadius=null,NonNegativeLengthMeasure FlangeEdgeRadius=null,NonNegativeLengthMeasure WebEdgeRadius=null,PlaneAngleMeasure WebSlope=null,PlaneAngleMeasure FlangeSlope=null,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.ProfileName=ProfileName;this.Position=Position;this.Depth=Depth;this.FlangeWidth=FlangeWidth;this.WebThickness=WebThickness;this.FlangeThickness=FlangeThickness;this.FilletRadius=FilletRadius;this.FlangeEdgeRadius=FlangeEdgeRadius;this.WebEdgeRadius=WebEdgeRadius;this.WebSlope=WebSlope;this.FlangeSlope=FlangeSlope;this.EndOfLineComment=EndOfLineComment;}
public               TShapeProfileDef(ProfileTypeEnum ProfileType,PositiveLengthMeasure Depth,PositiveLengthMeasure FlangeWidth,PositiveLengthMeasure WebThickness,PositiveLengthMeasure FlangeThickness,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.Depth=Depth;this.FlangeWidth=FlangeWidth;this.WebThickness=WebThickness;this.FlangeThickness=FlangeThickness;this.EndOfLineComment=EndOfLineComment;}
[ifc(4)] public PositiveLengthMeasure Depth; //TYPE
[ifc(5)] public PositiveLengthMeasure FlangeWidth; //TYPE
[ifc(6)] public PositiveLengthMeasure WebThickness; //TYPE
[ifc(7)] public PositiveLengthMeasure FlangeThickness; //TYPE
[ifc(8,optional=true)] public NonNegativeLengthMeasure FilletRadius; //TYPE
[ifc(9,optional=true)] public NonNegativeLengthMeasure FlangeEdgeRadius; //TYPE
[ifc(10,optional=true)] public NonNegativeLengthMeasure WebEdgeRadius; //TYPE
[ifc(11,optional=true)] public PlaneAngleMeasure WebSlope; //TYPE
[ifc(12,optional=true)] public PlaneAngleMeasure FlangeSlope; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcutilityresource/lexical/ifctable.htm
[ifcSql(TypeGroupId:5,TypeId:1171,TableId:3)] public partial class Table:ENTITY{//====================================================================================
public               Table():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Rows">[optional]<para>List1toUnbounded_TableRow</para></param>
/// <param name="Columns">[optional]<para>List1toUnbounded_TableColumn</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Table(Label Name=null,List1toUnbounded_TableRow Rows=null,List1toUnbounded_TableColumn Columns=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Rows=Rows;this.Columns=Columns;this.EndOfLineComment=EndOfLineComment;}
[ifc(1,optional=true)] public Label Name; //TYPE
[ifc(2,optional=true)] public List1toUnbounded_TableRow Rows; //ListType1d
[ifc(3,optional=true)] public List1toUnbounded_TableColumn Columns; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcutilityresource/lexical/ifctablecolumn.htm
[ifcSql(TypeGroupId:5,TypeId:1172,TableId:3)] public partial class TableColumn:ENTITY{//==============================================================================
public               TableColumn():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Identifier">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="Unit">[optional]<para>new ifc.Unit(new DerivedUnit(...))...</para><para>new ifc.Unit(new MonetaryUnit(...))...</para><para>new ifc.Unit(new NamedUnit(...))...</para></param>
/// <param name="ReferencePath">[optional]<para>new ifc.Reference(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TableColumn(Identifier Identifier=null,Label Name=null,Text Description=null,Unit Unit=null,Reference ReferencePath=null,string EndOfLineComment=null):base(){AddNext();this.Identifier=Identifier;this.Name=Name;this.Description=Description;this.Unit=Unit;this.ReferencePath=ReferencePath;this.EndOfLineComment=EndOfLineComment;}
[ifc(1,optional=true)] public Identifier Identifier; //TYPE
[ifc(2,optional=true)] public Label Name; //TYPE
[ifc(3,optional=true)] public Text Description; //TYPE
[ifc(4,optional=true)] public Unit Unit; //SELECT
[ifc(5,optional=true)] public Reference ReferencePath; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcutilityresource/lexical/ifctablerow.htm
[ifcSql(TypeGroupId:5,TypeId:1173,TableId:3)] public partial class TableRow:ENTITY{//=================================================================================
public               TableRow():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="RowCells">[optional]<para>List1toUnbounded_Value</para></param>
/// <param name="IsHeading">[optional]<para>cast to (ifc.Boolean)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TableRow(List1toUnbounded_Value RowCells=null,Boolean IsHeading=null,string EndOfLineComment=null):base(){AddNext();this.RowCells=RowCells;this.IsHeading=IsHeading;this.EndOfLineComment=EndOfLineComment;}
[ifc(1,optional=true)] public List1toUnbounded_Value RowCells; //ListType1d
[ifc(2,optional=true)] public Boolean IsHeading; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifctanktype.htm
[ifcSql(TypeGroupId:5,TypeId:1175,TableId:3)] public partial class TankType:FlowStorageDeviceType{//==================================================================
public               TankType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>TankTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TankType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,TankTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               TankType(TankTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public TankTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.Move(...)</para><para>new ifc.OrderAction(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcprocessextension/lexical/ifctask.htm
[ifcSql(TypeGroupId:5,TypeId:1176,TableId:3)] public partial class Task:Process{//====================================================================================
public               Task():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Identification">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="LongDescription">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="Status">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="WorkMethod">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="IsMilestone"><para>cast to (ifc.Boolean)...</para></param>
/// <param name="Priority">[optional]<para>cast to (ifc.Integer)...</para></param>
/// <param name="_TaskTime">[optional]<para>new ifc.TaskTime(...)</para></param>
/// <param name="PredefinedType">[optional]<para>TaskTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Task(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Label ObjectType,Identifier Identification,Text LongDescription,Label Status,Label WorkMethod,Boolean IsMilestone,Integer Priority=null,TaskTime _TaskTime=null,TaskTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.Identification=Identification;this.LongDescription=LongDescription;this.Status=Status;this.WorkMethod=WorkMethod;this.IsMilestone=IsMilestone;this.Priority=Priority;this._TaskTime=_TaskTime;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               Task(Boolean IsMilestone,string EndOfLineComment=null):base(){AddNext();this.IsMilestone=IsMilestone;this.EndOfLineComment=EndOfLineComment;}
[ifc(8,optional=true)] public Label Status; //TYPE
[ifc(9,optional=true)] public Label WorkMethod; //TYPE
[ifc(10)] public Boolean IsMilestone; //TYPE
[ifc(11,optional=true)] public Integer Priority; //TYPE
[ifc(12,optional=true)] public TaskTime _TaskTime; //ENTITY
[ifc(13,optional=true)] public TaskTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcdatetimeresource/lexical/ifctasktime.htm
[ifcSql(TypeGroupId:5,TypeId:1177,TableId:3)] public partial class TaskTime:SchedulingTime{//=========================================================================
public               TaskTime():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="DataOrigin">[optional]<para>DataOriginEnum</para></param>
/// <param name="UserDefinedDataOrigin">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="DurationType">[optional]<para>TaskDurationEnum</para></param>
/// <param name="ScheduleDuration">[optional]<para>cast to (ifc.Duration)...</para></param>
/// <param name="ScheduleStart">[optional]<para>cast to (ifc.DateTime)...</para></param>
/// <param name="ScheduleFinish">[optional]<para>cast to (ifc.DateTime)...</para></param>
/// <param name="EarlyStart">[optional]<para>cast to (ifc.DateTime)...</para></param>
/// <param name="EarlyFinish">[optional]<para>cast to (ifc.DateTime)...</para></param>
/// <param name="LateStart">[optional]<para>cast to (ifc.DateTime)...</para></param>
/// <param name="LateFinish">[optional]<para>cast to (ifc.DateTime)...</para></param>
/// <param name="FreeFloat">[optional]<para>cast to (ifc.Duration)...</para></param>
/// <param name="TotalFloat">[optional]<para>cast to (ifc.Duration)...</para></param>
/// <param name="IsCritical">[optional]<para>cast to (ifc.Boolean)...</para></param>
/// <param name="StatusTime">[optional]<para>cast to (ifc.DateTime)...</para></param>
/// <param name="ActualDuration">[optional]<para>cast to (ifc.Duration)...</para></param>
/// <param name="ActualStart">[optional]<para>cast to (ifc.DateTime)...</para></param>
/// <param name="ActualFinish">[optional]<para>cast to (ifc.DateTime)...</para></param>
/// <param name="RemainingTime">[optional]<para>cast to (ifc.Duration)...</para></param>
/// <param name="Completion">[optional]<para>cast to (ifc.PositiveRatioMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TaskTime(Label Name=null,DataOriginEnum? DataOrigin=null,Label UserDefinedDataOrigin=null,TaskDurationEnum? DurationType=null,Duration ScheduleDuration=null,DateTime ScheduleStart=null,DateTime ScheduleFinish=null,DateTime EarlyStart=null,DateTime EarlyFinish=null,DateTime LateStart=null,DateTime LateFinish=null,Duration FreeFloat=null,Duration TotalFloat=null,Boolean IsCritical=null,DateTime StatusTime=null,Duration ActualDuration=null,DateTime ActualStart=null,DateTime ActualFinish=null,Duration RemainingTime=null,PositiveRatioMeasure Completion=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.DataOrigin=DataOrigin;this.UserDefinedDataOrigin=UserDefinedDataOrigin;this.DurationType=DurationType;this.ScheduleDuration=ScheduleDuration;this.ScheduleStart=ScheduleStart;this.ScheduleFinish=ScheduleFinish;this.EarlyStart=EarlyStart;this.EarlyFinish=EarlyFinish;this.LateStart=LateStart;this.LateFinish=LateFinish;this.FreeFloat=FreeFloat;this.TotalFloat=TotalFloat;this.IsCritical=IsCritical;this.StatusTime=StatusTime;this.ActualDuration=ActualDuration;this.ActualStart=ActualStart;this.ActualFinish=ActualFinish;this.RemainingTime=RemainingTime;this.Completion=Completion;this.EndOfLineComment=EndOfLineComment;}
[ifc(4,optional=true)] public TaskDurationEnum? DurationType; //ENUM
[ifc(5,optional=true)] public Duration ScheduleDuration; //TYPE
[ifc(6,optional=true)] public DateTime ScheduleStart; //TYPE
[ifc(7,optional=true)] public DateTime ScheduleFinish; //TYPE
[ifc(8,optional=true)] public DateTime EarlyStart; //TYPE
[ifc(9,optional=true)] public DateTime EarlyFinish; //TYPE
[ifc(10,optional=true)] public DateTime LateStart; //TYPE
[ifc(11,optional=true)] public DateTime LateFinish; //TYPE
[ifc(12,optional=true)] public Duration FreeFloat; //TYPE
[ifc(13,optional=true)] public Duration TotalFloat; //TYPE
[ifc(14,optional=true)] public Boolean IsCritical; //TYPE
[ifc(15,optional=true)] public DateTime StatusTime; //TYPE
[ifc(16,optional=true)] public Duration ActualDuration; //TYPE
[ifc(17,optional=true)] public DateTime ActualStart; //TYPE
[ifc(18,optional=true)] public DateTime ActualFinish; //TYPE
[ifc(19,optional=true)] public Duration RemainingTime; //TYPE
[ifc(20,optional=true)] public PositiveRatioMeasure Completion; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcactorresource/lexical/ifctelecomaddress.htm
[ifcSql(TypeGroupId:5,TypeId:1180,TableId:3)] public partial class TelecomAddress:Address{//==========================================================================
public               TelecomAddress():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Purpose">[optional]<para>AddressTypeEnum</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="UserDefinedPurpose">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="TelephoneNumbers">[optional]<para>List1toUnbounded_Label</para></param>
/// <param name="FacsimileNumbers">[optional]<para>List1toUnbounded_Label</para></param>
/// <param name="PagerNumber">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="ElectronicMailAddresses">[optional]<para>List1toUnbounded_Label</para></param>
/// <param name="WWWHomePageURL">[optional]<para>cast to (ifc.URIReference)...</para></param>
/// <param name="MessagingIDs">[optional]<para>List1toUnbounded_URIReference</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TelecomAddress(AddressTypeEnum? Purpose=null,Text Description=null,Label UserDefinedPurpose=null,List1toUnbounded_Label TelephoneNumbers=null,List1toUnbounded_Label FacsimileNumbers=null,Label PagerNumber=null,List1toUnbounded_Label ElectronicMailAddresses=null,URIReference WWWHomePageURL=null,List1toUnbounded_URIReference MessagingIDs=null,string EndOfLineComment=null):base(){AddNext();this.Purpose=Purpose;this.Description=Description;this.UserDefinedPurpose=UserDefinedPurpose;this.TelephoneNumbers=TelephoneNumbers;this.FacsimileNumbers=FacsimileNumbers;this.PagerNumber=PagerNumber;this.ElectronicMailAddresses=ElectronicMailAddresses;this.WWWHomePageURL=WWWHomePageURL;this.MessagingIDs=MessagingIDs;this.EndOfLineComment=EndOfLineComment;}
[ifc(4,optional=true)] public List1toUnbounded_Label TelephoneNumbers; //ListType1d
[ifc(5,optional=true)] public List1toUnbounded_Label FacsimileNumbers; //ListType1d
[ifc(6,optional=true)] public Label PagerNumber; //TYPE
[ifc(7,optional=true)] public List1toUnbounded_Label ElectronicMailAddresses; //ListType1d
[ifc(8,optional=true)] public URIReference WWWHomePageURL; //TYPE
[ifc(9,optional=true)] public List1toUnbounded_URIReference MessagingIDs; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralelementsdomain/lexical/ifctendon.htm
[ifcSql(TypeGroupId:5,TypeId:1181,TableId:3)] public partial class Tendon:ReinforcingElement{//=======================================================================
public               Tendon():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="SteelGrade">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType">[optional]<para>TendonTypeEnum</para></param>
/// <param name="NominalDiameter">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="CrossSectionArea">[optional]<para>cast to (ifc.AreaMeasure)...</para></param>
/// <param name="TensionForce">[optional]<para>cast to (ifc.ForceMeasure)...</para></param>
/// <param name="PreStress">[optional]<para>cast to (ifc.PressureMeasure)...</para></param>
/// <param name="FrictionCoefficient">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="AnchorageSlip">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="MinCurvatureRadius">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Tendon(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,Label SteelGrade=null,TendonTypeEnum? PredefinedType=null,PositiveLengthMeasure NominalDiameter=null,AreaMeasure CrossSectionArea=null,ForceMeasure TensionForce=null,PressureMeasure PreStress=null,NormalisedRatioMeasure FrictionCoefficient=null,PositiveLengthMeasure AnchorageSlip=null,PositiveLengthMeasure MinCurvatureRadius=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.SteelGrade=SteelGrade;this.PredefinedType=PredefinedType;this.NominalDiameter=NominalDiameter;this.CrossSectionArea=CrossSectionArea;this.TensionForce=TensionForce;this.PreStress=PreStress;this.FrictionCoefficient=FrictionCoefficient;this.AnchorageSlip=AnchorageSlip;this.MinCurvatureRadius=MinCurvatureRadius;this.EndOfLineComment=EndOfLineComment;}
[ifc(10,optional=true)] public TendonTypeEnum? PredefinedType; //ENUM
[ifc(11,optional=true)] public PositiveLengthMeasure NominalDiameter; //TYPE
[ifc(12,optional=true)] public AreaMeasure CrossSectionArea; //TYPE
[ifc(13,optional=true)] public ForceMeasure TensionForce; //TYPE
[ifc(14,optional=true)] public PressureMeasure PreStress; //TYPE
[ifc(15,optional=true)] public NormalisedRatioMeasure FrictionCoefficient; //TYPE
[ifc(16,optional=true)] public PositiveLengthMeasure AnchorageSlip; //TYPE
[ifc(17,optional=true)] public PositiveLengthMeasure MinCurvatureRadius; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcstructuralelementsdomain/lexical/ifctendonanchor.htm
[ifcSql(TypeGroupId:5,TypeId:1182,TableId:3)] public partial class TendonAnchor:ReinforcingElement{//=================================================================
public               TendonAnchor():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="SteelGrade">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType">[optional]<para>TendonAnchorTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TendonAnchor(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,Label SteelGrade=null,TendonAnchorTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.SteelGrade=SteelGrade;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10,optional=true)] public TendonAnchorTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1185,TableId:3)] public partial class TessellatedFaceSet:TessellatedItem{//==============================================================
public               TessellatedFaceSet():base(){}// abstract
[ifc(1)] public CartesianPointList3D Coordinates; //ENTITY
/// <summary>INVERSE: HasColours of IndexedColourMap for MappedTo</summary>
[ifcInverse(For:"MappedTo")] public IndexedColourMap HasColours;
/// <summary>INVERSE: HasTextures of IndexedTextureMap for MappedTo</summary>
[ifcInverse(For:"MappedTo")] public LIST<IndexedTextureMap> HasTextures;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.TessellatedFaceSet(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1186,TableId:3)] public partial class TessellatedItem:GeometricRepresentationItem{//=====================================================
public               TessellatedItem():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.TextLiteralWithExtent(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationdefinitionresource/lexical/ifctextliteral.htm
[ifcSql(TypeGroupId:5,TypeId:1187,TableId:3)] public partial class TextLiteral:GeometricRepresentationItem{//=========================================================
public               TextLiteral():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Literal"><para>cast to (ifc.PresentableText)...</para></param>
/// <param name="_Placement"><para>new ifc.Axis2Placement(new Axis2Placement2D(...))...</para><para>new ifc.Axis2Placement(new Axis2Placement3D(...))...</para></param>
/// <param name="_Path"><para>TextPath</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TextLiteral(PresentableText Literal,Axis2Placement _Placement,TextPath _Path,string EndOfLineComment=null):base(){AddNext();this.Literal=Literal;this._Placement=_Placement;this._Path=_Path;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public PresentableText Literal; //TYPE
[ifc(2)] public Axis2Placement _Placement; //SELECT
[ifc(3)] public TextPath _Path; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationdefinitionresource/lexical/ifctextliteralwithextent.htm
[ifcSql(TypeGroupId:5,TypeId:1188,TableId:3)] public partial class TextLiteralWithExtent:TextLiteral{//===============================================================
public               TextLiteralWithExtent():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Literal"><para>cast to (ifc.PresentableText)...</para></param>
/// <param name="_Placement"><para>new ifc.Axis2Placement(new Axis2Placement2D(...))...</para><para>new ifc.Axis2Placement(new Axis2Placement3D(...))...</para></param>
/// <param name="_Path"><para>TextPath</para></param>
/// <param name="Extent"><para>new ifc.PlanarExtent(...)</para><para>new ifc.PlanarBox(...)</para></param>
/// <param name="BoxAlignment"><para>cast to (ifc.BoxAlignment)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TextLiteralWithExtent(PresentableText Literal,Axis2Placement _Placement,TextPath _Path,PlanarExtent Extent,BoxAlignment BoxAlignment,string EndOfLineComment=null):base(){AddNext();this.Literal=Literal;this._Placement=_Placement;this._Path=_Path;this.Extent=Extent;this.BoxAlignment=BoxAlignment;this.EndOfLineComment=EndOfLineComment;}
[ifc(4)] public PlanarExtent Extent; //ENTITY
[ifc(5)] public BoxAlignment BoxAlignment; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifctextstyle.htm
[ifcSql(TypeGroupId:5,TypeId:1189,TableId:3)] public partial class TextStyle:PresentationStyle{//=====================================================================
public               TextStyle():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="TextCharacterAppearance">[optional]<para>new ifc.TextStyleForDefinedFont(...)</para></param>
/// <param name="_TextStyle">[optional]<para>new ifc.TextStyleTextModel(...)</para></param>
/// <param name="TextFontStyle"><para>new ifc.TextFontSelect(new ExternallyDefinedTextFont(...))...</para><para>new ifc.TextFontSelect(new PreDefinedTextFont(...))...</para></param>
/// <param name="ModelOrDraughting">[optional]<para>cast to (ifc.Boolean)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TextStyle(Label Name,TextStyleForDefinedFont TextCharacterAppearance,TextStyleTextModel _TextStyle,TextFontSelect TextFontStyle,Boolean ModelOrDraughting=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.TextCharacterAppearance=TextCharacterAppearance;this._TextStyle=_TextStyle;this.TextFontStyle=TextFontStyle;this.ModelOrDraughting=ModelOrDraughting;this.EndOfLineComment=EndOfLineComment;}
public               TextStyle(TextFontSelect TextFontStyle,string EndOfLineComment=null):base(){AddNext();this.TextFontStyle=TextFontStyle;this.EndOfLineComment=EndOfLineComment;}
[ifc(2,optional=true)] public TextStyleForDefinedFont TextCharacterAppearance; //ENTITY
[ifc(3,optional=true)] public TextStyleTextModel _TextStyle; //ENTITY
[ifc(4)] public TextFontSelect TextFontStyle; //SELECT
[ifc(5,optional=true)] public Boolean ModelOrDraughting; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifctextstylefontmodel.htm
[ifcSql(TypeGroupId:5,TypeId:1190,TableId:3)] public partial class TextStyleFontModel:PreDefinedTextFont{//===========================================================
public               TextStyleFontModel():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name"><para>cast to (ifc.Label)...</para></param>
/// <param name="FontFamily"><para>List1toUnbounded_TextFontName</para></param>
/// <param name="FontStyle">[optional]<para>cast to (ifc.FontStyle)...</para></param>
/// <param name="FontVariant">[optional]<para>cast to (ifc.FontVariant)...</para></param>
/// <param name="FontWeight">[optional]<para>cast to (ifc.FontWeight)...</para></param>
/// <param name="FontSize"><para>new ifc.SizeSelect(new DescriptiveMeasure(...))...</para><para>new ifc.SizeSelect(new LengthMeasure(...))...</para><para>new ifc.SizeSelect(new NormalisedRatioMeasure(...))...</para><para>new ifc.SizeSelect(new PositiveLengthMeasure(...))...</para><para>new ifc.SizeSelect(new PositiveRatioMeasure(...))...</para><para>new ifc.SizeSelect(new RatioMeasure(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TextStyleFontModel(Label Name,List1toUnbounded_TextFontName FontFamily,FontStyle FontStyle,FontVariant FontVariant,FontWeight FontWeight,SizeSelect FontSize,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.FontFamily=FontFamily;this.FontStyle=FontStyle;this.FontVariant=FontVariant;this.FontWeight=FontWeight;this.FontSize=FontSize;this.EndOfLineComment=EndOfLineComment;}
public               TextStyleFontModel(Label Name,List1toUnbounded_TextFontName FontFamily,SizeSelect FontSize,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.FontFamily=FontFamily;this.FontSize=FontSize;this.EndOfLineComment=EndOfLineComment;}
[ifc(2)] public List1toUnbounded_TextFontName FontFamily; //ListType1d
[ifc(3,optional=true)] public FontStyle FontStyle; //TYPE
[ifc(4,optional=true)] public FontVariant FontVariant; //TYPE
[ifc(5,optional=true)] public FontWeight FontWeight; //TYPE
[ifc(6)] public SizeSelect FontSize; //SELECT
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifctextstylefordefinedfont.htm
[ifcSql(TypeGroupId:5,TypeId:1191,TableId:3)] public partial class TextStyleForDefinedFont:PresentationItem{//========================================================
public               TextStyleForDefinedFont():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Colour"><para>new ifc.Colour(new ColourSpecification(...))...</para><para>new ifc.Colour(new PreDefinedColour(...))...</para></param>
/// <param name="BackgroundColour">[optional]<para>new ifc.Colour(new ColourSpecification(...))...</para><para>new ifc.Colour(new PreDefinedColour(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TextStyleForDefinedFont(Colour Colour,Colour BackgroundColour=null,string EndOfLineComment=null):base(){AddNext();this.Colour=Colour;this.BackgroundColour=BackgroundColour;this.EndOfLineComment=EndOfLineComment;}
public               TextStyleForDefinedFont(Colour Colour):base(){AddNext();this.Colour=Colour;}
[ifc(1)] public Colour Colour; //SELECT
[ifc(2,optional=true)] public Colour BackgroundColour; //SELECT
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifctextstyletextmodel.htm
[ifcSql(TypeGroupId:5,TypeId:1192,TableId:3)] public partial class TextStyleTextModel:PresentationItem{//=============================================================
public               TextStyleTextModel():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="TextIndent">[optional]<para>new ifc.SizeSelect(new DescriptiveMeasure(...))...</para><para>new ifc.SizeSelect(new LengthMeasure(...))...</para><para>new ifc.SizeSelect(new NormalisedRatioMeasure(...))...</para><para>new ifc.SizeSelect(new PositiveLengthMeasure(...))...</para><para>new ifc.SizeSelect(new PositiveRatioMeasure(...))...</para><para>new ifc.SizeSelect(new RatioMeasure(...))...</para></param>
/// <param name="TextAlign">[optional]<para>cast to (ifc.TextAlignment)...</para></param>
/// <param name="TextDecoration">[optional]<para>cast to (ifc.TextDecoration)...</para></param>
/// <param name="LetterSpacing">[optional]<para>new ifc.SizeSelect(new DescriptiveMeasure(...))...</para><para>new ifc.SizeSelect(new LengthMeasure(...))...</para><para>new ifc.SizeSelect(new NormalisedRatioMeasure(...))...</para><para>new ifc.SizeSelect(new PositiveLengthMeasure(...))...</para><para>new ifc.SizeSelect(new PositiveRatioMeasure(...))...</para><para>new ifc.SizeSelect(new RatioMeasure(...))...</para></param>
/// <param name="WordSpacing">[optional]<para>new ifc.SizeSelect(new DescriptiveMeasure(...))...</para><para>new ifc.SizeSelect(new LengthMeasure(...))...</para><para>new ifc.SizeSelect(new NormalisedRatioMeasure(...))...</para><para>new ifc.SizeSelect(new PositiveLengthMeasure(...))...</para><para>new ifc.SizeSelect(new PositiveRatioMeasure(...))...</para><para>new ifc.SizeSelect(new RatioMeasure(...))...</para></param>
/// <param name="TextTransform">[optional]<para>cast to (ifc.TextTransformation)...</para></param>
/// <param name="LineHeight">[optional]<para>new ifc.SizeSelect(new DescriptiveMeasure(...))...</para><para>new ifc.SizeSelect(new LengthMeasure(...))...</para><para>new ifc.SizeSelect(new NormalisedRatioMeasure(...))...</para><para>new ifc.SizeSelect(new PositiveLengthMeasure(...))...</para><para>new ifc.SizeSelect(new PositiveRatioMeasure(...))...</para><para>new ifc.SizeSelect(new RatioMeasure(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TextStyleTextModel(SizeSelect TextIndent=null,TextAlignment TextAlign=null,TextDecoration TextDecoration=null,SizeSelect LetterSpacing=null,SizeSelect WordSpacing=null,TextTransformation TextTransform=null,SizeSelect LineHeight=null,string EndOfLineComment=null):base(){AddNext();this.TextIndent=TextIndent;this.TextAlign=TextAlign;this.TextDecoration=TextDecoration;this.LetterSpacing=LetterSpacing;this.WordSpacing=WordSpacing;this.TextTransform=TextTransform;this.LineHeight=LineHeight;this.EndOfLineComment=EndOfLineComment;}
[ifc(1,optional=true)] public SizeSelect TextIndent; //SELECT
[ifc(2,optional=true)] public TextAlignment TextAlign; //TYPE
[ifc(3,optional=true)] public TextDecoration TextDecoration; //TYPE
[ifc(4,optional=true)] public SizeSelect LetterSpacing; //SELECT
[ifc(5,optional=true)] public SizeSelect WordSpacing; //SELECT
[ifc(6,optional=true)] public TextTransformation TextTransform; //TYPE
[ifc(7,optional=true)] public SizeSelect LineHeight; //SELECT
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.IndexedTextureMap(...)</para><para>new ifc.TextureCoordinateGenerator(...)</para><para>new ifc.TextureMap(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1193,TableId:3)] public partial class TextureCoordinate:PresentationItem{//==============================================================
public               TextureCoordinate():base(){}// abstract
[ifc(1)] public List1toUnbounded_SurfaceTexture Maps; //ListType1d
public override void AssignInverseElements(){if (Maps!=null) foreach (SurfaceTexture __SurfaceTexture in Maps) if (__SurfaceTexture is SurfaceTexture) {if (((SurfaceTexture)__SurfaceTexture).IsMappedBy==null) ((SurfaceTexture)__SurfaceTexture).IsMappedBy=new LIST<TextureCoordinate>();((SurfaceTexture)__SurfaceTexture).IsMappedBy.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifctexturecoordinategenerator.htm
[ifcSql(TypeGroupId:5,TypeId:1194,TableId:3)] public partial class TextureCoordinateGenerator:TextureCoordinate{//====================================================
public               TextureCoordinateGenerator():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Maps"><para>List1toUnbounded_SurfaceTexture</para></param>
/// <param name="Mode"><para>cast to (ifc.Label)...</para></param>
/// <param name="Parameter">[optional]<para>List1toUnbounded_Real</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TextureCoordinateGenerator(List1toUnbounded_SurfaceTexture Maps,Label Mode,List1toUnbounded_Real Parameter=null,string EndOfLineComment=null):base(){AddNext();this.Maps=Maps;this.Mode=Mode;this.Parameter=Parameter;this.EndOfLineComment=EndOfLineComment;}
public               TextureCoordinateGenerator(List1toUnbounded_SurfaceTexture Maps,Label Mode):base(){AddNext();this.Maps=Maps;this.Mode=Mode;}
[ifc(2)] public Label Mode; //TYPE
[ifc(3,optional=true)] public List1toUnbounded_Real Parameter; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifctexturemap.htm
[ifcSql(TypeGroupId:5,TypeId:1195,TableId:3)] public partial class TextureMap:TextureCoordinate{//====================================================================
public               TextureMap():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Maps"><para>List1toUnbounded_SurfaceTexture</para></param>
/// <param name="Vertices"><para>List3toUnbounded_TextureVertex</para></param>
/// <param name="MappedTo"><para>new ifc.Face(...)</para><para>new ifc.FaceSurface(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TextureMap(List1toUnbounded_SurfaceTexture Maps,List3toUnbounded_TextureVertex Vertices,Face MappedTo,string EndOfLineComment=null):base(){AddNext();this.Maps=Maps;this.Vertices=Vertices;this.MappedTo=MappedTo;this.EndOfLineComment=EndOfLineComment;}
[ifc(2)] public List3toUnbounded_TextureVertex Vertices; //ListType1d
[ifc(3)] public Face MappedTo; //ENTITY
public override void AssignInverseElements(){if (MappedTo!=null) {if (MappedTo.HasTextureMaps==null) MappedTo.HasTextureMaps=new LIST<TextureMap>();MappedTo.HasTextureMaps.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifctexturevertex.htm
[ifcSql(TypeGroupId:5,TypeId:1196,TableId:3)] public partial class TextureVertex:PresentationItem{//==================================================================
public               TextureVertex():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Coordinates"><para>List2to2_ParameterValue</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TextureVertex(List2to2_ParameterValue Coordinates,string EndOfLineComment=null):base(){AddNext();this.Coordinates=Coordinates;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public List2to2_ParameterValue Coordinates; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcpresentationappearanceresource/lexical/ifctexturevertexlist.htm
[ifcSql(TypeGroupId:5,TypeId:1197,TableId:3)] public partial class TextureVertexList:PresentationItem{//==============================================================
public               TextureVertexList():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="TexCoordsList"><para>List1toUnbounded_List2to2_ParameterValue</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TextureVertexList(List1toUnbounded_List2to2_ParameterValue TexCoordsList,string EndOfLineComment=null):base(){AddNext();this.TexCoordsList=TexCoordsList;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public List1toUnbounded_List2to2_ParameterValue TexCoordsList; //ListType2d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcdatetimeresource/lexical/ifctimeperiod.htm
[ifcSql(TypeGroupId:5,TypeId:1198,TableId:3)] public partial class TimePeriod:ENTITY{//===============================================================================
public               TimePeriod():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="StartTime"><para>cast to (ifc.Time)...</para></param>
/// <param name="EndTime"><para>cast to (ifc.Time)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TimePeriod(Time StartTime,Time EndTime,string EndOfLineComment=null):base(){AddNext();this.StartTime=StartTime;this.EndTime=EndTime;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Time StartTime; //TYPE
[ifc(2)] public Time EndTime; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.IrregularTimeSeries(...)</para><para>new ifc.RegularTimeSeries(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1199,TableId:3)] public partial class TimeSeries:ENTITY{//===============================================================================
public               TimeSeries():base(){}// abstract
[ifc(1)] public Label Name; //TYPE
[ifc(2,optional=true)] public Text Description; //TYPE
[ifc(3)] public DateTime StartTime; //TYPE
[ifc(4)] public DateTime EndTime; //TYPE
[ifc(5)] public TimeSeriesDataTypeEnum TimeSeriesDataType; //ENUM
[ifc(6)] public DataOriginEnum DataOrigin; //ENUM
[ifc(7,optional=true)] public Label UserDefinedDataOrigin; //TYPE
[ifc(8,optional=true)] public Unit Unit; //SELECT
/// <summary>INVERSE: HasExternalReference of ExternalReferenceRelationship for RelatedResourceObjects</summary>
[ifcInverse(For:"RelatedResourceObjects")] public LIST<ExternalReferenceRelationship> HasExternalReference;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcdatetimeresource/lexical/ifctimeseriesvalue.htm
[ifcSql(TypeGroupId:5,TypeId:1200,TableId:3)] public partial class TimeSeriesValue:ENTITY{//==========================================================================
public               TimeSeriesValue():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ListValues"><para>List1toUnbounded_Value</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TimeSeriesValue(List1toUnbounded_Value ListValues,string EndOfLineComment=null):base(){AddNext();this.ListValues=ListValues;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public List1toUnbounded_Value ListValues; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ConnectedFaceSet(...)</para><para>new ifc.ClosedShell(...)</para><para>new ifc.OpenShell(...)</para><para>new ifc.Edge(...)</para><para>new ifc.EdgeCurve(...)</para><para>new ifc.OrientedEdge(...)</para><para>new ifc.Subedge(...)</para><para>new ifc.Face(...)</para><para>new ifc.FaceSurface(...)</para><para>new ifc.FaceBound(...)</para><para>new ifc.FaceOuterBound(...)</para><para>new ifc.Loop(...)</para><para>new ifc.EdgeLoop(...)</para><para>new ifc.PolyLoop(...)</para><para>new ifc.VertexLoop(...)</para><para>new ifc.Path(...)</para><para>new ifc.Vertex(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1201,TableId:3)] public partial class TopologicalRepresentationItem:RepresentationItem{//================================================
public               TopologicalRepresentationItem():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcrepresentationresource/lexical/ifctopologyrepresentation.htm
[ifcSql(TypeGroupId:5,TypeId:1202,TableId:3)] public partial class TopologyRepresentation:ShapeModel{//===============================================================
public               TopologyRepresentation():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ContextOfItems"><para>new ifc.GeometricRepresentationContext(...)</para><para>new ifc.GeometricRepresentationSubContext(...)</para></param>
/// <param name="RepresentationIdentifier">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="RepresentationType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Items"><para>Set1toUnbounded_RepresentationItem</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TopologyRepresentation(RepresentationContext ContextOfItems,Label RepresentationIdentifier,Label RepresentationType,Set1toUnbounded_RepresentationItem Items,string EndOfLineComment=null):base(){AddNext();this.ContextOfItems=ContextOfItems;this.RepresentationIdentifier=RepresentationIdentifier;this.RepresentationType=RepresentationType;this.Items=Items;this.EndOfLineComment=EndOfLineComment;}
public               TopologyRepresentation(RepresentationContext ContextOfItems,Set1toUnbounded_RepresentationItem Items,string EndOfLineComment=null):base(){AddNext();this.ContextOfItems=ContextOfItems;this.Items=Items;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcelectricaldomain/lexical/ifctransformertype.htm
[ifcSql(TypeGroupId:5,TypeId:1204,TableId:3)] public partial class TransformerType:EnergyConversionDeviceType{//======================================================
public               TransformerType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>TransformerTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TransformerType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,TransformerTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               TransformerType(TransformerTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public TransformerTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifctransportelement.htm
[ifcSql(TypeGroupId:5,TypeId:1205,TableId:3)] public partial class TransportElement:Element{//========================================================================
public               TransportElement():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>TransportElementTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TransportElement(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,TransportElementTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public TransportElementTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifctransportelementtype.htm
[ifcSql(TypeGroupId:5,TypeId:1206,TableId:3)] public partial class TransportElementType:ElementType{//================================================================
public               TransportElementType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>TransportElementTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TransportElementType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,TransportElementTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               TransportElementType(TransportElementTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public TransportElementTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcprofileresource/lexical/ifctrapeziumprofiledef.htm
[ifcSql(TypeGroupId:5,TypeId:1207,TableId:3)] public partial class TrapeziumProfileDef:ParameterizedProfileDef{//=====================================================
public               TrapeziumProfileDef():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ProfileType"><para>ProfileTypeEnum</para></param>
/// <param name="ProfileName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Position">[optional]<para>new ifc.Axis2Placement2D(...)</para></param>
/// <param name="BottomXDim"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="TopXDim"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="YDim"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="TopXOffset"><para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TrapeziumProfileDef(ProfileTypeEnum ProfileType,Label ProfileName,Axis2Placement2D Position,PositiveLengthMeasure BottomXDim,PositiveLengthMeasure TopXDim,PositiveLengthMeasure YDim,LengthMeasure TopXOffset,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.ProfileName=ProfileName;this.Position=Position;this.BottomXDim=BottomXDim;this.TopXDim=TopXDim;this.YDim=YDim;this.TopXOffset=TopXOffset;this.EndOfLineComment=EndOfLineComment;}
public               TrapeziumProfileDef(ProfileTypeEnum ProfileType,PositiveLengthMeasure BottomXDim,PositiveLengthMeasure TopXDim,PositiveLengthMeasure YDim,LengthMeasure TopXOffset,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.BottomXDim=BottomXDim;this.TopXDim=TopXDim;this.YDim=YDim;this.TopXOffset=TopXOffset;this.EndOfLineComment=EndOfLineComment;}
[ifc(4)] public PositiveLengthMeasure BottomXDim; //TYPE
[ifc(5)] public PositiveLengthMeasure TopXDim; //TYPE
[ifc(6)] public PositiveLengthMeasure YDim; //TYPE
[ifc(7)] public LengthMeasure TopXOffset; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometryresource/lexical/ifctrimmedcurve.htm
[ifcSql(TypeGroupId:5,TypeId:1209,TableId:3)] public partial class TrimmedCurve:BoundedCurve{//=======================================================================
public               TrimmedCurve():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="BasisCurve"><para>new ifc.BezierCurve(...)</para><para>new ifc.CompositeCurve(...)</para><para>new ifc.CompositeCurveOnSurface(...)</para><para>new ifc.BoundaryCurve(...)</para><para>new ifc.2DCompositeCurve(...)</para><para>new ifc.Polyline(...)</para><para>new ifc.TrimmedCurve(...)</para><para>new ifc.Circle(...)</para><para>new ifc.Ellipse(...)</para><para>new ifc.Line(...)</para><para>new ifc.OffsetCurve2D(...)</para><para>new ifc.OffsetCurve3D(...)</para></param>
/// <param name="Trim1"><para>Set1to2_TrimmingSelect</para></param>
/// <param name="Trim2"><para>Set1to2_TrimmingSelect</para></param>
/// <param name="SenseAgreement"><para>cast to (ifc.Boolean)...</para></param>
/// <param name="MasterRepresentation"><para>TrimmingPreference</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TrimmedCurve(Curve BasisCurve,Set1to2_TrimmingSelect Trim1,Set1to2_TrimmingSelect Trim2,Boolean SenseAgreement,TrimmingPreference MasterRepresentation,string EndOfLineComment=null):base(){AddNext();this.BasisCurve=BasisCurve;this.Trim1=Trim1;this.Trim2=Trim2;this.SenseAgreement=SenseAgreement;this.MasterRepresentation=MasterRepresentation;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Curve BasisCurve; //ENTITY
[ifc(2)] public Set1to2_TrimmingSelect Trim1; //ListType1d
[ifc(3)] public Set1to2_TrimmingSelect Trim2; //ListType1d
[ifc(4)] public Boolean SenseAgreement; //TYPE
[ifc(5)] public TrimmingPreference MasterRepresentation; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifctubebundletype.htm
[ifcSql(TypeGroupId:5,TypeId:1211,TableId:3)] public partial class TubeBundleType:EnergyConversionDeviceType{//=======================================================
public               TubeBundleType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>TubeBundleTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TubeBundleType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,TubeBundleTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               TubeBundleType(TubeBundleTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public TubeBundleTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.TypeProcess(...)</para><para>new ifc.TypeProduct(...)</para><para>new ifc.TypeResource(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifckernel/lexical/ifctypeobject.htm
[ifcSql(TypeGroupId:5,TypeId:1212,TableId:3)] public partial class TypeObject:ObjectDefinition{//=====================================================================
public               TypeObject():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TypeObject(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Identifier ApplicableOccurrence=null,Set1toUnbounded_PropertySetDefinition HasPropertySets=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.EndOfLineComment=EndOfLineComment;}
[ifc(5,optional=true)] public Identifier ApplicableOccurrence; //TYPE
[ifc(6,optional=true)] public Set1toUnbounded_PropertySetDefinition HasPropertySets; //ListType1d
/// <summary>INVERSE: Types of RelDefinesByType for RelatingType</summary>
[ifcInverse(For:"RelatingType")] public RelDefinesByType Types;
public override void AssignInverseElements(){if (HasPropertySets!=null) foreach (PropertySetDefinition __PropertySetDefinition in HasPropertySets) if (__PropertySetDefinition is PropertySetDefinition) {if (((PropertySetDefinition)__PropertySetDefinition).DefinesType==null) ((PropertySetDefinition)__PropertySetDefinition).DefinesType=new LIST<TypeObject>();((PropertySetDefinition)__PropertySetDefinition).DefinesType.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1213,TableId:3)] public partial class TypeProcess:TypeObject{//==========================================================================
public               TypeProcess():base(){}// abstract
[ifc(7,optional=true)] public Identifier Identification; //TYPE
[ifc(8,optional=true)] public Text LongDescription; //TYPE
[ifc(9,optional=true)] public Label ProcessType; //TYPE
/// <summary>INVERSE: OperatesOn of RelAssignsToProcess for RelatingProcess</summary>
[ifcInverse(For:"RelatingProcess")] public LIST<RelAssignsToProcess> OperatesOn;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.DoorStyle(...)</para><para>new ifc.ElementType(...)</para><para>new ifc.BuildingElementType(...)</para><para>new ifc.BeamType(...)</para><para>new ifc.BuildingElementProxyType(...)</para><para>new ifc.ColumnType(...)</para><para>new ifc.CoveringType(...)</para><para>new ifc.CurtainWallType(...)</para><para>new ifc.MemberType(...)</para><para>new ifc.PlateType(...)</para><para>new ifc.RailingType(...)</para><para>new ifc.RampFlightType(...)</para><para>new ifc.SlabType(...)</para><para>new ifc.StairFlightType(...)</para><para>new ifc.WallType(...)</para><para>new ifc.DistributionElementType(...)</para><para>new ifc.DistributionControlElementType(...)</para><para>new ifc.ActuatorType(...)</para><para>new ifc.AlarmType(...)</para><para>new ifc.ControllerType(...)</para><para>new ifc.FlowInstrumentType(...)</para><para>new ifc.SensorType(...)</para><para>new ifc.DistributionFlowElementType(...)</para><para>new ifc.DistributionChamberElementType(...)</para><para>new ifc.EnergyConversionDeviceType(...)</para><para>new ifc.AirToAirHeatRecoveryType(...)</para><para>new ifc.BoilerType(...)</para><para>new ifc.ChillerType(...)</para><para>new ifc.CoilType(...)</para><para>new ifc.CondenserType(...)</para><para>new ifc.CooledBeamType(...)</para><para>new ifc.CoolingTowerType(...)</para><para>new ifc.ElectricGeneratorType(...)</para><para>new ifc.ElectricMotorType(...)</para><para>new ifc.EvaporativeCoolerType(...)</para><para>new ifc.EvaporatorType(...)</para><para>new ifc.HeatExchangerType(...)</para><para>new ifc.HumidifierType(...)</para><para>new ifc.MotorConnectionType(...)</para><para>new ifc.TransformerType(...)</para><para>new ifc.TubeBundleType(...)</para><para>new ifc.UnitaryEquipmentType(...)</para><para>new ifc.FlowControllerType(...)</para><para>new ifc.AirTerminalBoxType(...)</para><para>new ifc.DamperType(...)</para><para>new ifc.ElectricTimeControlType(...)</para><para>new ifc.FlowMeterType(...)</para><para>new ifc.ProtectiveDeviceType(...)</para><para>new ifc.SwitchingDeviceType(...)</para><para>new ifc.ValveType(...)</para><para>new ifc.FlowFittingType(...)</para><para>new ifc.CableCarrierFittingType(...)</para><para>new ifc.DuctFittingType(...)</para><para>new ifc.JunctionBoxType(...)</para><para>new ifc.PipeFittingType(...)</para><para>new ifc.FlowMovingDeviceType(...)</para><para>new ifc.CompressorType(...)</para><para>new ifc.FanType(...)</para><para>new ifc.PumpType(...)</para><para>new ifc.FlowSegmentType(...)</para><para>new ifc.CableCarrierSegmentType(...)</para><para>new ifc.CableSegmentType(...)</para><para>new ifc.DuctSegmentType(...)</para><para>new ifc.PipeSegmentType(...)</para><para>new ifc.FlowStorageDeviceType(...)</para><para>new ifc.ElectricFlowStorageDeviceType(...)</para><para>new ifc.TankType(...)</para><para>new ifc.FlowTerminalType(...)</para><para>new ifc.AirTerminalType(...)</para><para>new ifc.ElectricApplianceType(...)</para><para>new ifc.FireSuppressionTerminalType(...)</para><para>new ifc.LampType(...)</para><para>new ifc.LightFixtureType(...)</para><para>new ifc.OutletType(...)</para><para>new ifc.SanitaryTerminalType(...)</para><para>new ifc.SpaceHeaterType(...)</para><para>new ifc.StackTerminalType(...)</para><para>new ifc.WasteTerminalType(...)</para><para>new ifc.ElectricHeaterType(...)</para><para>new ifc.GasTerminalType(...)</para><para>new ifc.FlowTreatmentDeviceType(...)</para><para>new ifc.DuctSilencerType(...)</para><para>new ifc.FilterType(...)</para><para>new ifc.InterceptorType(...)</para><para>new ifc.ElementComponentType(...)</para><para>new ifc.DiscreteAccessoryType(...)</para><para>new ifc.FastenerType(...)</para><para>new ifc.MechanicalFastenerType(...)</para><para>new ifc.VibrationIsolatorType(...)</para><para>new ifc.FurnishingElementType(...)</para><para>new ifc.FurnitureType(...)</para><para>new ifc.SystemFurnitureElementType(...)</para><para>new ifc.TransportElementType(...)</para><para>new ifc.SpatialElementType(...)</para><para>new ifc.SpatialStructureElementType(...)</para><para>new ifc.SpaceType(...)</para><para>new ifc.WindowStyle(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifckernel/lexical/ifctypeproduct.htm
[ifcSql(TypeGroupId:5,TypeId:1214,TableId:3)] public partial class TypeProduct:TypeObject{//==========================================================================
public               TypeProduct():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TypeProduct(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Identifier ApplicableOccurrence=null,Set1toUnbounded_PropertySetDefinition HasPropertySets=null,List1toUnboundedUnique_RepresentationMap RepresentationMaps=null,Label Tag=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this.EndOfLineComment=EndOfLineComment;}
[ifc(7,optional=true)] public List1toUnboundedUnique_RepresentationMap RepresentationMaps; //ListType1d
[ifc(8,optional=true)] public Label Tag; //TYPE
/// <summary>INVERSE: ReferencedBy of RelAssignsToProduct for RelatingProduct</summary>
[ifcInverse(For:"RelatingProduct")] public LIST<RelAssignsToProduct> ReferencedBy;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ConstructionResourceType(...)</para><para>new ifc.ConstructionEquipmentResourceType(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1215,TableId:3)] public partial class TypeResource:TypeObject{//=========================================================================
public               TypeResource():base(){}// abstract
[ifc(7,optional=true)] public Identifier Identification; //TYPE
[ifc(8,optional=true)] public Text LongDescription; //TYPE
[ifc(9,optional=true)] public Label ResourceType; //TYPE
/// <summary>INVERSE: ResourceOf of RelAssignsToResource for RelatingResource</summary>
[ifcInverse(For:"RelatingResource")] public LIST<RelAssignsToResource> ResourceOf;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcprofileresource/lexical/ifcushapeprofiledef.htm
[ifcSql(TypeGroupId:5,TypeId:1216,TableId:3)] public partial class UShapeProfileDef:ParameterizedProfileDef{//========================================================
public               UShapeProfileDef():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ProfileType"><para>ProfileTypeEnum</para></param>
/// <param name="ProfileName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Position">[optional]<para>new ifc.Axis2Placement2D(...)</para></param>
/// <param name="Depth"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="FlangeWidth"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="WebThickness"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="FlangeThickness"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="FilletRadius">[optional]<para>cast to (ifc.NonNegativeLengthMeasure)...</para></param>
/// <param name="EdgeRadius">[optional]<para>cast to (ifc.NonNegativeLengthMeasure)...</para></param>
/// <param name="FlangeSlope">[optional]<para>cast to (ifc.PlaneAngleMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               UShapeProfileDef(ProfileTypeEnum ProfileType,Label ProfileName,Axis2Placement2D Position,PositiveLengthMeasure Depth,PositiveLengthMeasure FlangeWidth,PositiveLengthMeasure WebThickness,PositiveLengthMeasure FlangeThickness,NonNegativeLengthMeasure FilletRadius=null,NonNegativeLengthMeasure EdgeRadius=null,PlaneAngleMeasure FlangeSlope=null,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.ProfileName=ProfileName;this.Position=Position;this.Depth=Depth;this.FlangeWidth=FlangeWidth;this.WebThickness=WebThickness;this.FlangeThickness=FlangeThickness;this.FilletRadius=FilletRadius;this.EdgeRadius=EdgeRadius;this.FlangeSlope=FlangeSlope;this.EndOfLineComment=EndOfLineComment;}
public               UShapeProfileDef(ProfileTypeEnum ProfileType,PositiveLengthMeasure Depth,PositiveLengthMeasure FlangeWidth,PositiveLengthMeasure WebThickness,PositiveLengthMeasure FlangeThickness,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.Depth=Depth;this.FlangeWidth=FlangeWidth;this.WebThickness=WebThickness;this.FlangeThickness=FlangeThickness;this.EndOfLineComment=EndOfLineComment;}
[ifc(4)] public PositiveLengthMeasure Depth; //TYPE
[ifc(5)] public PositiveLengthMeasure FlangeWidth; //TYPE
[ifc(6)] public PositiveLengthMeasure WebThickness; //TYPE
[ifc(7)] public PositiveLengthMeasure FlangeThickness; //TYPE
[ifc(8,optional=true)] public NonNegativeLengthMeasure FilletRadius; //TYPE
[ifc(9,optional=true)] public NonNegativeLengthMeasure EdgeRadius; //TYPE
[ifc(10,optional=true)] public PlaneAngleMeasure FlangeSlope; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcmeasureresource/lexical/ifcunitassignment.htm
[ifcSql(TypeGroupId:5,TypeId:1217,TableId:3)] public partial class UnitAssignment:ENTITY{//===========================================================================
public               UnitAssignment():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Units"><para>Set1toUnbounded_Unit</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               UnitAssignment(Set1toUnbounded_Unit Units,string EndOfLineComment=null):base(){AddNext();this.Units=Units;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Set1toUnbounded_Unit Units; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifcunitaryequipmenttype.htm
[ifcSql(TypeGroupId:5,TypeId:1221,TableId:3)] public partial class UnitaryEquipmentType:EnergyConversionDeviceType{//=================================================
public               UnitaryEquipmentType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>UnitaryEquipmentTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               UnitaryEquipmentType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,UnitaryEquipmentTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               UnitaryEquipmentType(UnitaryEquipmentTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public UnitaryEquipmentTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifcvalvetype.htm
[ifcSql(TypeGroupId:5,TypeId:1223,TableId:3)] public partial class ValveType:FlowControllerType{//====================================================================
public               ValveType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>ValveTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ValveType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,ValveTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               ValveType(ValveTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public ValveTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometryresource/lexical/ifcvector.htm
[ifcSql(TypeGroupId:5,TypeId:1224,TableId:3)] public partial class Vector:GeometricRepresentationItem{//==============================================================
public               Vector():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Orientation"><para>new ifc.Direction(...)</para></param>
/// <param name="Magnitude"><para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Vector(Direction Orientation,LengthMeasure Magnitude,string EndOfLineComment=null):base(){AddNext();this.Orientation=Orientation;this.Magnitude=Magnitude;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Direction Orientation; //ENTITY
[ifc(2)] public LengthMeasure Magnitude; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.VertexPoint(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifctopologyresource/lexical/ifcvertex.htm
[ifcSql(TypeGroupId:5,TypeId:1225,TableId:3)] public partial class Vertex:TopologicalRepresentationItem{//============================================================
public               Vertex():base(){}
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifctopologyresource/lexical/ifcvertexloop.htm
[ifcSql(TypeGroupId:5,TypeId:1226,TableId:3)] public partial class VertexLoop:Loop{//=================================================================================
public               VertexLoop():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="LoopVertex"><para>new ifc.Vertex(...)</para><para>new ifc.VertexPoint(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               VertexLoop(Vertex LoopVertex,string EndOfLineComment=null):base(){AddNext();this.LoopVertex=LoopVertex;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Vertex LoopVertex; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifctopologyresource/lexical/ifcvertexpoint.htm
[ifcSql(TypeGroupId:5,TypeId:1227,TableId:3)] public partial class VertexPoint:Vertex{//==============================================================================
public               VertexPoint():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="VertexGeometry"><para>new ifc.CartesianPoint(...)</para><para>new ifc.PointOnCurve(...)</para><para>new ifc.PointOnSurface(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               VertexPoint(Point VertexGeometry,string EndOfLineComment=null):base(){AddNext();this.VertexGeometry=VertexGeometry;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Point VertexGeometry; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifchvacdomain/lexical/ifcvibrationisolatortype.htm
[ifcSql(TypeGroupId:5,TypeId:1229,TableId:3)] public partial class VibrationIsolatorType:ElementComponentType{//======================================================
public               VibrationIsolatorType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>VibrationIsolatorTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               VibrationIsolatorType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,VibrationIsolatorTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               VibrationIsolatorType(VibrationIsolatorTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public VibrationIsolatorTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifcvirtualelement.htm
[ifcSql(TypeGroupId:5,TypeId:1230,TableId:3)] public partial class VirtualElement:Element{//==========================================================================
public               VirtualElement():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               VirtualElement(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcgeometricconstraintresource/lexical/ifcvirtualgridintersection.htm
[ifcSql(TypeGroupId:5,TypeId:1231,TableId:3)] public partial class VirtualGridIntersection:ENTITY{//==================================================================
public               VirtualGridIntersection():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="IntersectingAxes"><para>List2to2Unique_GridAxis</para></param>
/// <param name="OffsetDistances"><para>List2to3_LengthMeasure</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               VirtualGridIntersection(List2to2Unique_GridAxis IntersectingAxes,List2to3_LengthMeasure OffsetDistances,string EndOfLineComment=null):base(){AddNext();this.IntersectingAxes=IntersectingAxes;this.OffsetDistances=OffsetDistances;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public List2to2Unique_GridAxis IntersectingAxes; //ListType1d
[ifc(2)] public List2to3_LengthMeasure OffsetDistances; //ListType1d
public override void AssignInverseElements(){if (IntersectingAxes!=null) foreach (GridAxis __GridAxis in IntersectingAxes) if (__GridAxis is GridAxis) {if (((GridAxis)__GridAxis).HasIntersections==null) ((GridAxis)__GridAxis).HasIntersections=new LIST<VirtualGridIntersection>();((GridAxis)__GridAxis).HasIntersections.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.WallStandardCase(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifcwall.htm
[ifcSql(TypeGroupId:5,TypeId:1233,TableId:3)] public partial class Wall:BuildingElement{//============================================================================
public               Wall():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>WallTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Wall(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,WallTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public WallTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifcwallstandardcase.htm
[ifcSql(TypeGroupId:5,TypeId:1235,TableId:3)] public partial class WallStandardCase:Wall{//===========================================================================
public               WallStandardCase():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="PredefinedType">[optional]<para>WallTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               WallStandardCase(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,WallTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifcwalltype.htm
[ifcSql(TypeGroupId:5,TypeId:1236,TableId:3)] public partial class WallType:BuildingElementType{//====================================================================
public               WallType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>WallTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               WallType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,WallTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               WallType(WallTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public WallTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcplumbingfireprotectiondomain/lexical/ifcwasteterminaltype.htm
[ifcSql(TypeGroupId:5,TypeId:1238,TableId:3)] public partial class WasteTerminalType:FlowTerminalType{//==============================================================
public               WasteTerminalType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="PredefinedType"><para>WasteTerminalTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               WasteTerminalType(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,Label _ElementType,WasteTerminalTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               WasteTerminalType(WasteTerminalTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public WasteTerminalTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcsharedbldgelements/lexical/ifcwindow.htm
[ifcSql(TypeGroupId:5,TypeId:1239,TableId:3)] public partial class Window:BuildingElement{//==========================================================================
public               Window():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.GridPlacement(...)</para><para>new ifc.LocalPlacement(...)</para></param>
/// <param name="_Representation">[optional]<para>new ifc.MaterialDefinitionRepresentation(...)</para><para>new ifc.ProductDefinitionShape(...)</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="OverallHeight">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="OverallWidth">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="PredefinedType">[optional]<para>WindowTypeEnum</para></param>
/// <param name="PartitioningType">[optional]<para>WindowTypePartitioningEnum</para></param>
/// <param name="UserDefinedPartitioningType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Window(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,ObjectPlacement _ObjectPlacement=null,ProductRepresentation _Representation=null,Identifier Tag=null,PositiveLengthMeasure OverallHeight=null,PositiveLengthMeasure OverallWidth=null,WindowTypeEnum? PredefinedType=null,WindowTypePartitioningEnum? PartitioningType=null,Label UserDefinedPartitioningType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.OverallHeight=OverallHeight;this.OverallWidth=OverallWidth;this.PredefinedType=PredefinedType;this.PartitioningType=PartitioningType;this.UserDefinedPartitioningType=UserDefinedPartitioningType;this.EndOfLineComment=EndOfLineComment;}
[ifc(9,optional=true)] public PositiveLengthMeasure OverallHeight; //TYPE
[ifc(10,optional=true)] public PositiveLengthMeasure OverallWidth; //TYPE
[ifc(11,optional=true)] public WindowTypeEnum? PredefinedType; //ENUM
[ifc(12,optional=true)] public WindowTypePartitioningEnum? PartitioningType; //ENUM
[ifc(13,optional=true)] public Label UserDefinedPartitioningType; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcarchitecturedomain/lexical/ifcwindowliningproperties.htm
[ifcSql(TypeGroupId:5,TypeId:1240,TableId:3)] public partial class WindowLiningProperties:PreDefinedPropertySet{//====================================================
public               WindowLiningProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="LiningDepth">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="LiningThickness">[optional]<para>cast to (ifc.NonNegativeLengthMeasure)...</para></param>
/// <param name="TransomThickness">[optional]<para>cast to (ifc.NonNegativeLengthMeasure)...</para></param>
/// <param name="MullionThickness">[optional]<para>cast to (ifc.NonNegativeLengthMeasure)...</para></param>
/// <param name="FirstTransomOffset">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="SecondTransomOffset">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="FirstMullionOffset">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="SecondMullionOffset">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="ShapeAspectStyle">[optional]<para>new ifc.ShapeAspect(...)</para></param>
/// <param name="LiningOffset">[optional]<para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="LiningToPanelOffsetX">[optional]<para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="LiningToPanelOffsetY">[optional]<para>cast to (ifc.LengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               WindowLiningProperties(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,PositiveLengthMeasure LiningDepth=null,NonNegativeLengthMeasure LiningThickness=null,NonNegativeLengthMeasure TransomThickness=null,NonNegativeLengthMeasure MullionThickness=null,NormalisedRatioMeasure FirstTransomOffset=null,NormalisedRatioMeasure SecondTransomOffset=null,NormalisedRatioMeasure FirstMullionOffset=null,NormalisedRatioMeasure SecondMullionOffset=null,ShapeAspect ShapeAspectStyle=null,LengthMeasure LiningOffset=null,LengthMeasure LiningToPanelOffsetX=null,LengthMeasure LiningToPanelOffsetY=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.LiningDepth=LiningDepth;this.LiningThickness=LiningThickness;this.TransomThickness=TransomThickness;this.MullionThickness=MullionThickness;this.FirstTransomOffset=FirstTransomOffset;this.SecondTransomOffset=SecondTransomOffset;this.FirstMullionOffset=FirstMullionOffset;this.SecondMullionOffset=SecondMullionOffset;this.ShapeAspectStyle=ShapeAspectStyle;this.LiningOffset=LiningOffset;this.LiningToPanelOffsetX=LiningToPanelOffsetX;this.LiningToPanelOffsetY=LiningToPanelOffsetY;this.EndOfLineComment=EndOfLineComment;}
[ifc(5,optional=true)] public PositiveLengthMeasure LiningDepth; //TYPE
[ifc(6,optional=true)] public NonNegativeLengthMeasure LiningThickness; //TYPE
[ifc(7,optional=true)] public NonNegativeLengthMeasure TransomThickness; //TYPE
[ifc(8,optional=true)] public NonNegativeLengthMeasure MullionThickness; //TYPE
[ifc(9,optional=true)] public NormalisedRatioMeasure FirstTransomOffset; //TYPE
[ifc(10,optional=true)] public NormalisedRatioMeasure SecondTransomOffset; //TYPE
[ifc(11,optional=true)] public NormalisedRatioMeasure FirstMullionOffset; //TYPE
[ifc(12,optional=true)] public NormalisedRatioMeasure SecondMullionOffset; //TYPE
[ifc(13,optional=true)] public ShapeAspect ShapeAspectStyle; //ENTITY
[ifc(14,optional=true)] public LengthMeasure LiningOffset; //TYPE
[ifc(15,optional=true)] public LengthMeasure LiningToPanelOffsetX; //TYPE
[ifc(16,optional=true)] public LengthMeasure LiningToPanelOffsetY; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcarchitecturedomain/lexical/ifcwindowpanelproperties.htm
[ifcSql(TypeGroupId:5,TypeId:1241,TableId:3)] public partial class WindowPanelProperties:PreDefinedPropertySet{//=====================================================
public               WindowPanelProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="OperationType"><para>WindowPanelOperationEnum</para></param>
/// <param name="PanelPosition"><para>WindowPanelPositionEnum</para></param>
/// <param name="FrameDepth">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="FrameThickness">[optional]<para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="ShapeAspectStyle">[optional]<para>new ifc.ShapeAspect(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               WindowPanelProperties(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,WindowPanelOperationEnum OperationType,WindowPanelPositionEnum PanelPosition,PositiveLengthMeasure FrameDepth=null,PositiveLengthMeasure FrameThickness=null,ShapeAspect ShapeAspectStyle=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.OperationType=OperationType;this.PanelPosition=PanelPosition;this.FrameDepth=FrameDepth;this.FrameThickness=FrameThickness;this.ShapeAspectStyle=ShapeAspectStyle;this.EndOfLineComment=EndOfLineComment;}
public               WindowPanelProperties(WindowPanelOperationEnum OperationType,WindowPanelPositionEnum PanelPosition,string EndOfLineComment=null):base(){AddNext();this.OperationType=OperationType;this.PanelPosition=PanelPosition;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public WindowPanelOperationEnum OperationType; //ENUM
[ifc(6)] public WindowPanelPositionEnum PanelPosition; //ENUM
[ifc(7,optional=true)] public PositiveLengthMeasure FrameDepth; //TYPE
[ifc(8,optional=true)] public PositiveLengthMeasure FrameThickness; //TYPE
[ifc(9,optional=true)] public ShapeAspect ShapeAspectStyle; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcarchitecturedomain/lexical/ifcwindowstyle.htm
[ifcSql(TypeGroupId:5,TypeId:1243,TableId:3)] public partial class WindowStyle:TypeProduct{//=========================================================================
public               WindowStyle():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="ConstructionType"><para>WindowStyleConstructionEnum</para></param>
/// <param name="OperationType"><para>WindowStyleOperationEnum</para></param>
/// <param name="ParameterTakesPrecedence"><para>cast to (ifc.Boolean)...</para></param>
/// <param name="Sizeable"><para>cast to (ifc.Boolean)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               WindowStyle(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Identifier ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,Label Tag,WindowStyleConstructionEnum ConstructionType,WindowStyleOperationEnum OperationType,Boolean ParameterTakesPrecedence,Boolean Sizeable,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this.ConstructionType=ConstructionType;this.OperationType=OperationType;this.ParameterTakesPrecedence=ParameterTakesPrecedence;this.Sizeable=Sizeable;this.EndOfLineComment=EndOfLineComment;}
public               WindowStyle(WindowStyleConstructionEnum ConstructionType,WindowStyleOperationEnum OperationType,Boolean ParameterTakesPrecedence,Boolean Sizeable,string EndOfLineComment=null):base(){AddNext();this.ConstructionType=ConstructionType;this.OperationType=OperationType;this.ParameterTakesPrecedence=ParameterTakesPrecedence;this.Sizeable=Sizeable;this.EndOfLineComment=EndOfLineComment;}
[ifc(9)] public WindowStyleConstructionEnum ConstructionType; //ENUM
[ifc(10)] public WindowStyleOperationEnum OperationType; //ENUM
[ifc(11)] public Boolean ParameterTakesPrecedence; //TYPE
[ifc(12)] public Boolean Sizeable; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.WorkPlan(...)</para><para>new ifc.WorkSchedule(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1246,TableId:3)] public partial class WorkControl:Control{//=============================================================================
public               WorkControl():base(){}// abstract
[ifc(7)] public DateTime CreationDate; //TYPE
[ifc(8,optional=true)] public Set1toUnbounded_Person Creators; //ListType1d
[ifc(9,optional=true)] public Label Purpose; //TYPE
[ifc(10,optional=true)] public Duration Duration; //TYPE
[ifc(11,optional=true)] public Duration TotalFloat; //TYPE
[ifc(12)] public DateTime StartTime; //TYPE
[ifc(13,optional=true)] public DateTime FinishTime; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcprocessextension/lexical/ifcworkplan.htm
[ifcSql(TypeGroupId:5,TypeId:1247,TableId:3)] public partial class WorkPlan:WorkControl{//============================================================================
public               WorkPlan():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Identification">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="CreationDate"><para>cast to (ifc.DateTime)...</para></param>
/// <param name="Creators">[optional]<para>Set1toUnbounded_Person</para></param>
/// <param name="Purpose">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Duration">[optional]<para>cast to (ifc.Duration)...</para></param>
/// <param name="TotalFloat">[optional]<para>cast to (ifc.Duration)...</para></param>
/// <param name="StartTime"><para>cast to (ifc.DateTime)...</para></param>
/// <param name="FinishTime">[optional]<para>cast to (ifc.DateTime)...</para></param>
/// <param name="PredefinedType">[optional]<para>WorkPlanTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               WorkPlan(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Label ObjectType,Identifier Identification,DateTime CreationDate,Set1toUnbounded_Person Creators,Label Purpose,Duration Duration,Duration TotalFloat,DateTime StartTime,DateTime FinishTime=null,WorkPlanTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.Identification=Identification;this.CreationDate=CreationDate;this.Creators=Creators;this.Purpose=Purpose;this.Duration=Duration;this.TotalFloat=TotalFloat;this.StartTime=StartTime;this.FinishTime=FinishTime;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               WorkPlan(DateTime CreationDate,DateTime StartTime,string EndOfLineComment=null):base(){AddNext();this.CreationDate=CreationDate;this.StartTime=StartTime;this.EndOfLineComment=EndOfLineComment;}
[ifc(14,optional=true)] public WorkPlanTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcprocessextension/lexical/ifcworkschedule.htm
[ifcSql(TypeGroupId:5,TypeId:1248,TableId:3)] public partial class WorkSchedule:WorkControl{//========================================================================
public               WorkSchedule():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Identification">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="CreationDate"><para>cast to (ifc.DateTime)...</para></param>
/// <param name="Creators">[optional]<para>Set1toUnbounded_Person</para></param>
/// <param name="Purpose">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Duration">[optional]<para>cast to (ifc.Duration)...</para></param>
/// <param name="TotalFloat">[optional]<para>cast to (ifc.Duration)...</para></param>
/// <param name="StartTime"><para>cast to (ifc.DateTime)...</para></param>
/// <param name="FinishTime">[optional]<para>cast to (ifc.DateTime)...</para></param>
/// <param name="PredefinedType">[optional]<para>WorkScheduleTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               WorkSchedule(GloballyUniqueId GlobalId,OwnerHistory _OwnerHistory,Label Name,Text Description,Label ObjectType,Identifier Identification,DateTime CreationDate,Set1toUnbounded_Person Creators,Label Purpose,Duration Duration,Duration TotalFloat,DateTime StartTime,DateTime FinishTime=null,WorkScheduleTypeEnum? PredefinedType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.Identification=Identification;this.CreationDate=CreationDate;this.Creators=Creators;this.Purpose=Purpose;this.Duration=Duration;this.TotalFloat=TotalFloat;this.StartTime=StartTime;this.FinishTime=FinishTime;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               WorkSchedule(DateTime CreationDate,DateTime StartTime,string EndOfLineComment=null):base(){AddNext();this.CreationDate=CreationDate;this.StartTime=StartTime;this.EndOfLineComment=EndOfLineComment;}
[ifc(14,optional=true)] public WorkScheduleTypeEnum? PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcdatetimeresource/lexical/ifcworktime.htm
[ifcSql(TypeGroupId:5,TypeId:1249,TableId:3)] public partial class WorkTime:SchedulingTime{//=========================================================================
public               WorkTime():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="DataOrigin">[optional]<para>DataOriginEnum</para></param>
/// <param name="UserDefinedDataOrigin">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="_RecurrencePattern">[optional]<para>new ifc.RecurrencePattern(...)</para></param>
/// <param name="Start">[optional]<para>cast to (ifc.Date)...</para></param>
/// <param name="Finish">[optional]<para>cast to (ifc.Date)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               WorkTime(Label Name=null,DataOriginEnum? DataOrigin=null,Label UserDefinedDataOrigin=null,RecurrencePattern _RecurrencePattern=null,Date Start=null,Date Finish=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.DataOrigin=DataOrigin;this.UserDefinedDataOrigin=UserDefinedDataOrigin;this._RecurrencePattern=_RecurrencePattern;this.Start=Start;this.Finish=Finish;this.EndOfLineComment=EndOfLineComment;}
[ifc(4,optional=true)] public RecurrencePattern _RecurrencePattern; //ENTITY
[ifc(5,optional=true)] public Date Start; //TYPE
[ifc(6,optional=true)] public Date Finish; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcprofileresource/lexical/ifczshapeprofiledef.htm
[ifcSql(TypeGroupId:5,TypeId:1250,TableId:3)] public partial class ZShapeProfileDef:ParameterizedProfileDef{//========================================================
public               ZShapeProfileDef():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ProfileType"><para>ProfileTypeEnum</para></param>
/// <param name="ProfileName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Position">[optional]<para>new ifc.Axis2Placement2D(...)</para></param>
/// <param name="Depth"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="FlangeWidth"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="WebThickness"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="FlangeThickness"><para>cast to (ifc.PositiveLengthMeasure)...</para></param>
/// <param name="FilletRadius">[optional]<para>cast to (ifc.NonNegativeLengthMeasure)...</para></param>
/// <param name="EdgeRadius">[optional]<para>cast to (ifc.NonNegativeLengthMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ZShapeProfileDef(ProfileTypeEnum ProfileType,Label ProfileName,Axis2Placement2D Position,PositiveLengthMeasure Depth,PositiveLengthMeasure FlangeWidth,PositiveLengthMeasure WebThickness,PositiveLengthMeasure FlangeThickness,NonNegativeLengthMeasure FilletRadius=null,NonNegativeLengthMeasure EdgeRadius=null,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.ProfileName=ProfileName;this.Position=Position;this.Depth=Depth;this.FlangeWidth=FlangeWidth;this.WebThickness=WebThickness;this.FlangeThickness=FlangeThickness;this.FilletRadius=FilletRadius;this.EdgeRadius=EdgeRadius;this.EndOfLineComment=EndOfLineComment;}
public               ZShapeProfileDef(ProfileTypeEnum ProfileType,PositiveLengthMeasure Depth,PositiveLengthMeasure FlangeWidth,PositiveLengthMeasure WebThickness,PositiveLengthMeasure FlangeThickness,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.Depth=Depth;this.FlangeWidth=FlangeWidth;this.WebThickness=WebThickness;this.FlangeThickness=FlangeThickness;this.EndOfLineComment=EndOfLineComment;}
[ifc(4)] public PositiveLengthMeasure Depth; //TYPE
[ifc(5)] public PositiveLengthMeasure FlangeWidth; //TYPE
[ifc(6)] public PositiveLengthMeasure WebThickness; //TYPE
[ifc(7)] public PositiveLengthMeasure FlangeThickness; //TYPE
[ifc(8,optional=true)] public NonNegativeLengthMeasure FilletRadius; //TYPE
[ifc(9,optional=true)] public NonNegativeLengthMeasure EdgeRadius; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema/ifcproductextension/lexical/ifczone.htm
[ifcSql(TypeGroupId:5,TypeId:1251,TableId:3)] public partial class Zone:System{//=====================================================================================
public               Zone():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.GloballyUniqueId)...</para></param>
/// <param name="_OwnerHistory">[optional]<para>new ifc.OwnerHistory(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.Text)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="LongName">[optional]<para>cast to (ifc.Label)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Zone(GloballyUniqueId GlobalId=null,OwnerHistory _OwnerHistory=null,Label Name=null,Text Description=null,Label ObjectType=null,Label LongName=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.LongName=LongName;this.EndOfLineComment=EndOfLineComment;}
[ifc(6,optional=true)] public Label LongName; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifc2dcompositecurve.htm
[ifcSql(TypeGroupId:5,TypeId:1529,TableId:3)] public partial class 2DCompositeCurve:CompositeCurve{//=================================================================
public               2DCompositeCurve():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Segments"><para>List1toUnbounded_CompositeCurveSegment</para></param>
/// <param name="SelfIntersect"><para>LOGICAL</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               2DCompositeCurve(List1toUnbounded_CompositeCurveSegment Segments,LOGICAL SelfIntersect,string EndOfLineComment=null):base(){AddNext();this.Segments=Segments;this.SelfIntersect=SelfIntersect;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcangulardimension.htm
[ifcSql(TypeGroupId:5,TypeId:1530,TableId:3)] public partial class AngularDimension:DimensionCurveDirectedCallout{//==================================================
public               AngularDimension():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Contents"><para>List1toUnbounded_DraughtingCalloutElement</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               AngularDimension(List1toUnbounded_DraughtingCalloutElement Contents,string EndOfLineComment=null):base(){AddNext();this.Contents=Contents;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.DimensionCurve(...)</para><para>new ifc.ProjectionCurve(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcannotationcurveoccurrence.htm
[ifcSql(TypeGroupId:5,TypeId:1531,TableId:3)] public partial class AnnotationCurveOccurrence:AnnotationOccurrence{//==================================================
public               AnnotationCurveOccurrence():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Item">[optional]<para>new ifc.Axis1Placement(...)</para><para>new ifc.Axis2Placement2D(...)</para><para>new ifc.Axis2Placement3D(...)</para></param>
/// <param name="Styles"><para>List1toUnbounded_PresentationStyleAssignment</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               AnnotationCurveOccurrence(Placement Item,List1toUnbounded_PresentationStyleAssignment Styles,InductanceMeasure Name=null,string EndOfLineComment=null):base(){AddNext();this.Item=Item;this.Styles=Styles;this.Name=Name;this.EndOfLineComment=EndOfLineComment;}
public               AnnotationCurveOccurrence(List1toUnbounded_PresentationStyleAssignment Styles,string EndOfLineComment=null):base(){AddNext();this.Styles=Styles;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcannotationfillareaoccurrence.htm
[ifcSql(TypeGroupId:5,TypeId:1532,TableId:3)] public partial class AnnotationFillAreaOccurrence:AnnotationOccurrence{//===============================================
public               AnnotationFillAreaOccurrence():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Item">[optional]<para>new ifc.Axis1Placement(...)</para><para>new ifc.Axis2Placement2D(...)</para><para>new ifc.Axis2Placement3D(...)</para></param>
/// <param name="Styles"><para>List1toUnbounded_PresentationStyleAssignment</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="FillStyleTarget">[optional]<para>new ifc.FurnishingElement(...)</para></param>
/// <param name="GlobalOrLocal">[optional]<para>DoorPanelOperationEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               AnnotationFillAreaOccurrence(Placement Item,List1toUnbounded_PresentationStyleAssignment Styles,InductanceMeasure Name=null,FurnishingElement FillStyleTarget=null,DoorPanelOperationEnum? GlobalOrLocal=null,string EndOfLineComment=null):base(){AddNext();this.Item=Item;this.Styles=Styles;this.Name=Name;this.FillStyleTarget=FillStyleTarget;this.GlobalOrLocal=GlobalOrLocal;this.EndOfLineComment=EndOfLineComment;}
public               AnnotationFillAreaOccurrence(List1toUnbounded_PresentationStyleAssignment Styles,string EndOfLineComment=null):base(){AddNext();this.Styles=Styles;this.EndOfLineComment=EndOfLineComment;}
[ifc(4,optional=true)] public FurnishingElement FillStyleTarget; //ENTITY
[ifc(5,optional=true)] public DoorPanelOperationEnum? GlobalOrLocal; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.AnnotationCurveOccurrence(...)</para><para>new ifc.DimensionCurve(...)</para><para>new ifc.ProjectionCurve(...)</para><para>new ifc.AnnotationFillAreaOccurrence(...)</para><para>new ifc.AnnotationSurfaceOccurrence(...)</para><para>new ifc.AnnotationSymbolOccurrence(...)</para><para>new ifc.AnnotationTextOccurrence(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1533,TableId:3)] public partial class AnnotationOccurrence:StyledItem{//=================================================================
public               AnnotationOccurrence():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcannotationsurface.htm
[ifcSql(TypeGroupId:5,TypeId:1534,TableId:3)] public partial class AnnotationSurface:GeometricRepresentationItem{//===================================================
public               AnnotationSurface():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Item"><para>new ifc.DuctFitting(...)</para></param>
/// <param name="TextureCoordinates">[optional]<para>new ifc.RelContainedInSpatialStructure(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               AnnotationSurface(DuctFitting Item,RelContainedInSpatialStructure TextureCoordinates=null,string EndOfLineComment=null):base(){AddNext();this.Item=Item;this.TextureCoordinates=TextureCoordinates;this.EndOfLineComment=EndOfLineComment;}
public               AnnotationSurface(DuctFitting Item):base(){AddNext();this.Item=Item;}
[ifc(1)] public DuctFitting Item; //ENTITY
[ifc(2,optional=true)] public RelContainedInSpatialStructure TextureCoordinates; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcannotationsurfaceoccurrence.htm
[ifcSql(TypeGroupId:5,TypeId:1535,TableId:3)] public partial class AnnotationSurfaceOccurrence:AnnotationOccurrence{//================================================
public               AnnotationSurfaceOccurrence():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Item">[optional]<para>new ifc.Axis1Placement(...)</para><para>new ifc.Axis2Placement2D(...)</para><para>new ifc.Axis2Placement3D(...)</para></param>
/// <param name="Styles"><para>List1toUnbounded_PresentationStyleAssignment</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               AnnotationSurfaceOccurrence(Placement Item,List1toUnbounded_PresentationStyleAssignment Styles,InductanceMeasure Name=null,string EndOfLineComment=null):base(){AddNext();this.Item=Item;this.Styles=Styles;this.Name=Name;this.EndOfLineComment=EndOfLineComment;}
public               AnnotationSurfaceOccurrence(List1toUnbounded_PresentationStyleAssignment Styles,string EndOfLineComment=null):base(){AddNext();this.Styles=Styles;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.TerminatorSymbol(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcannotationsymboloccurrence.htm
[ifcSql(TypeGroupId:5,TypeId:1536,TableId:3)] public partial class AnnotationSymbolOccurrence:AnnotationOccurrence{//=================================================
public               AnnotationSymbolOccurrence():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Item">[optional]<para>new ifc.Axis1Placement(...)</para><para>new ifc.Axis2Placement2D(...)</para><para>new ifc.Axis2Placement3D(...)</para></param>
/// <param name="Styles"><para>List1toUnbounded_PresentationStyleAssignment</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               AnnotationSymbolOccurrence(Placement Item,List1toUnbounded_PresentationStyleAssignment Styles,InductanceMeasure Name=null,string EndOfLineComment=null):base(){AddNext();this.Item=Item;this.Styles=Styles;this.Name=Name;this.EndOfLineComment=EndOfLineComment;}
public               AnnotationSymbolOccurrence(List1toUnbounded_PresentationStyleAssignment Styles,string EndOfLineComment=null):base(){AddNext();this.Styles=Styles;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcannotationtextoccurrence.htm
[ifcSql(TypeGroupId:5,TypeId:1537,TableId:3)] public partial class AnnotationTextOccurrence:AnnotationOccurrence{//===================================================
public               AnnotationTextOccurrence():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Item">[optional]<para>new ifc.Axis1Placement(...)</para><para>new ifc.Axis2Placement2D(...)</para><para>new ifc.Axis2Placement3D(...)</para></param>
/// <param name="Styles"><para>List1toUnbounded_PresentationStyleAssignment</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               AnnotationTextOccurrence(Placement Item,List1toUnbounded_PresentationStyleAssignment Styles,InductanceMeasure Name=null,string EndOfLineComment=null):base(){AddNext();this.Item=Item;this.Styles=Styles;this.Name=Name;this.EndOfLineComment=EndOfLineComment;}
public               AnnotationTextOccurrence(List1toUnbounded_PresentationStyleAssignment Styles,string EndOfLineComment=null):base(){AddNext();this.Styles=Styles;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcappliedvaluerelationship.htm
[ifcSql(TypeGroupId:5,TypeId:1538,TableId:3)] public partial class AppliedValueRelationship:ENTITY{//=================================================================
public               AppliedValueRelationship():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ComponentOfTotal"><para>StructuralSurfaceMemberTypeEnum</para></param>
/// <param name="Components"><para>List1toUnbounded_AppliedValue</para></param>
/// <param name="ArithmeticOperator"><para>cast to (ifc.WarpingConstantMeasure)...</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               AppliedValueRelationship(StructuralSurfaceMemberTypeEnum ComponentOfTotal,List1toUnbounded_AppliedValue Components,WarpingConstantMeasure ArithmeticOperator,InductanceMeasure Name=null,SectionalAreaIntegralMeasure Description=null,string EndOfLineComment=null):base(){AddNext();this.ComponentOfTotal=ComponentOfTotal;this.Components=Components;this.ArithmeticOperator=ArithmeticOperator;this.Name=Name;this.Description=Description;this.EndOfLineComment=EndOfLineComment;}
public               AppliedValueRelationship(StructuralSurfaceMemberTypeEnum ComponentOfTotal,List1toUnbounded_AppliedValue Components,WarpingConstantMeasure ArithmeticOperator,string EndOfLineComment=null):base(){AddNext();this.ComponentOfTotal=ComponentOfTotal;this.Components=Components;this.ArithmeticOperator=ArithmeticOperator;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public StructuralSurfaceMemberTypeEnum ComponentOfTotal; //ENUM
[ifc(2)] public List1toUnbounded_AppliedValue Components; //ListType1d
[ifc(3)] public WarpingConstantMeasure ArithmeticOperator; //TYPE
[ifc(4,optional=true)] public InductanceMeasure Name; //TYPE
[ifc(5,optional=true)] public SectionalAreaIntegralMeasure Description; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcapprovalactorrelationship.htm
[ifcSql(TypeGroupId:5,TypeId:1539,TableId:3)] public partial class ApprovalActorRelationship:ENTITY{//================================================================
public               ApprovalActorRelationship():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="_Actor"><para>new ifc.SectionReinforcementProperties(...)</para></param>
/// <param name="_Approval"><para>SurfaceFeatureTypeEnum</para></param>
/// <param name="Role"><para>SanitaryTerminalTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ApprovalActorRelationship(SectionReinforcementProperties _Actor,SurfaceFeatureTypeEnum _Approval,SanitaryTerminalTypeEnum Role,string EndOfLineComment=null):base(){AddNext();this._Actor=_Actor;this._Approval=_Approval;this.Role=Role;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public SectionReinforcementProperties _Actor; //ENTITY
[ifc(2)] public SurfaceFeatureTypeEnum _Approval; //ENUM
[ifc(3)] public SanitaryTerminalTypeEnum Role; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcapprovalpropertyrelationship.htm
[ifcSql(TypeGroupId:5,TypeId:1540,TableId:3)] public partial class ApprovalPropertyRelationship:ENTITY{//=============================================================
public               ApprovalPropertyRelationship():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ApprovedProperties"><para>Set1toUnbounded_Property</para></param>
/// <param name="_Approval"><para>SurfaceFeatureTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ApprovalPropertyRelationship(Set1toUnbounded_Property ApprovedProperties,SurfaceFeatureTypeEnum _Approval,string EndOfLineComment=null):base(){AddNext();this.ApprovedProperties=ApprovedProperties;this._Approval=_Approval;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Set1toUnbounded_Property ApprovedProperties; //ListType1d
[ifc(2)] public SurfaceFeatureTypeEnum _Approval; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.RationalBezierCurve(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcbeziercurve.htm
[ifcSql(TypeGroupId:5,TypeId:1541,TableId:3)] public partial class BezierCurve:BSplineCurve{//========================================================================
public               BezierCurve():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Degree"><para>INTEGER</para></param>
/// <param name="ControlPointsList"><para>List2toUnbounded_CartesianPoint</para></param>
/// <param name="CurveForm"><para>ActionRequestTypeEnum</para></param>
/// <param name="ClosedCurve"><para>LOGICAL</para></param>
/// <param name="SelfIntersect"><para>LOGICAL</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               BezierCurve(INTEGER Degree,List2toUnbounded_CartesianPoint ControlPointsList,ActionRequestTypeEnum CurveForm,LOGICAL ClosedCurve,LOGICAL SelfIntersect,string EndOfLineComment=null):base(){AddNext();this.Degree=Degree;this.ControlPointsList=ControlPointsList;this.CurveForm=CurveForm;this.ClosedCurve=ClosedCurve;this.SelfIntersect=SelfIntersect;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1542,TableId:3)] public partial class BuildingElementComponent:BuildingElement{//========================================================
public               BuildingElementComponent():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifccalendardate.htm
[ifcSql(TypeGroupId:5,TypeId:1543,TableId:3)] public partial class CalendarDate:ENTITY{//=============================================================================
public               CalendarDate():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="DayComponent"><para>CompoundPlaneAngleMeasure</para></param>
/// <param name="MonthComponent"><para>cast to (ifc.ModulusOfLinearSubgradeReactionMeasure)...</para></param>
/// <param name="YearComponent"><para>cast to (ifc.YearNumber)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CalendarDate(CompoundPlaneAngleMeasure DayComponent,ModulusOfLinearSubgradeReactionMeasure MonthComponent,YearNumber YearComponent,string EndOfLineComment=null):base(){AddNext();this.DayComponent=DayComponent;this.MonthComponent=MonthComponent;this.YearComponent=YearComponent;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public CompoundPlaneAngleMeasure DayComponent; //ListType1d
[ifc(2)] public ModulusOfLinearSubgradeReactionMeasure MonthComponent; //TYPE
[ifc(3)] public YearNumber YearComponent; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcchamferedgefeature.htm
[ifcSql(TypeGroupId:5,TypeId:1544,TableId:3)] public partial class ChamferEdgeFeature:EdgeFeature{//==================================================================
public               ChamferEdgeFeature():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.Fan(...)</para></param>
/// <param name="_Representation">[optional]</param>
/// <param name="Tag">[optional]<para>cast to (ifc.FontWeight)...</para></param>
/// <param name="FeatureLength">[optional]<para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="Width">[optional]<para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="Height">[optional]<para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ChamferEdgeFeature(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name=null,SectionalAreaIntegralMeasure Description=null,InductanceMeasure ObjectType=null,Fan _ObjectPlacement=null,IndexedTextureMap _Representation=null,FontWeight Tag=null,MonthInYearNumber FeatureLength=null,MonthInYearNumber Width=null,MonthInYearNumber Height=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.FeatureLength=FeatureLength;this.Width=Width;this.Height=Height;this.EndOfLineComment=EndOfLineComment;}
public               ChamferEdgeFeature(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.EndOfLineComment=EndOfLineComment;}
[ifc(10,optional=true)] public MonthInYearNumber Width; //TYPE
[ifc(11,optional=true)] public MonthInYearNumber Height; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcclassificationitem.htm
[ifcSql(TypeGroupId:5,TypeId:1545,TableId:3)] public partial class ClassificationItem:ENTITY{//=======================================================================
public               ClassificationItem():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Notation"><para>new ifc.ClassificationNotationFacet(...)</para></param>
/// <param name="ItemOf">[optional]<para>new ifc.Alignment2DVerSegLine(...)</para></param>
/// <param name="Title"><para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ClassificationItem(ClassificationNotationFacet Notation,Alignment2DVerSegLine ItemOf,InductanceMeasure Title,string EndOfLineComment=null):base(){AddNext();this.Notation=Notation;this.ItemOf=ItemOf;this.Title=Title;this.EndOfLineComment=EndOfLineComment;}
public               ClassificationItem(ClassificationNotationFacet Notation,InductanceMeasure Title):base(){AddNext();this.Notation=Notation;this.Title=Title;}
[ifc(1)] public ClassificationNotationFacet Notation; //ENTITY
[ifc(2,optional=true)] public Alignment2DVerSegLine ItemOf; //ENTITY
[ifc(3)] public InductanceMeasure Title; //TYPE
/// <summary>INVERSE: IsClassifyingItemIn of ClassificationItemRelationship for RelatingItem</summary>
[ifcInverse(For:"RelatingItem")] public ClassificationItemRelationship IsClassifyingItemIn;
/// <summary>INVERSE: IsClassifiedItemIn of ClassificationItemRelationship for RelatedItems</summary>
[ifcInverse(For:"RelatedItems")] public ClassificationItemRelationship IsClassifiedItemIn;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcclassificationitemrelationship.htm
[ifcSql(TypeGroupId:5,TypeId:1546,TableId:3)] public partial class ClassificationItemRelationship:ENTITY{//===========================================================
public               ClassificationItemRelationship():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="RelatingItem"><para>new ifc.ClassificationItem(...)</para></param>
/// <param name="RelatedItems"><para>List1toUnbounded_ClassificationItem</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ClassificationItemRelationship(ClassificationItem RelatingItem,List1toUnbounded_ClassificationItem RelatedItems,string EndOfLineComment=null):base(){AddNext();this.RelatingItem=RelatingItem;this.RelatedItems=RelatedItems;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public ClassificationItem RelatingItem; //ENTITY
[ifc(2)] public List1toUnbounded_ClassificationItem RelatedItems; //ListType1d
public override void AssignInverseElements(){if (RelatingItem!=null) RelatingItem.IsClassifyingItemIn=this;
                                             if (RelatedItems!=null) foreach (ClassificationItem __ClassificationItem in RelatedItems) if (__ClassificationItem is ClassificationItem) ((ClassificationItem)__ClassificationItem).IsClassifiedItemIn=this;
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcclassificationnotation.htm
[ifcSql(TypeGroupId:5,TypeId:1547,TableId:3)] public partial class ClassificationNotation:ENTITY{//===================================================================
public               ClassificationNotation():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="NotationFacets"><para>List1toUnbounded_ClassificationNotationFacet</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ClassificationNotation(List1toUnbounded_ClassificationNotationFacet NotationFacets,string EndOfLineComment=null):base(){AddNext();this.NotationFacets=NotationFacets;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public List1toUnbounded_ClassificationNotationFacet NotationFacets; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcclassificationnotationfacet.htm
[ifcSql(TypeGroupId:5,TypeId:1548,TableId:3)] public partial class ClassificationNotationFacet:ENTITY{//==============================================================
public               ClassificationNotationFacet():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="NotationValue"><para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ClassificationNotationFacet(InductanceMeasure NotationValue,string EndOfLineComment=null):base(){AddNext();this.NotationValue=NotationValue;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public InductanceMeasure NotationValue; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifccondition.htm
[ifcSql(TypeGroupId:5,TypeId:1549,TableId:3)] public partial class Condition:Group{//=================================================================================
public               Condition():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Condition(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name=null,SectionalAreaIntegralMeasure Description=null,InductanceMeasure ObjectType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.EndOfLineComment=EndOfLineComment;}
public               Condition(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcconditioncriterion.htm
[ifcSql(TypeGroupId:5,TypeId:1550,TableId:3)] public partial class ConditionCriterion:Control{//======================================================================
public               ConditionCriterion():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Criterion"><para>new ifc.ConditionCriterionSelect(new Label(...))...</para><para>new ifc.ConditionCriterionSelect(new MeasureWithUnit(...))...</para></param>
/// <param name="CriterionDateTime"><para>new ifc.DateTimeSelect(new CalendarDate(...))...</para><para>new ifc.DateTimeSelect(new DateAndTime(...))...</para><para>new ifc.DateTimeSelect(new LocalTime(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ConditionCriterion(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name,SectionalAreaIntegralMeasure Description,InductanceMeasure ObjectType,ConditionCriterionSelect Criterion,DateTimeSelect CriterionDateTime,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.Criterion=Criterion;this.CriterionDateTime=CriterionDateTime;this.EndOfLineComment=EndOfLineComment;}
public               ConditionCriterion(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,ConditionCriterionSelect Criterion,DateTimeSelect CriterionDateTime,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Criterion=Criterion;this.CriterionDateTime=CriterionDateTime;this.EndOfLineComment=EndOfLineComment;}
[ifc(7)] public DateTimeSelect CriterionDateTime; //SELECT
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcconnectionportgeometry.htm
[ifcSql(TypeGroupId:5,TypeId:1551,TableId:3)] public partial class ConnectionPortGeometry:ConnectionGeometry{//=======================================================
public               ConnectionPortGeometry():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="LocationAtRelatingElement"><para>new ifc.Sensor(...)</para></param>
/// <param name="LocationAtRelatedElement">[optional]<para>new ifc.Sensor(...)</para></param>
/// <param name="ProfileOfPort"><para>new ifc.Interceptor(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ConnectionPortGeometry(Sensor LocationAtRelatingElement,Sensor LocationAtRelatedElement,Interceptor ProfileOfPort,string EndOfLineComment=null):base(){AddNext();this.LocationAtRelatingElement=LocationAtRelatingElement;this.LocationAtRelatedElement=LocationAtRelatedElement;this.ProfileOfPort=ProfileOfPort;this.EndOfLineComment=EndOfLineComment;}
public               ConnectionPortGeometry(Sensor LocationAtRelatingElement,Interceptor ProfileOfPort):base(){AddNext();this.LocationAtRelatingElement=LocationAtRelatingElement;this.ProfileOfPort=ProfileOfPort;}
[ifc(1)] public Sensor LocationAtRelatingElement; //ENTITY
[ifc(2,optional=true)] public Sensor LocationAtRelatedElement; //ENTITY
[ifc(3)] public Interceptor ProfileOfPort; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcconstraintaggregationrelationship.htm
[ifcSql(TypeGroupId:5,TypeId:1552,TableId:3)] public partial class ConstraintAggregationRelationship:ENTITY{//========================================================
public               ConstraintAggregationRelationship():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="RelatingConstraint"><para>new ifc.Block(...)</para></param>
/// <param name="RelatedConstraints"><para>List1toUnboundedUnique_Constraint</para></param>
/// <param name="LogicalAggregator"><para>ElectricGeneratorTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ConstraintAggregationRelationship(InductanceMeasure Name,SectionalAreaIntegralMeasure Description,Block RelatingConstraint,List1toUnboundedUnique_Constraint RelatedConstraints,ElectricGeneratorTypeEnum LogicalAggregator,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.RelatingConstraint=RelatingConstraint;this.RelatedConstraints=RelatedConstraints;this.LogicalAggregator=LogicalAggregator;this.EndOfLineComment=EndOfLineComment;}
public               ConstraintAggregationRelationship(Block RelatingConstraint,List1toUnboundedUnique_Constraint RelatedConstraints,ElectricGeneratorTypeEnum LogicalAggregator,string EndOfLineComment=null):base(){AddNext();this.RelatingConstraint=RelatingConstraint;this.RelatedConstraints=RelatedConstraints;this.LogicalAggregator=LogicalAggregator;this.EndOfLineComment=EndOfLineComment;}
[ifc(1,optional=true)] public InductanceMeasure Name; //TYPE
[ifc(2,optional=true)] public SectionalAreaIntegralMeasure Description; //TYPE
[ifc(3)] public Block RelatingConstraint; //ENTITY
[ifc(4)] public List1toUnboundedUnique_Constraint RelatedConstraints; //ListType1d
[ifc(5)] public ElectricGeneratorTypeEnum LogicalAggregator; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcconstraintclassificationrelationship.htm
[ifcSql(TypeGroupId:5,TypeId:1553,TableId:3)] public partial class ConstraintClassificationRelationship:ENTITY{//=====================================================
public               ConstraintClassificationRelationship():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ClassifiedConstraint"><para>new ifc.Block(...)</para></param>
/// <param name="RelatedClassifications"><para>List1toUnbounded_ClassificationNotationSelect</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ConstraintClassificationRelationship(Block ClassifiedConstraint,List1toUnbounded_ClassificationNotationSelect RelatedClassifications,string EndOfLineComment=null):base(){AddNext();this.ClassifiedConstraint=ClassifiedConstraint;this.RelatedClassifications=RelatedClassifications;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Block ClassifiedConstraint; //ENTITY
[ifc(2)] public List1toUnbounded_ClassificationNotationSelect RelatedClassifications; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcconstraintrelationship.htm
[ifcSql(TypeGroupId:5,TypeId:1554,TableId:3)] public partial class ConstraintRelationship:ENTITY{//===================================================================
public               ConstraintRelationship():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="RelatingConstraint"><para>new ifc.Block(...)</para></param>
/// <param name="RelatedConstraints"><para>List1toUnbounded_Constraint</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ConstraintRelationship(InductanceMeasure Name,SectionalAreaIntegralMeasure Description,Block RelatingConstraint,List1toUnbounded_Constraint RelatedConstraints,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.RelatingConstraint=RelatingConstraint;this.RelatedConstraints=RelatedConstraints;this.EndOfLineComment=EndOfLineComment;}
public               ConstraintRelationship(Block RelatingConstraint,List1toUnbounded_Constraint RelatedConstraints,string EndOfLineComment=null):base(){AddNext();this.RelatingConstraint=RelatingConstraint;this.RelatedConstraints=RelatedConstraints;this.EndOfLineComment=EndOfLineComment;}
[ifc(1,optional=true)] public InductanceMeasure Name; //TYPE
[ifc(2,optional=true)] public SectionalAreaIntegralMeasure Description; //TYPE
[ifc(3)] public Block RelatingConstraint; //ENTITY
[ifc(4)] public List1toUnbounded_Constraint RelatedConstraints; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifccoordinateduniversaltimeoffset.htm
[ifcSql(TypeGroupId:5,TypeId:1555,TableId:3)] public partial class CoordinatedUniversalTimeOffset:ENTITY{//===========================================================
public               CoordinatedUniversalTimeOffset():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="HourOffset"><para>cast to (ifc.HourInDay)...</para></param>
/// <param name="MinuteOffset">[optional]<para>cast to (ifc.MinuteInHour)...</para></param>
/// <param name="Sense"><para>AheadOrBehind</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CoordinatedUniversalTimeOffset(HourInDay HourOffset,MinuteInHour MinuteOffset,AheadOrBehind Sense,string EndOfLineComment=null):base(){AddNext();this.HourOffset=HourOffset;this.MinuteOffset=MinuteOffset;this.Sense=Sense;this.EndOfLineComment=EndOfLineComment;}
public               CoordinatedUniversalTimeOffset(HourInDay HourOffset,AheadOrBehind Sense):base(){AddNext();this.HourOffset=HourOffset;this.Sense=Sense;}
[ifc(1)] public HourInDay HourOffset; //TYPE
[ifc(2,optional=true)] public MinuteInHour MinuteOffset; //TYPE
[ifc(3)] public AheadOrBehind Sense; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifccranerailashapeprofiledef.htm
[ifcSql(TypeGroupId:5,TypeId:1556,TableId:3)] public partial class CraneRailAShapeProfileDef:ParameterizedProfileDef{//===============================================
public               CraneRailAShapeProfileDef():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ProfileType"><para>FlowInstrumentTypeEnum</para></param>
/// <param name="ProfileName">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Position"><para>TimeSeriesDataTypeEnum</para></param>
/// <param name="OverallHeight"><para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="BaseWidth2"><para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="Radius">[optional]<para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="HeadWidth"><para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="HeadDepth2"><para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="HeadDepth3"><para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="WebThickness"><para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="BaseWidth4"><para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="BaseDepth1"><para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="BaseDepth2"><para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="BaseDepth3"><para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="CentreOfGravityInY">[optional]<para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CraneRailAShapeProfileDef(FlowInstrumentTypeEnum ProfileType,InductanceMeasure ProfileName,TimeSeriesDataTypeEnum Position,MonthInYearNumber OverallHeight,MonthInYearNumber BaseWidth2,MonthInYearNumber Radius,MonthInYearNumber HeadWidth,MonthInYearNumber HeadDepth2,MonthInYearNumber HeadDepth3,MonthInYearNumber WebThickness,MonthInYearNumber BaseWidth4,MonthInYearNumber BaseDepth1,MonthInYearNumber BaseDepth2,MonthInYearNumber BaseDepth3,MonthInYearNumber CentreOfGravityInY=null,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.ProfileName=ProfileName;this.Position=Position;this.OverallHeight=OverallHeight;this.BaseWidth2=BaseWidth2;this.Radius=Radius;this.HeadWidth=HeadWidth;this.HeadDepth2=HeadDepth2;this.HeadDepth3=HeadDepth3;this.WebThickness=WebThickness;this.BaseWidth4=BaseWidth4;this.BaseDepth1=BaseDepth1;this.BaseDepth2=BaseDepth2;this.BaseDepth3=BaseDepth3;this.CentreOfGravityInY=CentreOfGravityInY;this.EndOfLineComment=EndOfLineComment;}
public               CraneRailAShapeProfileDef(FlowInstrumentTypeEnum ProfileType,TimeSeriesDataTypeEnum Position,MonthInYearNumber OverallHeight,MonthInYearNumber BaseWidth2,MonthInYearNumber HeadWidth,MonthInYearNumber HeadDepth2,MonthInYearNumber HeadDepth3,MonthInYearNumber WebThickness,MonthInYearNumber BaseWidth4,MonthInYearNumber BaseDepth1,MonthInYearNumber BaseDepth2,MonthInYearNumber BaseDepth3,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.Position=Position;this.OverallHeight=OverallHeight;this.BaseWidth2=BaseWidth2;this.HeadWidth=HeadWidth;this.HeadDepth2=HeadDepth2;this.HeadDepth3=HeadDepth3;this.WebThickness=WebThickness;this.BaseWidth4=BaseWidth4;this.BaseDepth1=BaseDepth1;this.BaseDepth2=BaseDepth2;this.BaseDepth3=BaseDepth3;this.EndOfLineComment=EndOfLineComment;}
[ifc(4)] public MonthInYearNumber OverallHeight; //TYPE
[ifc(5)] public MonthInYearNumber BaseWidth2; //TYPE
[ifc(6,optional=true)] public MonthInYearNumber Radius; //TYPE
[ifc(7)] public MonthInYearNumber HeadWidth; //TYPE
[ifc(8)] public MonthInYearNumber HeadDepth2; //TYPE
[ifc(9)] public MonthInYearNumber HeadDepth3; //TYPE
[ifc(10)] public MonthInYearNumber WebThickness; //TYPE
[ifc(11)] public MonthInYearNumber BaseWidth4; //TYPE
[ifc(12)] public MonthInYearNumber BaseDepth1; //TYPE
[ifc(13)] public MonthInYearNumber BaseDepth2; //TYPE
[ifc(14)] public MonthInYearNumber BaseDepth3; //TYPE
[ifc(15,optional=true)] public MonthInYearNumber CentreOfGravityInY; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifccranerailfshapeprofiledef.htm
[ifcSql(TypeGroupId:5,TypeId:1557,TableId:3)] public partial class CraneRailFShapeProfileDef:ParameterizedProfileDef{//===============================================
public               CraneRailFShapeProfileDef():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ProfileType"><para>FlowInstrumentTypeEnum</para></param>
/// <param name="ProfileName">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Position"><para>TimeSeriesDataTypeEnum</para></param>
/// <param name="OverallHeight"><para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="HeadWidth"><para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="Radius">[optional]<para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="HeadDepth2"><para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="HeadDepth3"><para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="WebThickness"><para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="BaseDepth1"><para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="BaseDepth2"><para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="CentreOfGravityInY">[optional]<para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               CraneRailFShapeProfileDef(FlowInstrumentTypeEnum ProfileType,InductanceMeasure ProfileName,TimeSeriesDataTypeEnum Position,MonthInYearNumber OverallHeight,MonthInYearNumber HeadWidth,MonthInYearNumber Radius,MonthInYearNumber HeadDepth2,MonthInYearNumber HeadDepth3,MonthInYearNumber WebThickness,MonthInYearNumber BaseDepth1,MonthInYearNumber BaseDepth2,MonthInYearNumber CentreOfGravityInY=null,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.ProfileName=ProfileName;this.Position=Position;this.OverallHeight=OverallHeight;this.HeadWidth=HeadWidth;this.Radius=Radius;this.HeadDepth2=HeadDepth2;this.HeadDepth3=HeadDepth3;this.WebThickness=WebThickness;this.BaseDepth1=BaseDepth1;this.BaseDepth2=BaseDepth2;this.CentreOfGravityInY=CentreOfGravityInY;this.EndOfLineComment=EndOfLineComment;}
public               CraneRailFShapeProfileDef(FlowInstrumentTypeEnum ProfileType,TimeSeriesDataTypeEnum Position,MonthInYearNumber OverallHeight,MonthInYearNumber HeadWidth,MonthInYearNumber HeadDepth2,MonthInYearNumber HeadDepth3,MonthInYearNumber WebThickness,MonthInYearNumber BaseDepth1,MonthInYearNumber BaseDepth2,string EndOfLineComment=null):base(){AddNext();this.ProfileType=ProfileType;this.Position=Position;this.OverallHeight=OverallHeight;this.HeadWidth=HeadWidth;this.HeadDepth2=HeadDepth2;this.HeadDepth3=HeadDepth3;this.WebThickness=WebThickness;this.BaseDepth1=BaseDepth1;this.BaseDepth2=BaseDepth2;this.EndOfLineComment=EndOfLineComment;}
[ifc(4)] public MonthInYearNumber OverallHeight; //TYPE
[ifc(5)] public MonthInYearNumber HeadWidth; //TYPE
[ifc(6,optional=true)] public MonthInYearNumber Radius; //TYPE
[ifc(7)] public MonthInYearNumber HeadDepth2; //TYPE
[ifc(8)] public MonthInYearNumber HeadDepth3; //TYPE
[ifc(9)] public MonthInYearNumber WebThickness; //TYPE
[ifc(10)] public MonthInYearNumber BaseDepth1; //TYPE
[ifc(11)] public MonthInYearNumber BaseDepth2; //TYPE
[ifc(12,optional=true)] public MonthInYearNumber CentreOfGravityInY; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcdateandtime.htm
[ifcSql(TypeGroupId:5,TypeId:1558,TableId:3)] public partial class DateAndTime:ENTITY{//==============================================================================
public               DateAndTime():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="DateComponent"><para>new ifc.CalendarDate(...)</para></param>
/// <param name="TimeComponent"><para>new ifc.LocalTime(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DateAndTime(CalendarDate DateComponent,LocalTime TimeComponent,string EndOfLineComment=null):base(){AddNext();this.DateComponent=DateComponent;this.TimeComponent=TimeComponent;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public CalendarDate DateComponent; //ENTITY
[ifc(2)] public LocalTime TimeComponent; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcdefinedsymbol.htm
[ifcSql(TypeGroupId:5,TypeId:1559,TableId:3)] public partial class DefinedSymbol:GeometricRepresentationItem{//=======================================================
public               DefinedSymbol():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Definition"><para>new ifc.DefinedSymbolSelect(new ExternallyDefinedSymbol(...))...</para><para>new ifc.DefinedSymbolSelect(new PreDefinedSymbol(...))...</para></param>
/// <param name="Target"><para>new ifc.AirTerminalType(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DefinedSymbol(DefinedSymbolSelect Definition,AirTerminalType Target,string EndOfLineComment=null):base(){AddNext();this.Definition=Definition;this.Target=Target;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public DefinedSymbolSelect Definition; //SELECT
[ifc(2)] public AirTerminalType Target; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcdiameterdimension.htm
[ifcSql(TypeGroupId:5,TypeId:1560,TableId:3)] public partial class DiameterDimension:DimensionCurveDirectedCallout{//=================================================
public               DiameterDimension():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Contents"><para>List1toUnbounded_DraughtingCalloutElement</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DiameterDimension(List1toUnbounded_DraughtingCalloutElement Contents,string EndOfLineComment=null):base(){AddNext();this.Contents=Contents;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcdimensioncalloutrelationship.htm
[ifcSql(TypeGroupId:5,TypeId:1561,TableId:3)] public partial class DimensionCalloutRelationship:DraughtingCalloutRelationship{//======================================
public               DimensionCalloutRelationship():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="RelatingDraughtingCallout"><para>new ifc.DraughtingCallout(...)</para><para>new ifc.DimensionCurveDirectedCallout(...)</para><para>new ifc.AngularDimension(...)</para><para>new ifc.DiameterDimension(...)</para><para>new ifc.LinearDimension(...)</para><para>new ifc.RadiusDimension(...)</para><para>new ifc.StructuredDimensionCallout(...)</para></param>
/// <param name="RelatedDraughtingCallout"><para>new ifc.DraughtingCallout(...)</para><para>new ifc.DimensionCurveDirectedCallout(...)</para><para>new ifc.AngularDimension(...)</para><para>new ifc.DiameterDimension(...)</para><para>new ifc.LinearDimension(...)</para><para>new ifc.RadiusDimension(...)</para><para>new ifc.StructuredDimensionCallout(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DimensionCalloutRelationship(InductanceMeasure Name,SectionalAreaIntegralMeasure Description,DraughtingCallout RelatingDraughtingCallout,DraughtingCallout RelatedDraughtingCallout,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.RelatingDraughtingCallout=RelatingDraughtingCallout;this.RelatedDraughtingCallout=RelatedDraughtingCallout;this.EndOfLineComment=EndOfLineComment;}
public               DimensionCalloutRelationship(DraughtingCallout RelatingDraughtingCallout,DraughtingCallout RelatedDraughtingCallout,string EndOfLineComment=null):base(){AddNext();this.RelatingDraughtingCallout=RelatingDraughtingCallout;this.RelatedDraughtingCallout=RelatedDraughtingCallout;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcdimensioncurve.htm
[ifcSql(TypeGroupId:5,TypeId:1562,TableId:3)] public partial class DimensionCurve:AnnotationCurveOccurrence{//========================================================
public               DimensionCurve():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Item">[optional]<para>new ifc.Axis1Placement(...)</para><para>new ifc.Axis2Placement2D(...)</para><para>new ifc.Axis2Placement3D(...)</para></param>
/// <param name="Styles"><para>List1toUnbounded_PresentationStyleAssignment</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DimensionCurve(Placement Item,List1toUnbounded_PresentationStyleAssignment Styles,InductanceMeasure Name=null,string EndOfLineComment=null):base(){AddNext();this.Item=Item;this.Styles=Styles;this.Name=Name;this.EndOfLineComment=EndOfLineComment;}
public               DimensionCurve(List1toUnbounded_PresentationStyleAssignment Styles,string EndOfLineComment=null):base(){AddNext();this.Styles=Styles;this.EndOfLineComment=EndOfLineComment;}
/// <summary>INVERSE: AnnotatedBySymbols of TerminatorSymbol for AnnotatedCurve</summary>
[ifcInverse(For:"AnnotatedCurve")] public TerminatorSymbol AnnotatedBySymbols;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.AngularDimension(...)</para><para>new ifc.DiameterDimension(...)</para><para>new ifc.LinearDimension(...)</para><para>new ifc.RadiusDimension(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcdimensioncurvedirectedcallout.htm
[ifcSql(TypeGroupId:5,TypeId:1563,TableId:3)] public partial class DimensionCurveDirectedCallout:DraughtingCallout{//=================================================
public               DimensionCurveDirectedCallout():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Contents"><para>List1toUnbounded_DraughtingCalloutElement</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DimensionCurveDirectedCallout(List1toUnbounded_DraughtingCalloutElement Contents,string EndOfLineComment=null):base(){AddNext();this.Contents=Contents;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcdimensioncurveterminator.htm
[ifcSql(TypeGroupId:5,TypeId:1564,TableId:3)] public partial class DimensionCurveTerminator:TerminatorSymbol{//=======================================================
public               DimensionCurveTerminator():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Item">[optional]<para>new ifc.Axis1Placement(...)</para><para>new ifc.Axis2Placement2D(...)</para><para>new ifc.Axis2Placement3D(...)</para></param>
/// <param name="Styles"><para>List1toUnbounded_PresentationStyleAssignment</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="AnnotatedCurve"><para>new ifc.AnnotationCurveOccurrence(...)</para><para>new ifc.DimensionCurve(...)</para><para>new ifc.ProjectionCurve(...)</para></param>
/// <param name="Role"><para>DimensionExtentUsage</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DimensionCurveTerminator(Placement Item,List1toUnbounded_PresentationStyleAssignment Styles,InductanceMeasure Name,AnnotationCurveOccurrence AnnotatedCurve,DimensionExtentUsage Role,string EndOfLineComment=null):base(){AddNext();this.Item=Item;this.Styles=Styles;this.Name=Name;this.AnnotatedCurve=AnnotatedCurve;this.Role=Role;this.EndOfLineComment=EndOfLineComment;}
public               DimensionCurveTerminator(List1toUnbounded_PresentationStyleAssignment Styles,AnnotationCurveOccurrence AnnotatedCurve,DimensionExtentUsage Role,string EndOfLineComment=null):base(){AddNext();this.Styles=Styles;this.AnnotatedCurve=AnnotatedCurve;this.Role=Role;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public DimensionExtentUsage Role; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcdimensionpair.htm
[ifcSql(TypeGroupId:5,TypeId:1565,TableId:3)] public partial class DimensionPair:DraughtingCalloutRelationship{//=====================================================
public               DimensionPair():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="RelatingDraughtingCallout"><para>new ifc.DraughtingCallout(...)</para><para>new ifc.DimensionCurveDirectedCallout(...)</para><para>new ifc.AngularDimension(...)</para><para>new ifc.DiameterDimension(...)</para><para>new ifc.LinearDimension(...)</para><para>new ifc.RadiusDimension(...)</para><para>new ifc.StructuredDimensionCallout(...)</para></param>
/// <param name="RelatedDraughtingCallout"><para>new ifc.DraughtingCallout(...)</para><para>new ifc.DimensionCurveDirectedCallout(...)</para><para>new ifc.AngularDimension(...)</para><para>new ifc.DiameterDimension(...)</para><para>new ifc.LinearDimension(...)</para><para>new ifc.RadiusDimension(...)</para><para>new ifc.StructuredDimensionCallout(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DimensionPair(InductanceMeasure Name,SectionalAreaIntegralMeasure Description,DraughtingCallout RelatingDraughtingCallout,DraughtingCallout RelatedDraughtingCallout,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.RelatingDraughtingCallout=RelatingDraughtingCallout;this.RelatedDraughtingCallout=RelatedDraughtingCallout;this.EndOfLineComment=EndOfLineComment;}
public               DimensionPair(DraughtingCallout RelatingDraughtingCallout,DraughtingCallout RelatedDraughtingCallout,string EndOfLineComment=null):base(){AddNext();this.RelatingDraughtingCallout=RelatingDraughtingCallout;this.RelatedDraughtingCallout=RelatedDraughtingCallout;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcdocumentelectronicformat.htm
[ifcSql(TypeGroupId:5,TypeId:1566,TableId:3)] public partial class DocumentElectronicFormat:ENTITY{//=================================================================
public               DocumentElectronicFormat():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="FileExtension">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="MimeContentType">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="MimeSubtype">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DocumentElectronicFormat(InductanceMeasure FileExtension=null,InductanceMeasure MimeContentType=null,InductanceMeasure MimeSubtype=null,string EndOfLineComment=null):base(){AddNext();this.FileExtension=FileExtension;this.MimeContentType=MimeContentType;this.MimeSubtype=MimeSubtype;this.EndOfLineComment=EndOfLineComment;}
[ifc(1,optional=true)] public InductanceMeasure FileExtension; //TYPE
[ifc(2,optional=true)] public InductanceMeasure MimeContentType; //TYPE
[ifc(3,optional=true)] public InductanceMeasure MimeSubtype; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.DimensionCurveDirectedCallout(...)</para><para>new ifc.AngularDimension(...)</para><para>new ifc.DiameterDimension(...)</para><para>new ifc.LinearDimension(...)</para><para>new ifc.RadiusDimension(...)</para><para>new ifc.StructuredDimensionCallout(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcdraughtingcallout.htm
[ifcSql(TypeGroupId:5,TypeId:1567,TableId:3)] public partial class DraughtingCallout:GeometricRepresentationItem{//===================================================
public               DraughtingCallout():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Contents"><para>List1toUnbounded_DraughtingCalloutElement</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DraughtingCallout(List1toUnbounded_DraughtingCalloutElement Contents,string EndOfLineComment=null):base(){AddNext();this.Contents=Contents;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public List1toUnbounded_DraughtingCalloutElement Contents; //ListType1d
/// <summary>INVERSE: IsRelatedToCallout of DraughtingCalloutRelationship for RelatingDraughtingCallout</summary>
[ifcInverse(For:"RelatingDraughtingCallout")] public LIST<DraughtingCalloutRelationship> IsRelatedToCallout;
/// <summary>INVERSE: IsRelatedFromCallout of DraughtingCalloutRelationship for RelatedDraughtingCallout</summary>
[ifcInverse(For:"RelatedDraughtingCallout")] public LIST<DraughtingCalloutRelationship> IsRelatedFromCallout;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.DimensionCalloutRelationship(...)</para><para>new ifc.DimensionPair(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcdraughtingcalloutrelationship.htm
[ifcSql(TypeGroupId:5,TypeId:1568,TableId:3)] public partial class DraughtingCalloutRelationship:ENTITY{//============================================================
public               DraughtingCalloutRelationship():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="RelatingDraughtingCallout"><para>new ifc.DraughtingCallout(...)</para><para>new ifc.DimensionCurveDirectedCallout(...)</para><para>new ifc.AngularDimension(...)</para><para>new ifc.DiameterDimension(...)</para><para>new ifc.LinearDimension(...)</para><para>new ifc.RadiusDimension(...)</para><para>new ifc.StructuredDimensionCallout(...)</para></param>
/// <param name="RelatedDraughtingCallout"><para>new ifc.DraughtingCallout(...)</para><para>new ifc.DimensionCurveDirectedCallout(...)</para><para>new ifc.AngularDimension(...)</para><para>new ifc.DiameterDimension(...)</para><para>new ifc.LinearDimension(...)</para><para>new ifc.RadiusDimension(...)</para><para>new ifc.StructuredDimensionCallout(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DraughtingCalloutRelationship(InductanceMeasure Name,SectionalAreaIntegralMeasure Description,DraughtingCallout RelatingDraughtingCallout,DraughtingCallout RelatedDraughtingCallout,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this.RelatingDraughtingCallout=RelatingDraughtingCallout;this.RelatedDraughtingCallout=RelatedDraughtingCallout;this.EndOfLineComment=EndOfLineComment;}
public               DraughtingCalloutRelationship(DraughtingCallout RelatingDraughtingCallout,DraughtingCallout RelatedDraughtingCallout,string EndOfLineComment=null):base(){AddNext();this.RelatingDraughtingCallout=RelatingDraughtingCallout;this.RelatedDraughtingCallout=RelatedDraughtingCallout;this.EndOfLineComment=EndOfLineComment;}
[ifc(1,optional=true)] public InductanceMeasure Name; //TYPE
[ifc(2,optional=true)] public SectionalAreaIntegralMeasure Description; //TYPE
[ifc(3)] public DraughtingCallout RelatingDraughtingCallout; //ENTITY
[ifc(4)] public DraughtingCallout RelatedDraughtingCallout; //ENTITY
public override void AssignInverseElements(){if (RelatingDraughtingCallout!=null) {if (RelatingDraughtingCallout.IsRelatedToCallout==null) RelatingDraughtingCallout.IsRelatedToCallout=new LIST<DraughtingCalloutRelationship>();RelatingDraughtingCallout.IsRelatedToCallout.Add(this);}
                                             if (RelatedDraughtingCallout!=null) {if (RelatedDraughtingCallout.IsRelatedFromCallout==null) RelatedDraughtingCallout.IsRelatedFromCallout=new LIST<DraughtingCalloutRelationship>();RelatedDraughtingCallout.IsRelatedFromCallout.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcdraughtingpredefinedtextfont.htm
[ifcSql(TypeGroupId:5,TypeId:1569,TableId:3)] public partial class DraughtingPreDefinedTextFont:PreDefinedTextFont{//=================================================
public               DraughtingPreDefinedTextFont():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name"><para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               DraughtingPreDefinedTextFont(InductanceMeasure Name,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ChamferEdgeFeature(...)</para><para>new ifc.RoundedEdgeFeature(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1570,TableId:3)] public partial class EdgeFeature:FeatureElementSubtraction{//===========================================================
public               EdgeFeature():base(){}// abstract
[ifc(9,optional=true)] public MonthInYearNumber FeatureLength; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcelectricdistributionpoint.htm
[ifcSql(TypeGroupId:5,TypeId:1571,TableId:3)] public partial class ElectricDistributionPoint:FlowController{//========================================================
public               ElectricDistributionPoint():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.Fan(...)</para></param>
/// <param name="_Representation">[optional]</param>
/// <param name="Tag">[optional]<para>cast to (ifc.FontWeight)...</para></param>
/// <param name="DistributionPointFunction"><para>ElectricDistributionPointFunctionEnum</para></param>
/// <param name="UserDefinedFunction">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ElectricDistributionPoint(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name,SectionalAreaIntegralMeasure Description,InductanceMeasure ObjectType,Fan _ObjectPlacement,IndexedTextureMap _Representation,FontWeight Tag,ElectricDistributionPointFunctionEnum DistributionPointFunction,InductanceMeasure UserDefinedFunction=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.DistributionPointFunction=DistributionPointFunction;this.UserDefinedFunction=UserDefinedFunction;this.EndOfLineComment=EndOfLineComment;}
public               ElectricDistributionPoint(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,ElectricDistributionPointFunctionEnum DistributionPointFunction,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.DistributionPointFunction=DistributionPointFunction;this.EndOfLineComment=EndOfLineComment;}
[ifc(9)] public ElectricDistributionPointFunctionEnum DistributionPointFunction; //ENUM
[ifc(10,optional=true)] public InductanceMeasure UserDefinedFunction; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcelectricheatertype.htm
[ifcSql(TypeGroupId:5,TypeId:1572,TableId:3)] public partial class ElectricHeaterType:FlowTerminalType{//=============================================================
public               ElectricHeaterType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="PredefinedType"><para>ElectricHeaterTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ElectricHeaterType(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name,SectionalAreaIntegralMeasure Description,InductanceMeasure ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,InductanceMeasure Tag,InductanceMeasure _ElementType,ElectricHeaterTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               ElectricHeaterType(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,ElectricHeaterTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public ElectricHeaterTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcelectricalbaseproperties.htm
[ifcSql(TypeGroupId:5,TypeId:1573,TableId:3)] public partial class ElectricalBaseProperties:EnergyProperties{//=======================================================
public               ElectricalBaseProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="EnergySequence">[optional]<para>EnergySequenceEnum</para></param>
/// <param name="UserDefinedEnergySequence">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="ElectricCurrentType">[optional]<para>ElectricCurrentEnum</para></param>
/// <param name="InputVoltage"><para>cast to (ifc.Duration)...</para></param>
/// <param name="InputFrequency"><para>cast to (ifc.ElectricResistanceMeasure)...</para></param>
/// <param name="FullLoadCurrent">[optional]<para>cast to (ifc.DimensionCount)...</para></param>
/// <param name="MinimumCircuitCurrent">[optional]<para>cast to (ifc.DimensionCount)...</para></param>
/// <param name="MaximumPowerInput">[optional]<para>cast to (ifc.NumericMeasure)...</para></param>
/// <param name="RatedPowerInput">[optional]<para>cast to (ifc.NumericMeasure)...</para></param>
/// <param name="InputPhase"><para>INTEGER</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ElectricalBaseProperties(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name,SectionalAreaIntegralMeasure Description,EnergySequenceEnum? EnergySequence,InductanceMeasure UserDefinedEnergySequence,ElectricCurrentEnum? ElectricCurrentType,Duration InputVoltage,ElectricResistanceMeasure InputFrequency,DimensionCount FullLoadCurrent,DimensionCount MinimumCircuitCurrent,NumericMeasure MaximumPowerInput,NumericMeasure RatedPowerInput,INTEGER InputPhase,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.EnergySequence=EnergySequence;this.UserDefinedEnergySequence=UserDefinedEnergySequence;this.ElectricCurrentType=ElectricCurrentType;this.InputVoltage=InputVoltage;this.InputFrequency=InputFrequency;this.FullLoadCurrent=FullLoadCurrent;this.MinimumCircuitCurrent=MinimumCircuitCurrent;this.MaximumPowerInput=MaximumPowerInput;this.RatedPowerInput=RatedPowerInput;this.InputPhase=InputPhase;this.EndOfLineComment=EndOfLineComment;}
public               ElectricalBaseProperties(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,Duration InputVoltage,ElectricResistanceMeasure InputFrequency,INTEGER InputPhase,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.InputVoltage=InputVoltage;this.InputFrequency=InputFrequency;this.InputPhase=InputPhase;this.EndOfLineComment=EndOfLineComment;}
[ifc(7,optional=true)] public ElectricCurrentEnum? ElectricCurrentType; //ENUM
[ifc(8)] public Duration InputVoltage; //TYPE
[ifc(9)] public ElectricResistanceMeasure InputFrequency; //TYPE
[ifc(10,optional=true)] public DimensionCount FullLoadCurrent; //TYPE
[ifc(11,optional=true)] public DimensionCount MinimumCircuitCurrent; //TYPE
[ifc(12,optional=true)] public NumericMeasure MaximumPowerInput; //TYPE
[ifc(13,optional=true)] public NumericMeasure RatedPowerInput; //TYPE
[ifc(14)] public INTEGER InputPhase; //BASETYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcelectricalcircuit.htm
[ifcSql(TypeGroupId:5,TypeId:1574,TableId:3)] public partial class ElectricalCircuit:System{//========================================================================
public               ElectricalCircuit():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ElectricalCircuit(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name=null,SectionalAreaIntegralMeasure Description=null,InductanceMeasure ObjectType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.EndOfLineComment=EndOfLineComment;}
public               ElectricalCircuit(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcelectricalelement.htm
[ifcSql(TypeGroupId:5,TypeId:1575,TableId:3)] public partial class ElectricalElement:Element{//=======================================================================
public               ElectricalElement():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.Fan(...)</para></param>
/// <param name="_Representation">[optional]</param>
/// <param name="Tag">[optional]<para>cast to (ifc.FontWeight)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ElectricalElement(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name=null,SectionalAreaIntegralMeasure Description=null,InductanceMeasure ObjectType=null,Fan _ObjectPlacement=null,IndexedTextureMap _Representation=null,FontWeight Tag=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.EndOfLineComment=EndOfLineComment;}
public               ElectricalElement(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.ElectricalBaseProperties(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcenergyproperties.htm
[ifcSql(TypeGroupId:5,TypeId:1576,TableId:3)] public partial class EnergyProperties:PropertySetDefinition{//==========================================================
public               EnergyProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="EnergySequence">[optional]<para>EnergySequenceEnum</para></param>
/// <param name="UserDefinedEnergySequence">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               EnergyProperties(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name=null,SectionalAreaIntegralMeasure Description=null,EnergySequenceEnum? EnergySequence=null,InductanceMeasure UserDefinedEnergySequence=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.EnergySequence=EnergySequence;this.UserDefinedEnergySequence=UserDefinedEnergySequence;this.EndOfLineComment=EndOfLineComment;}
public               EnergyProperties(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.EndOfLineComment=EndOfLineComment;}
[ifc(5,optional=true)] public EnergySequenceEnum? EnergySequence; //ENUM
[ifc(6,optional=true)] public InductanceMeasure UserDefinedEnergySequence; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcenvironmentalimpactvalue.htm
[ifcSql(TypeGroupId:5,TypeId:1577,TableId:3)] public partial class EnvironmentalImpactValue:AppliedValue{//===========================================================
public               EnvironmentalImpactValue():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="_AppliedValue">[optional]<para>new ifc.SectionedSpine(...)</para></param>
/// <param name="UnitBasis">[optional]<para>new ifc.ExternalSpatialElement(...)</para></param>
/// <param name="ApplicableDate">[optional]<para>new ifc.DateTimeSelect(new CalendarDate(...))...</para><para>new ifc.DateTimeSelect(new DateAndTime(...))...</para><para>new ifc.DateTimeSelect(new LocalTime(...))...</para></param>
/// <param name="FixedUntilDate">[optional]<para>new ifc.DateTimeSelect(new CalendarDate(...))...</para><para>new ifc.DateTimeSelect(new DateAndTime(...))...</para><para>new ifc.DateTimeSelect(new LocalTime(...))...</para></param>
/// <param name="ImpactType"><para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Category"><para>EnvironmentalImpactCategoryEnum</para></param>
/// <param name="UserDefinedCategory">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               EnvironmentalImpactValue(InductanceMeasure Name,SectionalAreaIntegralMeasure Description,SectionedSpine _AppliedValue,ExternalSpatialElement UnitBasis,DateTimeSelect ApplicableDate,DateTimeSelect FixedUntilDate,InductanceMeasure ImpactType,EnvironmentalImpactCategoryEnum Category,InductanceMeasure UserDefinedCategory=null,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.Description=Description;this._AppliedValue=_AppliedValue;this.UnitBasis=UnitBasis;this.ApplicableDate=ApplicableDate;this.FixedUntilDate=FixedUntilDate;this.ImpactType=ImpactType;this.Category=Category;this.UserDefinedCategory=UserDefinedCategory;this.EndOfLineComment=EndOfLineComment;}
public               EnvironmentalImpactValue(InductanceMeasure ImpactType,EnvironmentalImpactCategoryEnum Category,string EndOfLineComment=null):base(){AddNext();this.ImpactType=ImpactType;this.Category=Category;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcequipmentelement.htm
[ifcSql(TypeGroupId:5,TypeId:1578,TableId:3)] public partial class EquipmentElement:Element{//========================================================================
public               EquipmentElement():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.Fan(...)</para></param>
/// <param name="_Representation">[optional]</param>
/// <param name="Tag">[optional]<para>cast to (ifc.FontWeight)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               EquipmentElement(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name=null,SectionalAreaIntegralMeasure Description=null,InductanceMeasure ObjectType=null,Fan _ObjectPlacement=null,IndexedTextureMap _Representation=null,FontWeight Tag=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.EndOfLineComment=EndOfLineComment;}
public               EquipmentElement(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcequipmentstandard.htm
[ifcSql(TypeGroupId:5,TypeId:1579,TableId:3)] public partial class EquipmentStandard:Control{//=======================================================================
public               EquipmentStandard():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               EquipmentStandard(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name=null,SectionalAreaIntegralMeasure Description=null,InductanceMeasure ObjectType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.EndOfLineComment=EndOfLineComment;}
public               EquipmentStandard(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcextendedmaterialproperties.htm
[ifcSql(TypeGroupId:5,TypeId:1580,TableId:3)] public partial class ExtendedMaterialProperties:MaterialProperties{//===================================================
public               ExtendedMaterialProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="_Material"><para>new ifc.EvaporatorType(...)</para></param>
/// <param name="_ExtendedProperties"><para>Set1toUnbounded_Property</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="Name"><para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ExtendedMaterialProperties(EvaporatorType _Material,Set1toUnbounded_Property _ExtendedProperties,SectionalAreaIntegralMeasure Description,InductanceMeasure Name,string EndOfLineComment=null):base(){AddNext();this._Material=_Material;this._ExtendedProperties=_ExtendedProperties;this.Description=Description;this.Name=Name;this.EndOfLineComment=EndOfLineComment;}
public               ExtendedMaterialProperties(EvaporatorType _Material,Set1toUnbounded_Property _ExtendedProperties,InductanceMeasure Name):base(){AddNext();this._Material=_Material;this._ExtendedProperties=_ExtendedProperties;this.Name=Name;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcexternallydefinedsymbol.htm
[ifcSql(TypeGroupId:5,TypeId:1581,TableId:3)] public partial class ExternallyDefinedSymbol:ExternalReference{//=======================================================
public               ExternallyDefinedSymbol():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Location">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="ItemReference">[optional]<para>cast to (ifc.FontWeight)...</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ExternallyDefinedSymbol(InductanceMeasure Location=null,FontWeight ItemReference=null,InductanceMeasure Name=null,string EndOfLineComment=null):base(){AddNext();this.Location=Location;this.ItemReference=ItemReference;this.Name=Name;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcfillareastyletilesymbolwithstyle.htm
[ifcSql(TypeGroupId:5,TypeId:1582,TableId:3)] public partial class FillAreaStyleTileSymbolWithStyle:GeometricRepresentationItem{//====================================
public               FillAreaStyleTileSymbolWithStyle():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Symbol"><para>new ifc.AnnotationSymbolOccurrence(...)</para><para>new ifc.TerminatorSymbol(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               FillAreaStyleTileSymbolWithStyle(AnnotationSymbolOccurrence Symbol,string EndOfLineComment=null):base(){AddNext();this.Symbol=Symbol;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public AnnotationSymbolOccurrence Symbol; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcfluidflowproperties.htm
[ifcSql(TypeGroupId:5,TypeId:1583,TableId:3)] public partial class FluidFlowProperties:PropertySetDefinition{//=======================================================
public               FluidFlowProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="PropertySource"><para>PropertySourceEnum</para></param>
/// <param name="FlowConditionTimeSeries">[optional]<para>new ifc.RelDefinesByObject(...)</para><para>new ifc.RelDefinesByProperties(...)</para><para>new ifc.RelDefinesByTemplate(...)</para><para>new ifc.RelDefinesByType(...)</para></param>
/// <param name="VelocityTimeSeries">[optional]<para>new ifc.RelDefinesByObject(...)</para><para>new ifc.RelDefinesByProperties(...)</para><para>new ifc.RelDefinesByTemplate(...)</para><para>new ifc.RelDefinesByType(...)</para></param>
/// <param name="FlowrateTimeSeries">[optional]<para>new ifc.RelDefinesByObject(...)</para><para>new ifc.RelDefinesByProperties(...)</para><para>new ifc.RelDefinesByTemplate(...)</para><para>new ifc.RelDefinesByType(...)</para></param>
/// <param name="Fluid"><para>new ifc.EvaporatorType(...)</para></param>
/// <param name="PressureTimeSeries">[optional]<para>new ifc.RelDefinesByObject(...)</para><para>new ifc.RelDefinesByProperties(...)</para><para>new ifc.RelDefinesByTemplate(...)</para><para>new ifc.RelDefinesByType(...)</para></param>
/// <param name="UserDefinedPropertySource">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="TemperatureSingleValue">[optional]<para>cast to (ifc.TemperatureGradientMeasure)...</para></param>
/// <param name="WetBulbTemperatureSingleValue">[optional]<para>cast to (ifc.TemperatureGradientMeasure)...</para></param>
/// <param name="WetBulbTemperatureTimeSeries">[optional]<para>new ifc.RelDefinesByObject(...)</para><para>new ifc.RelDefinesByProperties(...)</para><para>new ifc.RelDefinesByTemplate(...)</para><para>new ifc.RelDefinesByType(...)</para></param>
/// <param name="TemperatureTimeSeries">[optional]<para>new ifc.RelDefinesByObject(...)</para><para>new ifc.RelDefinesByProperties(...)</para><para>new ifc.RelDefinesByTemplate(...)</para><para>new ifc.RelDefinesByType(...)</para></param>
/// <param name="FlowrateSingleValue">[optional]<para>new ifc.SlabStandardCase(...)</para></param>
/// <param name="FlowConditionSingleValue">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="VelocitySingleValue">[optional]<para>cast to (ifc.KinematicViscosityMeasure)...</para></param>
/// <param name="PressureSingleValue">[optional]<para>cast to (ifc.ParameterValue)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               FluidFlowProperties(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name,SectionalAreaIntegralMeasure Description,PropertySourceEnum PropertySource,RelDefines FlowConditionTimeSeries,RelDefines VelocityTimeSeries,RelDefines FlowrateTimeSeries,EvaporatorType Fluid,RelDefines PressureTimeSeries=null,InductanceMeasure UserDefinedPropertySource=null,TemperatureGradientMeasure TemperatureSingleValue=null,TemperatureGradientMeasure WetBulbTemperatureSingleValue=null,RelDefines WetBulbTemperatureTimeSeries=null,RelDefines TemperatureTimeSeries=null,SlabStandardCase FlowrateSingleValue=null,NormalisedRatioMeasure FlowConditionSingleValue=null,KinematicViscosityMeasure VelocitySingleValue=null,ParameterValue PressureSingleValue=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.PropertySource=PropertySource;this.FlowConditionTimeSeries=FlowConditionTimeSeries;this.VelocityTimeSeries=VelocityTimeSeries;this.FlowrateTimeSeries=FlowrateTimeSeries;this.Fluid=Fluid;this.PressureTimeSeries=PressureTimeSeries;this.UserDefinedPropertySource=UserDefinedPropertySource;this.TemperatureSingleValue=TemperatureSingleValue;this.WetBulbTemperatureSingleValue=WetBulbTemperatureSingleValue;this.WetBulbTemperatureTimeSeries=WetBulbTemperatureTimeSeries;this.TemperatureTimeSeries=TemperatureTimeSeries;this.FlowrateSingleValue=FlowrateSingleValue;this.FlowConditionSingleValue=FlowConditionSingleValue;this.VelocitySingleValue=VelocitySingleValue;this.PressureSingleValue=PressureSingleValue;this.EndOfLineComment=EndOfLineComment;}
public               FluidFlowProperties(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,PropertySourceEnum PropertySource,EvaporatorType Fluid,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.PropertySource=PropertySource;this.Fluid=Fluid;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public PropertySourceEnum PropertySource; //ENUM
[ifc(6,optional=true)] public RelDefines FlowConditionTimeSeries; //ENTITY
[ifc(7,optional=true)] public RelDefines VelocityTimeSeries; //ENTITY
[ifc(8,optional=true)] public RelDefines FlowrateTimeSeries; //ENTITY
[ifc(9)] public EvaporatorType Fluid; //ENTITY
[ifc(10,optional=true)] public RelDefines PressureTimeSeries; //ENTITY
[ifc(11,optional=true)] public InductanceMeasure UserDefinedPropertySource; //TYPE
[ifc(12,optional=true)] public TemperatureGradientMeasure TemperatureSingleValue; //TYPE
[ifc(13,optional=true)] public TemperatureGradientMeasure WetBulbTemperatureSingleValue; //TYPE
[ifc(14,optional=true)] public RelDefines WetBulbTemperatureTimeSeries; //ENTITY
[ifc(15,optional=true)] public RelDefines TemperatureTimeSeries; //ENTITY
[ifc(16,optional=true)] public SlabStandardCase FlowrateSingleValue; //ENTITY
[ifc(17,optional=true)] public NormalisedRatioMeasure FlowConditionSingleValue; //TYPE
[ifc(18,optional=true)] public KinematicViscosityMeasure VelocitySingleValue; //TYPE
[ifc(19,optional=true)] public ParameterValue PressureSingleValue; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcfuelproperties.htm
[ifcSql(TypeGroupId:5,TypeId:1584,TableId:3)] public partial class FuelProperties:MaterialProperties{//===============================================================
public               FuelProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="_Material"><para>new ifc.EvaporatorType(...)</para></param>
/// <param name="CombustionTemperature">[optional]<para>cast to (ifc.TemperatureGradientMeasure)...</para></param>
/// <param name="CarbonContent">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="LowerHeatingValue">[optional]<para>cast to (ifc.FontStyle)...</para></param>
/// <param name="HigherHeatingValue">[optional]<para>cast to (ifc.FontStyle)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               FuelProperties(EvaporatorType _Material,TemperatureGradientMeasure CombustionTemperature=null,NormalisedRatioMeasure CarbonContent=null,FontStyle LowerHeatingValue=null,FontStyle HigherHeatingValue=null,string EndOfLineComment=null):base(){AddNext();this._Material=_Material;this.CombustionTemperature=CombustionTemperature;this.CarbonContent=CarbonContent;this.LowerHeatingValue=LowerHeatingValue;this.HigherHeatingValue=HigherHeatingValue;this.EndOfLineComment=EndOfLineComment;}
public               FuelProperties(EvaporatorType _Material,string EndOfLineComment=null):base(){AddNext();this._Material=_Material;this.EndOfLineComment=EndOfLineComment;}
[ifc(5,optional=true)] public FontStyle HigherHeatingValue; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcfurniturestandard.htm
[ifcSql(TypeGroupId:5,TypeId:1585,TableId:3)] public partial class FurnitureStandard:Control{//=======================================================================
public               FurnitureStandard():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               FurnitureStandard(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name=null,SectionalAreaIntegralMeasure Description=null,InductanceMeasure ObjectType=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.EndOfLineComment=EndOfLineComment;}
public               FurnitureStandard(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcgasterminaltype.htm
[ifcSql(TypeGroupId:5,TypeId:1586,TableId:3)] public partial class GasTerminalType:FlowTerminalType{//================================================================
public               GasTerminalType():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="ApplicableOccurrence">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="HasPropertySets">[optional]<para>Set1toUnbounded_PropertySetDefinition</para></param>
/// <param name="RepresentationMaps">[optional]<para>List1toUnboundedUnique_RepresentationMap</para></param>
/// <param name="Tag">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="_ElementType">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="PredefinedType"><para>GasTerminalTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               GasTerminalType(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name,SectionalAreaIntegralMeasure Description,InductanceMeasure ApplicableOccurrence,Set1toUnbounded_PropertySetDefinition HasPropertySets,List1toUnboundedUnique_RepresentationMap RepresentationMaps,InductanceMeasure Tag,InductanceMeasure _ElementType,GasTerminalTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableOccurrence=ApplicableOccurrence;this.HasPropertySets=HasPropertySets;this.RepresentationMaps=RepresentationMaps;this.Tag=Tag;this._ElementType=_ElementType;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               GasTerminalType(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,GasTerminalTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(10)] public GasTerminalTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcgeneralmaterialproperties.htm
[ifcSql(TypeGroupId:5,TypeId:1587,TableId:3)] public partial class GeneralMaterialProperties:MaterialProperties{//====================================================
public               GeneralMaterialProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="_Material"><para>new ifc.EvaporatorType(...)</para></param>
/// <param name="MolecularWeight">[optional]<para>cast to (ifc.MassMeasure)...</para></param>
/// <param name="Porosity">[optional]<para>cast to (ifc.ModulusOfRotationalSubgradeReactionMeasure)...</para></param>
/// <param name="MassDensity">[optional]<para>cast to (ifc.LinearStiffnessMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               GeneralMaterialProperties(EvaporatorType _Material,MassMeasure MolecularWeight=null,ModulusOfRotationalSubgradeReactionMeasure Porosity=null,LinearStiffnessMeasure MassDensity=null,string EndOfLineComment=null):base(){AddNext();this._Material=_Material;this.MolecularWeight=MolecularWeight;this.Porosity=Porosity;this.MassDensity=MassDensity;this.EndOfLineComment=EndOfLineComment;}
public               GeneralMaterialProperties(EvaporatorType _Material,string EndOfLineComment=null):base(){AddNext();this._Material=_Material;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.StructuralProfileProperties(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcgeneralprofileproperties.htm
[ifcSql(TypeGroupId:5,TypeId:1588,TableId:3)] public partial class GeneralProfileProperties:ProfileProperties{//======================================================
public               GeneralProfileProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ProfileName">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="ProfileDefinition">[optional]<para>new ifc.Interceptor(...)</para></param>
/// <param name="PhysicalWeight">[optional]<para>cast to (ifc.LuminousFluxMeasure)...</para></param>
/// <param name="Perimeter">[optional]<para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="MinimumPlateThickness">[optional]<para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="MaximumPlateThickness">[optional]<para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="CrossSectionArea">[optional]<para>ArcIndex</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               GeneralProfileProperties(InductanceMeasure ProfileName=null,Interceptor ProfileDefinition=null,LuminousFluxMeasure PhysicalWeight=null,MonthInYearNumber Perimeter=null,MonthInYearNumber MinimumPlateThickness=null,MonthInYearNumber MaximumPlateThickness=null,ArcIndex CrossSectionArea=null,string EndOfLineComment=null):base(){AddNext();this.ProfileName=ProfileName;this.ProfileDefinition=ProfileDefinition;this.PhysicalWeight=PhysicalWeight;this.Perimeter=Perimeter;this.MinimumPlateThickness=MinimumPlateThickness;this.MaximumPlateThickness=MaximumPlateThickness;this.CrossSectionArea=CrossSectionArea;this.EndOfLineComment=EndOfLineComment;}
[ifc(5,optional=true)] public MonthInYearNumber MinimumPlateThickness; //TYPE
[ifc(6,optional=true)] public MonthInYearNumber MaximumPlateThickness; //TYPE
[ifc(7,optional=true)] public ArcIndex CrossSectionArea; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifchygroscopicmaterialproperties.htm
[ifcSql(TypeGroupId:5,TypeId:1589,TableId:3)] public partial class HygroscopicMaterialProperties:MaterialProperties{//================================================
public               HygroscopicMaterialProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="_Material"><para>new ifc.EvaporatorType(...)</para></param>
/// <param name="UpperVaporResistanceFactor">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="LowerVaporResistanceFactor">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="IsothermalMoistureCapacity">[optional]<para>cast to (ifc.Identifier)...</para></param>
/// <param name="VaporPermeability">[optional]<para>cast to (ifc.TextDecoration)...</para></param>
/// <param name="MoistureDiffusivity">[optional]<para>cast to (ifc.MassFlowRateMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               HygroscopicMaterialProperties(EvaporatorType _Material,NormalisedRatioMeasure UpperVaporResistanceFactor=null,NormalisedRatioMeasure LowerVaporResistanceFactor=null,Identifier IsothermalMoistureCapacity=null,TextDecoration VaporPermeability=null,MassFlowRateMeasure MoistureDiffusivity=null,string EndOfLineComment=null):base(){AddNext();this._Material=_Material;this.UpperVaporResistanceFactor=UpperVaporResistanceFactor;this.LowerVaporResistanceFactor=LowerVaporResistanceFactor;this.IsothermalMoistureCapacity=IsothermalMoistureCapacity;this.VaporPermeability=VaporPermeability;this.MoistureDiffusivity=MoistureDiffusivity;this.EndOfLineComment=EndOfLineComment;}
public               HygroscopicMaterialProperties(EvaporatorType _Material,string EndOfLineComment=null):base(){AddNext();this._Material=_Material;this.EndOfLineComment=EndOfLineComment;}
[ifc(5,optional=true)] public TextDecoration VaporPermeability; //TYPE
[ifc(6,optional=true)] public MassFlowRateMeasure MoistureDiffusivity; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifclineardimension.htm
[ifcSql(TypeGroupId:5,TypeId:1590,TableId:3)] public partial class LinearDimension:DimensionCurveDirectedCallout{//===================================================
public               LinearDimension():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Contents"><para>List1toUnbounded_DraughtingCalloutElement</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               LinearDimension(List1toUnbounded_DraughtingCalloutElement Contents,string EndOfLineComment=null):base(){AddNext();this.Contents=Contents;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifclocaltime.htm
[ifcSql(TypeGroupId:5,TypeId:1591,TableId:3)] public partial class LocalTime:ENTITY{//================================================================================
public               LocalTime():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="HourComponent"><para>cast to (ifc.HourInDay)...</para></param>
/// <param name="MinuteComponent">[optional]<para>cast to (ifc.MinuteInHour)...</para></param>
/// <param name="SecondComponent">[optional]<para>cast to (ifc.SecondInMinute)...</para></param>
/// <param name="_Zone">[optional]<para>new ifc.CoordinatedUniversalTimeOffset(...)</para></param>
/// <param name="DaylightSavingOffset">[optional]<para>cast to (ifc.DaylightSavingHour)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               LocalTime(HourInDay HourComponent,MinuteInHour MinuteComponent=null,SecondInMinute SecondComponent=null,CoordinatedUniversalTimeOffset _Zone=null,DaylightSavingHour DaylightSavingOffset=null,string EndOfLineComment=null):base(){AddNext();this.HourComponent=HourComponent;this.MinuteComponent=MinuteComponent;this.SecondComponent=SecondComponent;this._Zone=_Zone;this.DaylightSavingOffset=DaylightSavingOffset;this.EndOfLineComment=EndOfLineComment;}
public               LocalTime(HourInDay HourComponent,string EndOfLineComment=null):base(){AddNext();this.HourComponent=HourComponent;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public HourInDay HourComponent; //TYPE
[ifc(2,optional=true)] public MinuteInHour MinuteComponent; //TYPE
[ifc(3,optional=true)] public SecondInMinute SecondComponent; //TYPE
[ifc(4,optional=true)] public CoordinatedUniversalTimeOffset _Zone; //ENTITY
[ifc(5,optional=true)] public DaylightSavingHour DaylightSavingOffset; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcmechanicalconcretematerialproperties.htm
[ifcSql(TypeGroupId:5,TypeId:1592,TableId:3)] public partial class MechanicalConcreteMaterialProperties:MechanicalMaterialProperties{//===============================
public               MechanicalConcreteMaterialProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="_Material"><para>new ifc.EvaporatorType(...)</para></param>
/// <param name="DynamicViscosity">[optional]<para>cast to (ifc.DateTime)...</para></param>
/// <param name="YoungModulus">[optional]<para>cast to (ifc.LuminousIntensityMeasure)...</para></param>
/// <param name="ShearModulus">[optional]<para>cast to (ifc.LuminousIntensityMeasure)...</para></param>
/// <param name="PoissonRatio">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="ThermalExpansionCoefficient">[optional]<para>cast to (ifc.SpecificHeatCapacityMeasure)...</para></param>
/// <param name="CompressiveStrength">[optional]<para>cast to (ifc.ParameterValue)...</para></param>
/// <param name="MaxAggregateSize">[optional]<para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="AdmixturesDescription">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="Workability">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="ProtectivePoreRatio">[optional]<para>cast to (ifc.ModulusOfRotationalSubgradeReactionMeasure)...</para></param>
/// <param name="WaterImpermeability">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               MechanicalConcreteMaterialProperties(EvaporatorType _Material,DateTime DynamicViscosity=null,LuminousIntensityMeasure YoungModulus=null,LuminousIntensityMeasure ShearModulus=null,NormalisedRatioMeasure PoissonRatio=null,SpecificHeatCapacityMeasure ThermalExpansionCoefficient=null,ParameterValue CompressiveStrength=null,MonthInYearNumber MaxAggregateSize=null,SectionalAreaIntegralMeasure AdmixturesDescription=null,SectionalAreaIntegralMeasure Workability=null,ModulusOfRotationalSubgradeReactionMeasure ProtectivePoreRatio=null,SectionalAreaIntegralMeasure WaterImpermeability=null,string EndOfLineComment=null):base(){AddNext();this._Material=_Material;this.DynamicViscosity=DynamicViscosity;this.YoungModulus=YoungModulus;this.ShearModulus=ShearModulus;this.PoissonRatio=PoissonRatio;this.ThermalExpansionCoefficient=ThermalExpansionCoefficient;this.CompressiveStrength=CompressiveStrength;this.MaxAggregateSize=MaxAggregateSize;this.AdmixturesDescription=AdmixturesDescription;this.Workability=Workability;this.ProtectivePoreRatio=ProtectivePoreRatio;this.WaterImpermeability=WaterImpermeability;this.EndOfLineComment=EndOfLineComment;}
public               MechanicalConcreteMaterialProperties(EvaporatorType _Material,string EndOfLineComment=null):base(){AddNext();this._Material=_Material;this.EndOfLineComment=EndOfLineComment;}
[ifc(7,optional=true)] public ParameterValue CompressiveStrength; //TYPE
[ifc(8,optional=true)] public MonthInYearNumber MaxAggregateSize; //TYPE
[ifc(9,optional=true)] public SectionalAreaIntegralMeasure AdmixturesDescription; //TYPE
[ifc(10,optional=true)] public SectionalAreaIntegralMeasure Workability; //TYPE
[ifc(11,optional=true)] public ModulusOfRotationalSubgradeReactionMeasure ProtectivePoreRatio; //TYPE
[ifc(12,optional=true)] public SectionalAreaIntegralMeasure WaterImpermeability; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.MechanicalConcreteMaterialProperties(...)</para><para>new ifc.MechanicalSteelMaterialProperties(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcmechanicalmaterialproperties.htm
[ifcSql(TypeGroupId:5,TypeId:1593,TableId:3)] public partial class MechanicalMaterialProperties:MaterialProperties{//=================================================
public               MechanicalMaterialProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="_Material"><para>new ifc.EvaporatorType(...)</para></param>
/// <param name="DynamicViscosity">[optional]<para>cast to (ifc.DateTime)...</para></param>
/// <param name="YoungModulus">[optional]<para>cast to (ifc.LuminousIntensityMeasure)...</para></param>
/// <param name="ShearModulus">[optional]<para>cast to (ifc.LuminousIntensityMeasure)...</para></param>
/// <param name="PoissonRatio">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="ThermalExpansionCoefficient">[optional]<para>cast to (ifc.SpecificHeatCapacityMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               MechanicalMaterialProperties(EvaporatorType _Material,DateTime DynamicViscosity=null,LuminousIntensityMeasure YoungModulus=null,LuminousIntensityMeasure ShearModulus=null,NormalisedRatioMeasure PoissonRatio=null,SpecificHeatCapacityMeasure ThermalExpansionCoefficient=null,string EndOfLineComment=null):base(){AddNext();this._Material=_Material;this.DynamicViscosity=DynamicViscosity;this.YoungModulus=YoungModulus;this.ShearModulus=ShearModulus;this.PoissonRatio=PoissonRatio;this.ThermalExpansionCoefficient=ThermalExpansionCoefficient;this.EndOfLineComment=EndOfLineComment;}
public               MechanicalMaterialProperties(EvaporatorType _Material,string EndOfLineComment=null):base(){AddNext();this._Material=_Material;this.EndOfLineComment=EndOfLineComment;}
[ifc(5,optional=true)] public NormalisedRatioMeasure PoissonRatio; //TYPE
[ifc(6,optional=true)] public SpecificHeatCapacityMeasure ThermalExpansionCoefficient; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcmechanicalsteelmaterialproperties.htm
[ifcSql(TypeGroupId:5,TypeId:1594,TableId:3)] public partial class MechanicalSteelMaterialProperties:MechanicalMaterialProperties{//==================================
public               MechanicalSteelMaterialProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="_Material"><para>new ifc.EvaporatorType(...)</para></param>
/// <param name="DynamicViscosity">[optional]<para>cast to (ifc.DateTime)...</para></param>
/// <param name="YoungModulus">[optional]<para>cast to (ifc.LuminousIntensityMeasure)...</para></param>
/// <param name="ShearModulus">[optional]<para>cast to (ifc.LuminousIntensityMeasure)...</para></param>
/// <param name="PoissonRatio">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="ThermalExpansionCoefficient">[optional]<para>cast to (ifc.SpecificHeatCapacityMeasure)...</para></param>
/// <param name="YieldStress">[optional]<para>cast to (ifc.ParameterValue)...</para></param>
/// <param name="UltimateStress">[optional]<para>cast to (ifc.ParameterValue)...</para></param>
/// <param name="UltimateStrain">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="HardeningModule">[optional]<para>cast to (ifc.LuminousIntensityMeasure)...</para></param>
/// <param name="ProportionalStress">[optional]<para>cast to (ifc.ParameterValue)...</para></param>
/// <param name="PlasticStrain">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="Relaxations">[optional]<para>List1toUnbounded_Relaxation</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               MechanicalSteelMaterialProperties(EvaporatorType _Material,DateTime DynamicViscosity=null,LuminousIntensityMeasure YoungModulus=null,LuminousIntensityMeasure ShearModulus=null,NormalisedRatioMeasure PoissonRatio=null,SpecificHeatCapacityMeasure ThermalExpansionCoefficient=null,ParameterValue YieldStress=null,ParameterValue UltimateStress=null,NormalisedRatioMeasure UltimateStrain=null,LuminousIntensityMeasure HardeningModule=null,ParameterValue ProportionalStress=null,NormalisedRatioMeasure PlasticStrain=null,List1toUnbounded_Relaxation Relaxations=null,string EndOfLineComment=null):base(){AddNext();this._Material=_Material;this.DynamicViscosity=DynamicViscosity;this.YoungModulus=YoungModulus;this.ShearModulus=ShearModulus;this.PoissonRatio=PoissonRatio;this.ThermalExpansionCoefficient=ThermalExpansionCoefficient;this.YieldStress=YieldStress;this.UltimateStress=UltimateStress;this.UltimateStrain=UltimateStrain;this.HardeningModule=HardeningModule;this.ProportionalStress=ProportionalStress;this.PlasticStrain=PlasticStrain;this.Relaxations=Relaxations;this.EndOfLineComment=EndOfLineComment;}
public               MechanicalSteelMaterialProperties(EvaporatorType _Material,string EndOfLineComment=null):base(){AddNext();this._Material=_Material;this.EndOfLineComment=EndOfLineComment;}
[ifc(7,optional=true)] public ParameterValue YieldStress; //TYPE
[ifc(8,optional=true)] public ParameterValue UltimateStress; //TYPE
[ifc(9,optional=true)] public NormalisedRatioMeasure UltimateStrain; //TYPE
[ifc(10,optional=true)] public LuminousIntensityMeasure HardeningModule; //TYPE
[ifc(11,optional=true)] public ParameterValue ProportionalStress; //TYPE
[ifc(12,optional=true)] public NormalisedRatioMeasure PlasticStrain; //TYPE
[ifc(13,optional=true)] public List1toUnbounded_Relaxation Relaxations; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcmove.htm
[ifcSql(TypeGroupId:5,TypeId:1595,TableId:3)] public partial class Move:Task{//=======================================================================================
public               Move():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="TaskId"><para>cast to (ifc.FontWeight)...</para></param>
/// <param name="Status">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="WorkMethod">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="IsMilestone"><para>BOOLEAN</para></param>
/// <param name="Priority">[optional]<para>INTEGER</para></param>
/// <param name="MoveFrom"><para>new ifc.ProjectOrder(...)</para></param>
/// <param name="MoveTo"><para>new ifc.ProjectOrder(...)</para></param>
/// <param name="PunchList">[optional]<para>List1toUnboundedUnique_Text</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Move(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name,SectionalAreaIntegralMeasure Description,InductanceMeasure ObjectType,FontWeight TaskId,InductanceMeasure Status,InductanceMeasure WorkMethod,BOOLEAN IsMilestone,INTEGER Priority,ProjectOrder MoveFrom,ProjectOrder MoveTo,List1toUnboundedUnique_Text PunchList=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.TaskId=TaskId;this.Status=Status;this.WorkMethod=WorkMethod;this.IsMilestone=IsMilestone;this.Priority=Priority;this.MoveFrom=MoveFrom;this.MoveTo=MoveTo;this.PunchList=PunchList;this.EndOfLineComment=EndOfLineComment;}
public               Move(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,FontWeight TaskId,BOOLEAN IsMilestone,ProjectOrder MoveFrom,ProjectOrder MoveTo,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.TaskId=TaskId;this.IsMilestone=IsMilestone;this.MoveFrom=MoveFrom;this.MoveTo=MoveTo;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.TwoDirectionRepeatFactor(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifconedirectionrepeatfactor.htm
[ifcSql(TypeGroupId:5,TypeId:1596,TableId:3)] public partial class OneDirectionRepeatFactor:GeometricRepresentationItem{//============================================
public               OneDirectionRepeatFactor():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="RepeatFactor"></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               OneDirectionRepeatFactor(Representation RepeatFactor,string EndOfLineComment=null):base(){AddNext();this.RepeatFactor=RepeatFactor;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Representation RepeatFactor; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcopticalmaterialproperties.htm
[ifcSql(TypeGroupId:5,TypeId:1597,TableId:3)] public partial class OpticalMaterialProperties:MaterialProperties{//====================================================
public               OpticalMaterialProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="_Material"><para>new ifc.EvaporatorType(...)</para></param>
/// <param name="VisibleTransmittance">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="SolarTransmittance">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="ThermalIrTransmittance">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="ThermalIrEmissivityBack">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="ThermalIrEmissivityFront">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="VisibleReflectanceBack">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="VisibleReflectanceFront">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="SolarReflectanceFront">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="SolarReflectanceBack">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               OpticalMaterialProperties(EvaporatorType _Material,NormalisedRatioMeasure VisibleTransmittance=null,NormalisedRatioMeasure SolarTransmittance=null,NormalisedRatioMeasure ThermalIrTransmittance=null,NormalisedRatioMeasure ThermalIrEmissivityBack=null,NormalisedRatioMeasure ThermalIrEmissivityFront=null,NormalisedRatioMeasure VisibleReflectanceBack=null,NormalisedRatioMeasure VisibleReflectanceFront=null,NormalisedRatioMeasure SolarReflectanceFront=null,NormalisedRatioMeasure SolarReflectanceBack=null,string EndOfLineComment=null):base(){AddNext();this._Material=_Material;this.VisibleTransmittance=VisibleTransmittance;this.SolarTransmittance=SolarTransmittance;this.ThermalIrTransmittance=ThermalIrTransmittance;this.ThermalIrEmissivityBack=ThermalIrEmissivityBack;this.ThermalIrEmissivityFront=ThermalIrEmissivityFront;this.VisibleReflectanceBack=VisibleReflectanceBack;this.VisibleReflectanceFront=VisibleReflectanceFront;this.SolarReflectanceFront=SolarReflectanceFront;this.SolarReflectanceBack=SolarReflectanceBack;this.EndOfLineComment=EndOfLineComment;}
public               OpticalMaterialProperties(EvaporatorType _Material,string EndOfLineComment=null):base(){AddNext();this._Material=_Material;this.EndOfLineComment=EndOfLineComment;}
[ifc(5,optional=true)] public NormalisedRatioMeasure ThermalIrEmissivityBack; //TYPE
[ifc(6,optional=true)] public NormalisedRatioMeasure ThermalIrEmissivityFront; //TYPE
[ifc(7,optional=true)] public NormalisedRatioMeasure VisibleReflectanceBack; //TYPE
[ifc(8,optional=true)] public NormalisedRatioMeasure VisibleReflectanceFront; //TYPE
[ifc(9,optional=true)] public NormalisedRatioMeasure SolarReflectanceFront; //TYPE
[ifc(10,optional=true)] public NormalisedRatioMeasure SolarReflectanceBack; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcorderaction.htm
[ifcSql(TypeGroupId:5,TypeId:1598,TableId:3)] public partial class OrderAction:Task{//================================================================================
public               OrderAction():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="TaskId"><para>cast to (ifc.FontWeight)...</para></param>
/// <param name="Status">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="WorkMethod">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="IsMilestone"><para>BOOLEAN</para></param>
/// <param name="Priority">[optional]<para>INTEGER</para></param>
/// <param name="ActionID"><para>cast to (ifc.FontWeight)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               OrderAction(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name,SectionalAreaIntegralMeasure Description,InductanceMeasure ObjectType,FontWeight TaskId,InductanceMeasure Status,InductanceMeasure WorkMethod,BOOLEAN IsMilestone,INTEGER Priority,FontWeight ActionID,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.TaskId=TaskId;this.Status=Status;this.WorkMethod=WorkMethod;this.IsMilestone=IsMilestone;this.Priority=Priority;this.ActionID=ActionID;this.EndOfLineComment=EndOfLineComment;}
public               OrderAction(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,FontWeight TaskId,BOOLEAN IsMilestone,FontWeight ActionID,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.TaskId=TaskId;this.IsMilestone=IsMilestone;this.ActionID=ActionID;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcpredefineddimensionsymbol.htm
[ifcSql(TypeGroupId:5,TypeId:1599,TableId:3)] public partial class PreDefinedDimensionSymbol:PreDefinedSymbol{//======================================================
public               PreDefinedDimensionSymbol():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name"><para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PreDefinedDimensionSymbol(InductanceMeasure Name,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcpredefinedpointmarkersymbol.htm
[ifcSql(TypeGroupId:5,TypeId:1600,TableId:3)] public partial class PreDefinedPointMarkerSymbol:PreDefinedSymbol{//====================================================
public               PreDefinedPointMarkerSymbol():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name"><para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PreDefinedPointMarkerSymbol(InductanceMeasure Name,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.PreDefinedDimensionSymbol(...)</para><para>new ifc.PreDefinedPointMarkerSymbol(...)</para><para>new ifc.PreDefinedTerminatorSymbol(...)</para></summary>
[ifcSql(TypeGroupId:5,TypeId:1601,TableId:3)] public partial class PreDefinedSymbol:PreDefinedItem{//=================================================================
public               PreDefinedSymbol():base(){}// abstract
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcpredefinedterminatorsymbol.htm
[ifcSql(TypeGroupId:5,TypeId:1602,TableId:3)] public partial class PreDefinedTerminatorSymbol:PreDefinedSymbol{//=====================================================
public               PreDefinedTerminatorSymbol():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name"><para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PreDefinedTerminatorSymbol(InductanceMeasure Name,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcproductsofcombustionproperties.htm
[ifcSql(TypeGroupId:5,TypeId:1603,TableId:3)] public partial class ProductsOfCombustionProperties:MaterialProperties{//===============================================
public               ProductsOfCombustionProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="_Material"><para>new ifc.EvaporatorType(...)</para></param>
/// <param name="SpecificHeatCapacity">[optional]<para>cast to (ifc.RotationalFrequencyMeasure)...</para></param>
/// <param name="N20Content">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="COContent">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="CO2Content">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ProductsOfCombustionProperties(EvaporatorType _Material,RotationalFrequencyMeasure SpecificHeatCapacity=null,NormalisedRatioMeasure N20Content=null,NormalisedRatioMeasure COContent=null,NormalisedRatioMeasure CO2Content=null,string EndOfLineComment=null):base(){AddNext();this._Material=_Material;this.SpecificHeatCapacity=SpecificHeatCapacity;this.N20Content=N20Content;this.COContent=COContent;this.CO2Content=CO2Content;this.EndOfLineComment=EndOfLineComment;}
public               ProductsOfCombustionProperties(EvaporatorType _Material,string EndOfLineComment=null):base(){AddNext();this._Material=_Material;this.EndOfLineComment=EndOfLineComment;}
[ifc(5,optional=true)] public NormalisedRatioMeasure CO2Content; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcprojectorderrecord.htm
[ifcSql(TypeGroupId:5,TypeId:1604,TableId:3)] public partial class ProjectOrderRecord:Control{//======================================================================
public               ProjectOrderRecord():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Records"><para>List1toUnboundedUnique_RelAssignsToProjectOrder</para></param>
/// <param name="PredefinedType"><para>ProjectOrderRecordTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ProjectOrderRecord(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name,SectionalAreaIntegralMeasure Description,InductanceMeasure ObjectType,List1toUnboundedUnique_RelAssignsToProjectOrder Records,ProjectOrderRecordTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.Records=Records;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
public               ProjectOrderRecord(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,List1toUnboundedUnique_RelAssignsToProjectOrder Records,ProjectOrderRecordTypeEnum PredefinedType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Records=Records;this.PredefinedType=PredefinedType;this.EndOfLineComment=EndOfLineComment;}
[ifc(7)] public ProjectOrderRecordTypeEnum PredefinedType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcprojectioncurve.htm
[ifcSql(TypeGroupId:5,TypeId:1605,TableId:3)] public partial class ProjectionCurve:AnnotationCurveOccurrence{//=======================================================
public               ProjectionCurve():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Item">[optional]<para>new ifc.Axis1Placement(...)</para><para>new ifc.Axis2Placement2D(...)</para><para>new ifc.Axis2Placement3D(...)</para></param>
/// <param name="Styles"><para>List1toUnbounded_PresentationStyleAssignment</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ProjectionCurve(Placement Item,List1toUnbounded_PresentationStyleAssignment Styles,InductanceMeasure Name=null,string EndOfLineComment=null):base(){AddNext();this.Item=Item;this.Styles=Styles;this.Name=Name;this.EndOfLineComment=EndOfLineComment;}
public               ProjectionCurve(List1toUnbounded_PresentationStyleAssignment Styles,string EndOfLineComment=null):base(){AddNext();this.Styles=Styles;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcpropertyconstraintrelationship.htm
[ifcSql(TypeGroupId:5,TypeId:1606,TableId:3)] public partial class PropertyConstraintRelationship:ENTITY{//===========================================================
public               PropertyConstraintRelationship():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="RelatingConstraint"><para>new ifc.Block(...)</para></param>
/// <param name="RelatedProperties"><para>Set1toUnbounded_Property</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               PropertyConstraintRelationship(Block RelatingConstraint,Set1toUnbounded_Property RelatedProperties,InductanceMeasure Name=null,SectionalAreaIntegralMeasure Description=null,string EndOfLineComment=null):base(){AddNext();this.RelatingConstraint=RelatingConstraint;this.RelatedProperties=RelatedProperties;this.Name=Name;this.Description=Description;this.EndOfLineComment=EndOfLineComment;}
public               PropertyConstraintRelationship(Block RelatingConstraint,Set1toUnbounded_Property RelatedProperties,string EndOfLineComment=null):base(){AddNext();this.RelatingConstraint=RelatingConstraint;this.RelatedProperties=RelatedProperties;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public Block RelatingConstraint; //ENTITY
[ifc(2)] public Set1toUnbounded_Property RelatedProperties; //ListType1d
[ifc(3,optional=true)] public InductanceMeasure Name; //TYPE
[ifc(4,optional=true)] public SectionalAreaIntegralMeasure Description; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcradiusdimension.htm
[ifcSql(TypeGroupId:5,TypeId:1607,TableId:3)] public partial class RadiusDimension:DimensionCurveDirectedCallout{//===================================================
public               RadiusDimension():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Contents"><para>List1toUnbounded_DraughtingCalloutElement</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RadiusDimension(List1toUnbounded_DraughtingCalloutElement Contents,string EndOfLineComment=null):base(){AddNext();this.Contents=Contents;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcrationalbeziercurve.htm
[ifcSql(TypeGroupId:5,TypeId:1608,TableId:3)] public partial class RationalBezierCurve:BezierCurve{//=================================================================
public               RationalBezierCurve():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Degree"><para>INTEGER</para></param>
/// <param name="ControlPointsList"><para>List2toUnbounded_CartesianPoint</para></param>
/// <param name="CurveForm"><para>ActionRequestTypeEnum</para></param>
/// <param name="ClosedCurve"><para>LOGICAL</para></param>
/// <param name="SelfIntersect"><para>LOGICAL</para></param>
/// <param name="WeightsData"><para>List2toUnbounded_REAL</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RationalBezierCurve(INTEGER Degree,List2toUnbounded_CartesianPoint ControlPointsList,ActionRequestTypeEnum CurveForm,LOGICAL ClosedCurve,LOGICAL SelfIntersect,List2toUnbounded_REAL WeightsData,string EndOfLineComment=null):base(){AddNext();this.Degree=Degree;this.ControlPointsList=ControlPointsList;this.CurveForm=CurveForm;this.ClosedCurve=ClosedCurve;this.SelfIntersect=SelfIntersect;this.WeightsData=WeightsData;this.EndOfLineComment=EndOfLineComment;}
[ifc(6)] public List2toUnbounded_REAL WeightsData; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcreferencesvaluedocument.htm
[ifcSql(TypeGroupId:5,TypeId:1609,TableId:3)] public partial class ReferencesValueDocument:ENTITY{//==================================================================
public               ReferencesValueDocument():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ReferencedDocument"><para>new ifc.SlabType(...)</para></param>
/// <param name="ReferencingValues"><para>List1toUnbounded_AppliedValue</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ReferencesValueDocument(SlabType ReferencedDocument,List1toUnbounded_AppliedValue ReferencingValues,InductanceMeasure Name=null,SectionalAreaIntegralMeasure Description=null,string EndOfLineComment=null):base(){AddNext();this.ReferencedDocument=ReferencedDocument;this.ReferencingValues=ReferencingValues;this.Name=Name;this.Description=Description;this.EndOfLineComment=EndOfLineComment;}
public               ReferencesValueDocument(SlabType ReferencedDocument,List1toUnbounded_AppliedValue ReferencingValues,string EndOfLineComment=null):base(){AddNext();this.ReferencedDocument=ReferencedDocument;this.ReferencingValues=ReferencingValues;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public SlabType ReferencedDocument; //ENTITY
[ifc(2)] public List1toUnbounded_AppliedValue ReferencingValues; //ListType1d
[ifc(3,optional=true)] public InductanceMeasure Name; //TYPE
[ifc(4,optional=true)] public SectionalAreaIntegralMeasure Description; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcrelassignstasks.htm
[ifcSql(TypeGroupId:5,TypeId:1610,TableId:3)] public partial class RelAssignsTasks:RelAssignsToControl{//=============================================================
public               RelAssignsTasks():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="RelatedObjects"><para>Set1toUnbounded_ObjectDefinition</para></param>
/// <param name="RelatedObjectsType">[optional]<para>ElementCompositionEnum</para></param>
/// <param name="RelatingControl"><para>new ifc.BoundaryNodeCondition(...)</para><para>new ifc.BoundaryNodeConditionWarping(...)</para></param>
/// <param name="TimeForTask">[optional]<para>new ifc.ScheduleTimeControl(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelAssignsTasks(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name,SectionalAreaIntegralMeasure Description,Set1toUnbounded_ObjectDefinition RelatedObjects,ElementCompositionEnum? RelatedObjectsType,BoundaryNodeCondition RelatingControl,ScheduleTimeControl TimeForTask=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatedObjects=RelatedObjects;this.RelatedObjectsType=RelatedObjectsType;this.RelatingControl=RelatingControl;this.TimeForTask=TimeForTask;this.EndOfLineComment=EndOfLineComment;}
public               RelAssignsTasks(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,Set1toUnbounded_ObjectDefinition RelatedObjects,BoundaryNodeCondition RelatingControl,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.RelatedObjects=RelatedObjects;this.RelatingControl=RelatingControl;this.EndOfLineComment=EndOfLineComment;}
[ifc(8,optional=true)] public ScheduleTimeControl TimeForTask; //ENTITY
public override void AssignInverseElements(){if (TimeForTask!=null) TimeForTask.ScheduleTimeControlAssigned=this;
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcrelassignstoprojectorder.htm
[ifcSql(TypeGroupId:5,TypeId:1611,TableId:3)] public partial class RelAssignsToProjectOrder:RelAssignsToControl{//====================================================
public               RelAssignsToProjectOrder():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="RelatedObjects"><para>Set1toUnbounded_ObjectDefinition</para></param>
/// <param name="RelatedObjectsType">[optional]<para>ElementCompositionEnum</para></param>
/// <param name="RelatingControl"><para>new ifc.BoundaryNodeCondition(...)</para><para>new ifc.BoundaryNodeConditionWarping(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelAssignsToProjectOrder(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name,SectionalAreaIntegralMeasure Description,Set1toUnbounded_ObjectDefinition RelatedObjects,ElementCompositionEnum? RelatedObjectsType,BoundaryNodeCondition RelatingControl,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatedObjects=RelatedObjects;this.RelatedObjectsType=RelatedObjectsType;this.RelatingControl=RelatingControl;this.EndOfLineComment=EndOfLineComment;}
public               RelAssignsToProjectOrder(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,Set1toUnbounded_ObjectDefinition RelatedObjects,BoundaryNodeCondition RelatingControl,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.RelatedObjects=RelatedObjects;this.RelatingControl=RelatingControl;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcrelassociatesappliedvalue.htm
[ifcSql(TypeGroupId:5,TypeId:1612,TableId:3)] public partial class RelAssociatesAppliedValue:RelAssociates{//=========================================================
public               RelAssociatesAppliedValue():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="RelatedObjects"><para>List1toUnbounded_ObjectDefinition</para></param>
/// <param name="RelatingAppliedValue"><para>StructuralSurfaceMemberTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelAssociatesAppliedValue(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name,SectionalAreaIntegralMeasure Description,List1toUnbounded_ObjectDefinition RelatedObjects,StructuralSurfaceMemberTypeEnum RelatingAppliedValue,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatedObjects=RelatedObjects;this.RelatingAppliedValue=RelatingAppliedValue;this.EndOfLineComment=EndOfLineComment;}
public               RelAssociatesAppliedValue(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,List1toUnbounded_ObjectDefinition RelatedObjects,StructuralSurfaceMemberTypeEnum RelatingAppliedValue,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.RelatedObjects=RelatedObjects;this.RelatingAppliedValue=RelatingAppliedValue;this.EndOfLineComment=EndOfLineComment;}
[ifc(6)] public StructuralSurfaceMemberTypeEnum RelatingAppliedValue; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcrelassociatesprofileproperties.htm
[ifcSql(TypeGroupId:5,TypeId:1613,TableId:3)] public partial class RelAssociatesProfileProperties:RelAssociates{//====================================================
public               RelAssociatesProfileProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="RelatedObjects"><para>List1toUnbounded_ObjectDefinition</para></param>
/// <param name="RelatingProfileProperties"><para>new ifc.InterceptorType(...)</para></param>
/// <param name="ProfileSectionLocation">[optional]<para>new ifc.DoorLiningProperties(...)</para><para>new ifc.DoorPanelProperties(...)</para><para>new ifc.PermeableCoveringProperties(...)</para><para>new ifc.ReinforcementDefinitionProperties(...)</para><para>new ifc.WindowLiningProperties(...)</para><para>new ifc.WindowPanelProperties(...)</para></param>
/// <param name="ProfileOrientation">[optional]<para>new ifc.OrientationSelect(new PlaneAngleMeasure(...))...</para><para>new ifc.OrientationSelect(new Direction(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelAssociatesProfileProperties(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name,SectionalAreaIntegralMeasure Description,List1toUnbounded_ObjectDefinition RelatedObjects,InterceptorType RelatingProfileProperties,PreDefinedPropertySet ProfileSectionLocation=null,OrientationSelect ProfileOrientation=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatedObjects=RelatedObjects;this.RelatingProfileProperties=RelatingProfileProperties;this.ProfileSectionLocation=ProfileSectionLocation;this.ProfileOrientation=ProfileOrientation;this.EndOfLineComment=EndOfLineComment;}
public               RelAssociatesProfileProperties(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,List1toUnbounded_ObjectDefinition RelatedObjects,InterceptorType RelatingProfileProperties,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.RelatedObjects=RelatedObjects;this.RelatingProfileProperties=RelatingProfileProperties;this.EndOfLineComment=EndOfLineComment;}
[ifc(6)] public InterceptorType RelatingProfileProperties; //ENTITY
[ifc(7,optional=true)] public PreDefinedPropertySet ProfileSectionLocation; //ENTITY
[ifc(8,optional=true)] public OrientationSelect ProfileOrientation; //SELECT
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcrelconnectsstructuralelement.htm
[ifcSql(TypeGroupId:5,TypeId:1614,TableId:3)] public partial class RelConnectsStructuralElement:RelConnects{//========================================================
public               RelConnectsStructuralElement():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="RelatingElement"><para>new ifc.ConstructionEquipmentResourceType(...)</para></param>
/// <param name="RelatedStructuralMember"><para>new ifc.QuantityLength(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelConnectsStructuralElement(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name,SectionalAreaIntegralMeasure Description,ConstructionEquipmentResourceType RelatingElement,QuantityLength RelatedStructuralMember,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatingElement=RelatingElement;this.RelatedStructuralMember=RelatedStructuralMember;this.EndOfLineComment=EndOfLineComment;}
public               RelConnectsStructuralElement(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,ConstructionEquipmentResourceType RelatingElement,QuantityLength RelatedStructuralMember,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.RelatingElement=RelatingElement;this.RelatedStructuralMember=RelatedStructuralMember;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public ConstructionEquipmentResourceType RelatingElement; //ENTITY
[ifc(6)] public QuantityLength RelatedStructuralMember; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcrelinteractionrequirements.htm
[ifcSql(TypeGroupId:5,TypeId:1615,TableId:3)] public partial class RelInteractionRequirements:RelConnects{//==========================================================
public               RelInteractionRequirements():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="DailyInteraction">[optional]<para>cast to (ifc.CardinalPointReference)...</para></param>
/// <param name="ImportanceRating">[optional]<para>cast to (ifc.ModulusOfRotationalSubgradeReactionMeasure)...</para></param>
/// <param name="LocationOfInteraction">[optional]<para>new ifc.ProjectOrder(...)</para></param>
/// <param name="RelatedSpaceProgram"><para>new ifc.SpaceProgram(...)</para></param>
/// <param name="RelatingSpaceProgram"><para>new ifc.SpaceProgram(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelInteractionRequirements(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name,SectionalAreaIntegralMeasure Description,CardinalPointReference DailyInteraction,ModulusOfRotationalSubgradeReactionMeasure ImportanceRating,ProjectOrder LocationOfInteraction,SpaceProgram RelatedSpaceProgram,SpaceProgram RelatingSpaceProgram,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.DailyInteraction=DailyInteraction;this.ImportanceRating=ImportanceRating;this.LocationOfInteraction=LocationOfInteraction;this.RelatedSpaceProgram=RelatedSpaceProgram;this.RelatingSpaceProgram=RelatingSpaceProgram;this.EndOfLineComment=EndOfLineComment;}
public               RelInteractionRequirements(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,SpaceProgram RelatedSpaceProgram,SpaceProgram RelatingSpaceProgram,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.RelatedSpaceProgram=RelatedSpaceProgram;this.RelatingSpaceProgram=RelatingSpaceProgram;this.EndOfLineComment=EndOfLineComment;}
[ifc(5,optional=true)] public CardinalPointReference DailyInteraction; //TYPE
[ifc(6,optional=true)] public ModulusOfRotationalSubgradeReactionMeasure ImportanceRating; //TYPE
[ifc(7,optional=true)] public ProjectOrder LocationOfInteraction; //ENTITY
[ifc(8)] public SpaceProgram RelatedSpaceProgram; //ENTITY
[ifc(9)] public SpaceProgram RelatingSpaceProgram; //ENTITY
public override void AssignInverseElements(){if (RelatedSpaceProgram!=null) {if (RelatedSpaceProgram.HasInteractionReqsFrom==null) RelatedSpaceProgram.HasInteractionReqsFrom=new LIST<RelInteractionRequirements>();RelatedSpaceProgram.HasInteractionReqsFrom.Add(this);}
                                             if (RelatingSpaceProgram!=null) {if (RelatingSpaceProgram.HasInteractionReqsTo==null) RelatingSpaceProgram.HasInteractionReqsTo=new LIST<RelInteractionRequirements>();RelatingSpaceProgram.HasInteractionReqsTo.Add(this);}
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcreloccupiesspaces.htm
[ifcSql(TypeGroupId:5,TypeId:1616,TableId:3)] public partial class RelOccupiesSpaces:RelAssignsToActor{//=============================================================
public               RelOccupiesSpaces():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="RelatedObjects"><para>Set1toUnbounded_ObjectDefinition</para></param>
/// <param name="RelatedObjectsType">[optional]<para>ElementCompositionEnum</para></param>
/// <param name="RelatingActor"><para>SIUnitName</para></param>
/// <param name="ActingRole">[optional]<para>SanitaryTerminalTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelOccupiesSpaces(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name,SectionalAreaIntegralMeasure Description,Set1toUnbounded_ObjectDefinition RelatedObjects,ElementCompositionEnum? RelatedObjectsType,SIUnitName RelatingActor,SanitaryTerminalTypeEnum? ActingRole=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatedObjects=RelatedObjects;this.RelatedObjectsType=RelatedObjectsType;this.RelatingActor=RelatingActor;this.ActingRole=ActingRole;this.EndOfLineComment=EndOfLineComment;}
public               RelOccupiesSpaces(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,Set1toUnbounded_ObjectDefinition RelatedObjects,SIUnitName RelatingActor,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.RelatedObjects=RelatedObjects;this.RelatingActor=RelatingActor;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcreloverridesproperties.htm
[ifcSql(TypeGroupId:5,TypeId:1617,TableId:3)] public partial class RelOverridesProperties:RelDefinesByProperties{//===================================================
public               RelOverridesProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="RelatedObjects"><para>Set1toUnbounded_Object</para></param>
/// <param name="RelatingPropertyDefinition"><para>new ifc.LightFixtureType(...)</para></param>
/// <param name="OverridingProperties"><para>Set1toUnbounded_Property</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelOverridesProperties(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name,SectionalAreaIntegralMeasure Description,Set1toUnbounded_Object RelatedObjects,LightFixtureType RelatingPropertyDefinition,Set1toUnbounded_Property OverridingProperties,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatedObjects=RelatedObjects;this.RelatingPropertyDefinition=RelatingPropertyDefinition;this.OverridingProperties=OverridingProperties;this.EndOfLineComment=EndOfLineComment;}
public               RelOverridesProperties(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,Set1toUnbounded_Object RelatedObjects,LightFixtureType RelatingPropertyDefinition,Set1toUnbounded_Property OverridingProperties,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.RelatedObjects=RelatedObjects;this.RelatingPropertyDefinition=RelatingPropertyDefinition;this.OverridingProperties=OverridingProperties;this.EndOfLineComment=EndOfLineComment;}
[ifc(7)] public Set1toUnbounded_Property OverridingProperties; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcrelschedulescostitems.htm
[ifcSql(TypeGroupId:5,TypeId:1618,TableId:3)] public partial class RelSchedulesCostItems:RelAssignsToControl{//=======================================================
public               RelSchedulesCostItems():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="RelatedObjects"><para>Set1toUnbounded_ObjectDefinition</para></param>
/// <param name="RelatedObjectsType">[optional]<para>ElementCompositionEnum</para></param>
/// <param name="RelatingControl"><para>new ifc.BoundaryNodeCondition(...)</para><para>new ifc.BoundaryNodeConditionWarping(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RelSchedulesCostItems(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name,SectionalAreaIntegralMeasure Description,Set1toUnbounded_ObjectDefinition RelatedObjects,ElementCompositionEnum? RelatedObjectsType,BoundaryNodeCondition RelatingControl,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.RelatedObjects=RelatedObjects;this.RelatedObjectsType=RelatedObjectsType;this.RelatingControl=RelatingControl;this.EndOfLineComment=EndOfLineComment;}
public               RelSchedulesCostItems(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,Set1toUnbounded_ObjectDefinition RelatedObjects,BoundaryNodeCondition RelatingControl,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.RelatedObjects=RelatedObjects;this.RelatingControl=RelatingControl;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcrelaxation.htm
[ifcSql(TypeGroupId:5,TypeId:1619,TableId:3)] public partial class Relaxation:ENTITY{//===============================================================================
public               Relaxation():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="RelaxationValue"><para>cast to (ifc.ModulusOfRotationalSubgradeReactionMeasure)...</para></param>
/// <param name="InitialStress"><para>cast to (ifc.ModulusOfRotationalSubgradeReactionMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               Relaxation(ModulusOfRotationalSubgradeReactionMeasure RelaxationValue,ModulusOfRotationalSubgradeReactionMeasure InitialStress,string EndOfLineComment=null):base(){AddNext();this.RelaxationValue=RelaxationValue;this.InitialStress=InitialStress;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public ModulusOfRotationalSubgradeReactionMeasure RelaxationValue; //TYPE
[ifc(2)] public ModulusOfRotationalSubgradeReactionMeasure InitialStress; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcribplateprofileproperties.htm
[ifcSql(TypeGroupId:5,TypeId:1620,TableId:3)] public partial class RibPlateProfileProperties:ProfileProperties{//=====================================================
public               RibPlateProfileProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ProfileName">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="ProfileDefinition">[optional]<para>new ifc.Interceptor(...)</para></param>
/// <param name="Thickness">[optional]<para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="RibHeight">[optional]<para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="RibWidth">[optional]<para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="RibSpacing">[optional]<para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="_Direction"><para>RibPlateDirectionEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RibPlateProfileProperties(InductanceMeasure ProfileName,Interceptor ProfileDefinition,MonthInYearNumber Thickness,MonthInYearNumber RibHeight,MonthInYearNumber RibWidth,MonthInYearNumber RibSpacing,RibPlateDirectionEnum _Direction,string EndOfLineComment=null):base(){AddNext();this.ProfileName=ProfileName;this.ProfileDefinition=ProfileDefinition;this.Thickness=Thickness;this.RibHeight=RibHeight;this.RibWidth=RibWidth;this.RibSpacing=RibSpacing;this._Direction=_Direction;this.EndOfLineComment=EndOfLineComment;}
public               RibPlateProfileProperties(RibPlateDirectionEnum _Direction,string EndOfLineComment=null):base(){AddNext();this._Direction=_Direction;this.EndOfLineComment=EndOfLineComment;}
[ifc(5,optional=true)] public MonthInYearNumber RibWidth; //TYPE
[ifc(6,optional=true)] public MonthInYearNumber RibSpacing; //TYPE
[ifc(7)] public RibPlateDirectionEnum _Direction; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcroundededgefeature.htm
[ifcSql(TypeGroupId:5,TypeId:1621,TableId:3)] public partial class RoundedEdgeFeature:EdgeFeature{//==================================================================
public               RoundedEdgeFeature():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.Fan(...)</para></param>
/// <param name="_Representation">[optional]</param>
/// <param name="Tag">[optional]<para>cast to (ifc.FontWeight)...</para></param>
/// <param name="FeatureLength">[optional]<para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="Radius">[optional]<para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               RoundedEdgeFeature(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name=null,SectionalAreaIntegralMeasure Description=null,InductanceMeasure ObjectType=null,Fan _ObjectPlacement=null,IndexedTextureMap _Representation=null,FontWeight Tag=null,MonthInYearNumber FeatureLength=null,MonthInYearNumber Radius=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.Tag=Tag;this.FeatureLength=FeatureLength;this.Radius=Radius;this.EndOfLineComment=EndOfLineComment;}
public               RoundedEdgeFeature(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.EndOfLineComment=EndOfLineComment;}
[ifc(10,optional=true)] public MonthInYearNumber Radius; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcscheduletimecontrol.htm
[ifcSql(TypeGroupId:5,TypeId:1622,TableId:3)] public partial class ScheduleTimeControl:Control{//=====================================================================
public               ScheduleTimeControl():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="ActualStart">[optional]<para>new ifc.DateTimeSelect(new CalendarDate(...))...</para><para>new ifc.DateTimeSelect(new DateAndTime(...))...</para><para>new ifc.DateTimeSelect(new LocalTime(...))...</para></param>
/// <param name="EarlyStart">[optional]<para>new ifc.DateTimeSelect(new CalendarDate(...))...</para><para>new ifc.DateTimeSelect(new DateAndTime(...))...</para><para>new ifc.DateTimeSelect(new LocalTime(...))...</para></param>
/// <param name="LateStart">[optional]<para>new ifc.DateTimeSelect(new CalendarDate(...))...</para><para>new ifc.DateTimeSelect(new DateAndTime(...))...</para><para>new ifc.DateTimeSelect(new LocalTime(...))...</para></param>
/// <param name="ScheduleStart">[optional]<para>new ifc.DateTimeSelect(new CalendarDate(...))...</para><para>new ifc.DateTimeSelect(new DateAndTime(...))...</para><para>new ifc.DateTimeSelect(new LocalTime(...))...</para></param>
/// <param name="ActualFinish">[optional]<para>new ifc.DateTimeSelect(new CalendarDate(...))...</para><para>new ifc.DateTimeSelect(new DateAndTime(...))...</para><para>new ifc.DateTimeSelect(new LocalTime(...))...</para></param>
/// <param name="EarlyFinish">[optional]<para>new ifc.DateTimeSelect(new CalendarDate(...))...</para><para>new ifc.DateTimeSelect(new DateAndTime(...))...</para><para>new ifc.DateTimeSelect(new LocalTime(...))...</para></param>
/// <param name="LateFinish">[optional]<para>new ifc.DateTimeSelect(new CalendarDate(...))...</para><para>new ifc.DateTimeSelect(new DateAndTime(...))...</para><para>new ifc.DateTimeSelect(new LocalTime(...))...</para></param>
/// <param name="ScheduleFinish">[optional]<para>new ifc.DateTimeSelect(new CalendarDate(...))...</para><para>new ifc.DateTimeSelect(new DateAndTime(...))...</para><para>new ifc.DateTimeSelect(new LocalTime(...))...</para></param>
/// <param name="ScheduleDuration">[optional]<para>cast to (ifc.TemperatureRateOfChangeMeasure)...</para></param>
/// <param name="ActualDuration">[optional]<para>cast to (ifc.TemperatureRateOfChangeMeasure)...</para></param>
/// <param name="RemainingTime">[optional]<para>cast to (ifc.TemperatureRateOfChangeMeasure)...</para></param>
/// <param name="FreeFloat">[optional]<para>cast to (ifc.TemperatureRateOfChangeMeasure)...</para></param>
/// <param name="TotalFloat">[optional]<para>cast to (ifc.TemperatureRateOfChangeMeasure)...</para></param>
/// <param name="IsCritical">[optional]<para>BOOLEAN</para></param>
/// <param name="StatusTime">[optional]<para>new ifc.DateTimeSelect(new CalendarDate(...))...</para><para>new ifc.DateTimeSelect(new DateAndTime(...))...</para><para>new ifc.DateTimeSelect(new LocalTime(...))...</para></param>
/// <param name="StartFloat">[optional]<para>cast to (ifc.TemperatureRateOfChangeMeasure)...</para></param>
/// <param name="FinishFloat">[optional]<para>cast to (ifc.TemperatureRateOfChangeMeasure)...</para></param>
/// <param name="Completion">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ScheduleTimeControl(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name=null,SectionalAreaIntegralMeasure Description=null,InductanceMeasure ObjectType=null,DateTimeSelect ActualStart=null,DateTimeSelect EarlyStart=null,DateTimeSelect LateStart=null,DateTimeSelect ScheduleStart=null,DateTimeSelect ActualFinish=null,DateTimeSelect EarlyFinish=null,DateTimeSelect LateFinish=null,DateTimeSelect ScheduleFinish=null,TemperatureRateOfChangeMeasure ScheduleDuration=null,TemperatureRateOfChangeMeasure ActualDuration=null,TemperatureRateOfChangeMeasure RemainingTime=null,TemperatureRateOfChangeMeasure FreeFloat=null,TemperatureRateOfChangeMeasure TotalFloat=null,BOOLEAN IsCritical=null,DateTimeSelect StatusTime=null,TemperatureRateOfChangeMeasure StartFloat=null,TemperatureRateOfChangeMeasure FinishFloat=null,NormalisedRatioMeasure Completion=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.ActualStart=ActualStart;this.EarlyStart=EarlyStart;this.LateStart=LateStart;this.ScheduleStart=ScheduleStart;this.ActualFinish=ActualFinish;this.EarlyFinish=EarlyFinish;this.LateFinish=LateFinish;this.ScheduleFinish=ScheduleFinish;this.ScheduleDuration=ScheduleDuration;this.ActualDuration=ActualDuration;this.RemainingTime=RemainingTime;this.FreeFloat=FreeFloat;this.TotalFloat=TotalFloat;this.IsCritical=IsCritical;this.StatusTime=StatusTime;this.StartFloat=StartFloat;this.FinishFloat=FinishFloat;this.Completion=Completion;this.EndOfLineComment=EndOfLineComment;}
public               ScheduleTimeControl(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.EndOfLineComment=EndOfLineComment;}
[ifc(7,optional=true)] public DateTimeSelect EarlyStart; //SELECT
[ifc(8,optional=true)] public DateTimeSelect LateStart; //SELECT
[ifc(9,optional=true)] public DateTimeSelect ScheduleStart; //SELECT
[ifc(10,optional=true)] public DateTimeSelect ActualFinish; //SELECT
[ifc(11,optional=true)] public DateTimeSelect EarlyFinish; //SELECT
[ifc(12,optional=true)] public DateTimeSelect LateFinish; //SELECT
[ifc(13,optional=true)] public DateTimeSelect ScheduleFinish; //SELECT
[ifc(14,optional=true)] public TemperatureRateOfChangeMeasure ScheduleDuration; //TYPE
[ifc(15,optional=true)] public TemperatureRateOfChangeMeasure ActualDuration; //TYPE
[ifc(16,optional=true)] public TemperatureRateOfChangeMeasure RemainingTime; //TYPE
[ifc(17,optional=true)] public TemperatureRateOfChangeMeasure FreeFloat; //TYPE
[ifc(18,optional=true)] public TemperatureRateOfChangeMeasure TotalFloat; //TYPE
[ifc(19,optional=true)] public BOOLEAN IsCritical; //BASETYPE
[ifc(20,optional=true)] public DateTimeSelect StatusTime; //SELECT
[ifc(21,optional=true)] public TemperatureRateOfChangeMeasure StartFloat; //TYPE
[ifc(22,optional=true)] public TemperatureRateOfChangeMeasure FinishFloat; //TYPE
[ifc(23,optional=true)] public NormalisedRatioMeasure Completion; //TYPE
/// <summary>INVERSE: ScheduleTimeControlAssigned of RelAssignsTasks for TimeForTask</summary>
[ifcInverse(For:"TimeForTask")] public RelAssignsTasks ScheduleTimeControlAssigned;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcservicelife.htm
[ifcSql(TypeGroupId:5,TypeId:1623,TableId:3)] public partial class ServiceLife:Control{//=============================================================================
public               ServiceLife():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="ServiceLifeType"><para>ServiceLifeTypeEnum</para></param>
/// <param name="ServiceLifeDuration"><para>cast to (ifc.TemperatureRateOfChangeMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ServiceLife(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name,SectionalAreaIntegralMeasure Description,InductanceMeasure ObjectType,ServiceLifeTypeEnum ServiceLifeType,TemperatureRateOfChangeMeasure ServiceLifeDuration,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.ServiceLifeType=ServiceLifeType;this.ServiceLifeDuration=ServiceLifeDuration;this.EndOfLineComment=EndOfLineComment;}
public               ServiceLife(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,ServiceLifeTypeEnum ServiceLifeType,TemperatureRateOfChangeMeasure ServiceLifeDuration,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.ServiceLifeType=ServiceLifeType;this.ServiceLifeDuration=ServiceLifeDuration;this.EndOfLineComment=EndOfLineComment;}
[ifc(7)] public TemperatureRateOfChangeMeasure ServiceLifeDuration; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcservicelifefactor.htm
[ifcSql(TypeGroupId:5,TypeId:1624,TableId:3)] public partial class ServiceLifeFactor:PropertySetDefinition{//=========================================================
public               ServiceLifeFactor():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="PredefinedType"><para>ServiceLifeFactorTypeEnum</para></param>
/// <param name="UpperValue">[optional]</param>
/// <param name="MostUsedValue"></param>
/// <param name="LowerValue">[optional]</param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ServiceLifeFactor(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name,SectionalAreaIntegralMeasure Description,ServiceLifeFactorTypeEnum PredefinedType,SpatialElementType UpperValue,SpatialElementType MostUsedValue,SpatialElementType LowerValue=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.PredefinedType=PredefinedType;this.UpperValue=UpperValue;this.MostUsedValue=MostUsedValue;this.LowerValue=LowerValue;this.EndOfLineComment=EndOfLineComment;}
public               ServiceLifeFactor(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,ServiceLifeFactorTypeEnum PredefinedType,SpatialElementType MostUsedValue,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.PredefinedType=PredefinedType;this.MostUsedValue=MostUsedValue;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public ServiceLifeFactorTypeEnum PredefinedType; //ENUM
[ifc(6,optional=true)] public SpatialElementType UpperValue; //ENTITY
[ifc(7)] public SpatialElementType MostUsedValue; //ENTITY
[ifc(8,optional=true)] public SpatialElementType LowerValue; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcsoundproperties.htm
[ifcSql(TypeGroupId:5,TypeId:1625,TableId:3)] public partial class SoundProperties:PropertySetDefinition{//===========================================================
public               SoundProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="IsAttenuating"><para>cast to (ifc.AreaDensityMeasure)...</para></param>
/// <param name="SoundScale">[optional]<para>SoundScaleEnum</para></param>
/// <param name="SoundValues"><para>List1to8_SoundValue</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               SoundProperties(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name,SectionalAreaIntegralMeasure Description,AreaDensityMeasure IsAttenuating,SoundScaleEnum? SoundScale,List1to8_SoundValue SoundValues,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.IsAttenuating=IsAttenuating;this.SoundScale=SoundScale;this.SoundValues=SoundValues;this.EndOfLineComment=EndOfLineComment;}
public               SoundProperties(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,AreaDensityMeasure IsAttenuating,List1to8_SoundValue SoundValues,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.IsAttenuating=IsAttenuating;this.SoundValues=SoundValues;this.EndOfLineComment=EndOfLineComment;}
[ifc(5)] public AreaDensityMeasure IsAttenuating; //TYPE
[ifc(6,optional=true)] public SoundScaleEnum? SoundScale; //ENUM
[ifc(7)] public List1to8_SoundValue SoundValues; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcsoundvalue.htm
[ifcSql(TypeGroupId:5,TypeId:1626,TableId:3)] public partial class SoundValue:PropertySetDefinition{//================================================================
public               SoundValue():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="SoundLevelTimeSeries">[optional]<para>new ifc.RelDefinesByObject(...)</para><para>new ifc.RelDefinesByProperties(...)</para><para>new ifc.RelDefinesByTemplate(...)</para><para>new ifc.RelDefinesByType(...)</para></param>
/// <param name="Frequency"><para>cast to (ifc.ElectricResistanceMeasure)...</para></param>
/// <param name="SoundLevelSingleValue">[optional]<para>new ifc.SlabStandardCase(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               SoundValue(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name,SectionalAreaIntegralMeasure Description,RelDefines SoundLevelTimeSeries,ElectricResistanceMeasure Frequency,SlabStandardCase SoundLevelSingleValue=null,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.SoundLevelTimeSeries=SoundLevelTimeSeries;this.Frequency=Frequency;this.SoundLevelSingleValue=SoundLevelSingleValue;this.EndOfLineComment=EndOfLineComment;}
public               SoundValue(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,ElectricResistanceMeasure Frequency,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Frequency=Frequency;this.EndOfLineComment=EndOfLineComment;}
[ifc(5,optional=true)] public RelDefines SoundLevelTimeSeries; //ENTITY
[ifc(6)] public ElectricResistanceMeasure Frequency; //TYPE
[ifc(7,optional=true)] public SlabStandardCase SoundLevelSingleValue; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcspaceprogram.htm
[ifcSql(TypeGroupId:5,TypeId:1627,TableId:3)] public partial class SpaceProgram:Control{//============================================================================
public               SpaceProgram():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="SpaceProgramIdentifier"><para>cast to (ifc.FontWeight)...</para></param>
/// <param name="MaxRequiredArea">[optional]<para>ArcIndex</para></param>
/// <param name="MinRequiredArea">[optional]<para>ArcIndex</para></param>
/// <param name="RequestedLocation">[optional]<para>new ifc.ProjectOrder(...)</para></param>
/// <param name="StandardRequiredArea"><para>ArcIndex</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               SpaceProgram(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name,SectionalAreaIntegralMeasure Description,InductanceMeasure ObjectType,FontWeight SpaceProgramIdentifier,ArcIndex MaxRequiredArea,ArcIndex MinRequiredArea,ProjectOrder RequestedLocation,ArcIndex StandardRequiredArea,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.SpaceProgramIdentifier=SpaceProgramIdentifier;this.MaxRequiredArea=MaxRequiredArea;this.MinRequiredArea=MinRequiredArea;this.RequestedLocation=RequestedLocation;this.StandardRequiredArea=StandardRequiredArea;this.EndOfLineComment=EndOfLineComment;}
public               SpaceProgram(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,FontWeight SpaceProgramIdentifier,ArcIndex StandardRequiredArea,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.SpaceProgramIdentifier=SpaceProgramIdentifier;this.StandardRequiredArea=StandardRequiredArea;this.EndOfLineComment=EndOfLineComment;}
[ifc(7,optional=true)] public ArcIndex MaxRequiredArea; //ListType1d
[ifc(8,optional=true)] public ArcIndex MinRequiredArea; //ListType1d
[ifc(9,optional=true)] public ProjectOrder RequestedLocation; //ENTITY
[ifc(10)] public ArcIndex StandardRequiredArea; //ListType1d
/// <summary>INVERSE: HasInteractionReqsFrom of RelInteractionRequirements for RelatedSpaceProgram</summary>
[ifcInverse(For:"RelatedSpaceProgram")] public LIST<RelInteractionRequirements> HasInteractionReqsFrom;
/// <summary>INVERSE: HasInteractionReqsTo of RelInteractionRequirements for RelatingSpaceProgram</summary>
[ifcInverse(For:"RelatingSpaceProgram")] public LIST<RelInteractionRequirements> HasInteractionReqsTo;
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcspacethermalloadproperties.htm
[ifcSql(TypeGroupId:5,TypeId:1628,TableId:3)] public partial class SpaceThermalLoadProperties:PropertySetDefinition{//================================================
public               SpaceThermalLoadProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="ApplicableValueRatio">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="ThermalLoadSource"><para>ThermalLoadSourceEnum</para></param>
/// <param name="PropertySource"><para>PropertySourceEnum</para></param>
/// <param name="SourceDescription">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="MaximumValue"><para>cast to (ifc.NumericMeasure)...</para></param>
/// <param name="MinimumValue">[optional]<para>cast to (ifc.NumericMeasure)...</para></param>
/// <param name="ThermalLoadTimeSeriesValues">[optional]<para>new ifc.RelDefinesByObject(...)</para><para>new ifc.RelDefinesByProperties(...)</para><para>new ifc.RelDefinesByTemplate(...)</para><para>new ifc.RelDefinesByType(...)</para></param>
/// <param name="UserDefinedThermalLoadSource">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="UserDefinedPropertySource">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="ThermalLoadType"><para>ThermalLoadTypeEnum</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               SpaceThermalLoadProperties(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name,SectionalAreaIntegralMeasure Description,NormalisedRatioMeasure ApplicableValueRatio,ThermalLoadSourceEnum ThermalLoadSource,PropertySourceEnum PropertySource,SectionalAreaIntegralMeasure SourceDescription,NumericMeasure MaximumValue,NumericMeasure MinimumValue,RelDefines ThermalLoadTimeSeriesValues,InductanceMeasure UserDefinedThermalLoadSource,InductanceMeasure UserDefinedPropertySource,ThermalLoadTypeEnum ThermalLoadType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ApplicableValueRatio=ApplicableValueRatio;this.ThermalLoadSource=ThermalLoadSource;this.PropertySource=PropertySource;this.SourceDescription=SourceDescription;this.MaximumValue=MaximumValue;this.MinimumValue=MinimumValue;this.ThermalLoadTimeSeriesValues=ThermalLoadTimeSeriesValues;this.UserDefinedThermalLoadSource=UserDefinedThermalLoadSource;this.UserDefinedPropertySource=UserDefinedPropertySource;this.ThermalLoadType=ThermalLoadType;this.EndOfLineComment=EndOfLineComment;}
public               SpaceThermalLoadProperties(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,ThermalLoadSourceEnum ThermalLoadSource,PropertySourceEnum PropertySource,NumericMeasure MaximumValue,ThermalLoadTypeEnum ThermalLoadType,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.ThermalLoadSource=ThermalLoadSource;this.PropertySource=PropertySource;this.MaximumValue=MaximumValue;this.ThermalLoadType=ThermalLoadType;this.EndOfLineComment=EndOfLineComment;}
[ifc(5,optional=true)] public NormalisedRatioMeasure ApplicableValueRatio; //TYPE
[ifc(6)] public ThermalLoadSourceEnum ThermalLoadSource; //ENUM
[ifc(7)] public PropertySourceEnum PropertySource; //ENUM
[ifc(8,optional=true)] public SectionalAreaIntegralMeasure SourceDescription; //TYPE
[ifc(9)] public NumericMeasure MaximumValue; //TYPE
[ifc(10,optional=true)] public NumericMeasure MinimumValue; //TYPE
[ifc(11,optional=true)] public RelDefines ThermalLoadTimeSeriesValues; //ENTITY
[ifc(12,optional=true)] public InductanceMeasure UserDefinedThermalLoadSource; //TYPE
[ifc(13,optional=true)] public InductanceMeasure UserDefinedPropertySource; //TYPE
[ifc(14)] public ThermalLoadTypeEnum ThermalLoadType; //ENUM
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcstructurallinearactionvarying.htm
[ifcSql(TypeGroupId:5,TypeId:1629,TableId:3)] public partial class StructuralLinearActionVarying:StructuralLinearAction{//============================================
public               StructuralLinearActionVarying():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.Fan(...)</para></param>
/// <param name="_Representation">[optional]</param>
/// <param name="AppliedLoad"><para>new ifc.PropertySetTemplate(...)</para><para>new ifc.ComplexPropertyTemplate(...)</para></param>
/// <param name="GlobalOrLocal"><para>DoorPanelOperationEnum</para></param>
/// <param name="DestabilizingLoad"><para>BOOLEAN</para></param>
/// <param name="CausedBy">[optional]<para>new ifc.Ramp(...)</para></param>
/// <param name="ProjectedOrTrue"><para>FurnitureTypeEnum</para></param>
/// <param name="VaryingAppliedLoadLocation"><para>new ifc.DoorLiningProperties(...)</para><para>new ifc.DoorPanelProperties(...)</para><para>new ifc.PermeableCoveringProperties(...)</para><para>new ifc.ReinforcementDefinitionProperties(...)</para><para>new ifc.WindowLiningProperties(...)</para><para>new ifc.WindowPanelProperties(...)</para></param>
/// <param name="SubsequentAppliedLoads"><para>List1toUnbounded_StructuralLoad</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StructuralLinearActionVarying(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name,SectionalAreaIntegralMeasure Description,InductanceMeasure ObjectType,Fan _ObjectPlacement,IndexedTextureMap _Representation,PropertyTemplateDefinition AppliedLoad,DoorPanelOperationEnum GlobalOrLocal,BOOLEAN DestabilizingLoad,Ramp CausedBy,FurnitureTypeEnum ProjectedOrTrue,PreDefinedPropertySet VaryingAppliedLoadLocation,List1toUnbounded_StructuralLoad SubsequentAppliedLoads,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.AppliedLoad=AppliedLoad;this.GlobalOrLocal=GlobalOrLocal;this.DestabilizingLoad=DestabilizingLoad;this.CausedBy=CausedBy;this.ProjectedOrTrue=ProjectedOrTrue;this.VaryingAppliedLoadLocation=VaryingAppliedLoadLocation;this.SubsequentAppliedLoads=SubsequentAppliedLoads;this.EndOfLineComment=EndOfLineComment;}
public               StructuralLinearActionVarying(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,PropertyTemplateDefinition AppliedLoad,DoorPanelOperationEnum GlobalOrLocal,BOOLEAN DestabilizingLoad,FurnitureTypeEnum ProjectedOrTrue,PreDefinedPropertySet VaryingAppliedLoadLocation,List1toUnbounded_StructuralLoad SubsequentAppliedLoads,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.AppliedLoad=AppliedLoad;this.GlobalOrLocal=GlobalOrLocal;this.DestabilizingLoad=DestabilizingLoad;this.ProjectedOrTrue=ProjectedOrTrue;this.VaryingAppliedLoadLocation=VaryingAppliedLoadLocation;this.SubsequentAppliedLoads=SubsequentAppliedLoads;this.EndOfLineComment=EndOfLineComment;}
[ifc(13)] public PreDefinedPropertySet VaryingAppliedLoadLocation; //ENTITY
[ifc(14)] public List1toUnbounded_StructuralLoad SubsequentAppliedLoads; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcstructuralplanaractionvarying.htm
[ifcSql(TypeGroupId:5,TypeId:1630,TableId:3)] public partial class StructuralPlanarActionVarying:StructuralPlanarAction{//============================================
public               StructuralPlanarActionVarying():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="_ObjectPlacement">[optional]<para>new ifc.Fan(...)</para></param>
/// <param name="_Representation">[optional]</param>
/// <param name="AppliedLoad"><para>new ifc.PropertySetTemplate(...)</para><para>new ifc.ComplexPropertyTemplate(...)</para></param>
/// <param name="GlobalOrLocal"><para>DoorPanelOperationEnum</para></param>
/// <param name="DestabilizingLoad"><para>BOOLEAN</para></param>
/// <param name="CausedBy">[optional]<para>new ifc.Ramp(...)</para></param>
/// <param name="ProjectedOrTrue"><para>FurnitureTypeEnum</para></param>
/// <param name="VaryingAppliedLoadLocation"><para>new ifc.DoorLiningProperties(...)</para><para>new ifc.DoorPanelProperties(...)</para><para>new ifc.PermeableCoveringProperties(...)</para><para>new ifc.ReinforcementDefinitionProperties(...)</para><para>new ifc.WindowLiningProperties(...)</para><para>new ifc.WindowPanelProperties(...)</para></param>
/// <param name="SubsequentAppliedLoads"><para>List1toUnbounded_StructuralLoad</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StructuralPlanarActionVarying(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name,SectionalAreaIntegralMeasure Description,InductanceMeasure ObjectType,Fan _ObjectPlacement,IndexedTextureMap _Representation,PropertyTemplateDefinition AppliedLoad,DoorPanelOperationEnum GlobalOrLocal,BOOLEAN DestabilizingLoad,Ramp CausedBy,FurnitureTypeEnum ProjectedOrTrue,PreDefinedPropertySet VaryingAppliedLoadLocation,List1toUnbounded_StructuralLoad SubsequentAppliedLoads,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this._ObjectPlacement=_ObjectPlacement;this._Representation=_Representation;this.AppliedLoad=AppliedLoad;this.GlobalOrLocal=GlobalOrLocal;this.DestabilizingLoad=DestabilizingLoad;this.CausedBy=CausedBy;this.ProjectedOrTrue=ProjectedOrTrue;this.VaryingAppliedLoadLocation=VaryingAppliedLoadLocation;this.SubsequentAppliedLoads=SubsequentAppliedLoads;this.EndOfLineComment=EndOfLineComment;}
public               StructuralPlanarActionVarying(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,PropertyTemplateDefinition AppliedLoad,DoorPanelOperationEnum GlobalOrLocal,BOOLEAN DestabilizingLoad,FurnitureTypeEnum ProjectedOrTrue,PreDefinedPropertySet VaryingAppliedLoadLocation,List1toUnbounded_StructuralLoad SubsequentAppliedLoads,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.AppliedLoad=AppliedLoad;this.GlobalOrLocal=GlobalOrLocal;this.DestabilizingLoad=DestabilizingLoad;this.ProjectedOrTrue=ProjectedOrTrue;this.VaryingAppliedLoadLocation=VaryingAppliedLoadLocation;this.SubsequentAppliedLoads=SubsequentAppliedLoads;this.EndOfLineComment=EndOfLineComment;}
[ifc(13)] public PreDefinedPropertySet VaryingAppliedLoadLocation; //ENTITY
[ifc(14)] public List1toUnbounded_StructuralLoad SubsequentAppliedLoads; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.StructuralSteelProfileProperties(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcstructuralprofileproperties.htm
[ifcSql(TypeGroupId:5,TypeId:1631,TableId:3)] public partial class StructuralProfileProperties:GeneralProfileProperties{//============================================
public               StructuralProfileProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ProfileName">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="ProfileDefinition">[optional]<para>new ifc.Interceptor(...)</para></param>
/// <param name="PhysicalWeight">[optional]<para>cast to (ifc.LuminousFluxMeasure)...</para></param>
/// <param name="Perimeter">[optional]<para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="MinimumPlateThickness">[optional]<para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="MaximumPlateThickness">[optional]<para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="CrossSectionArea">[optional]<para>ArcIndex</para></param>
/// <param name="TorsionalConstantX">[optional]<para>cast to (ifc.MassPerLengthMeasure)...</para></param>
/// <param name="MomentOfInertiaYZ">[optional]<para>cast to (ifc.MassPerLengthMeasure)...</para></param>
/// <param name="MomentOfInertiaY">[optional]<para>cast to (ifc.MassPerLengthMeasure)...</para></param>
/// <param name="MomentOfInertiaZ">[optional]<para>cast to (ifc.MassPerLengthMeasure)...</para></param>
/// <param name="WarpingConstant">[optional]<para>cast to (ifc.ThermalAdmittanceMeasure)...</para></param>
/// <param name="ShearCentreZ">[optional]<para>cast to (ifc.Integer)...</para></param>
/// <param name="ShearCentreY">[optional]<para>cast to (ifc.Integer)...</para></param>
/// <param name="ShearDeformationAreaZ">[optional]<para>ArcIndex</para></param>
/// <param name="ShearDeformationAreaY">[optional]<para>ArcIndex</para></param>
/// <param name="MaximumSectionModulusY">[optional]<para>cast to (ifc.PresentableText)...</para></param>
/// <param name="MinimumSectionModulusY">[optional]<para>cast to (ifc.PresentableText)...</para></param>
/// <param name="MaximumSectionModulusZ">[optional]<para>cast to (ifc.PresentableText)...</para></param>
/// <param name="MinimumSectionModulusZ">[optional]<para>cast to (ifc.PresentableText)...</para></param>
/// <param name="TorsionalSectionModulus">[optional]<para>cast to (ifc.PresentableText)...</para></param>
/// <param name="CentreOfGravityInX">[optional]<para>cast to (ifc.Integer)...</para></param>
/// <param name="CentreOfGravityInY">[optional]<para>cast to (ifc.Integer)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StructuralProfileProperties(InductanceMeasure ProfileName=null,Interceptor ProfileDefinition=null,LuminousFluxMeasure PhysicalWeight=null,MonthInYearNumber Perimeter=null,MonthInYearNumber MinimumPlateThickness=null,MonthInYearNumber MaximumPlateThickness=null,ArcIndex CrossSectionArea=null,MassPerLengthMeasure TorsionalConstantX=null,MassPerLengthMeasure MomentOfInertiaYZ=null,MassPerLengthMeasure MomentOfInertiaY=null,MassPerLengthMeasure MomentOfInertiaZ=null,ThermalAdmittanceMeasure WarpingConstant=null,Integer ShearCentreZ=null,Integer ShearCentreY=null,ArcIndex ShearDeformationAreaZ=null,ArcIndex ShearDeformationAreaY=null,PresentableText MaximumSectionModulusY=null,PresentableText MinimumSectionModulusY=null,PresentableText MaximumSectionModulusZ=null,PresentableText MinimumSectionModulusZ=null,PresentableText TorsionalSectionModulus=null,Integer CentreOfGravityInX=null,Integer CentreOfGravityInY=null,string EndOfLineComment=null):base(){AddNext();this.ProfileName=ProfileName;this.ProfileDefinition=ProfileDefinition;this.PhysicalWeight=PhysicalWeight;this.Perimeter=Perimeter;this.MinimumPlateThickness=MinimumPlateThickness;this.MaximumPlateThickness=MaximumPlateThickness;this.CrossSectionArea=CrossSectionArea;this.TorsionalConstantX=TorsionalConstantX;this.MomentOfInertiaYZ=MomentOfInertiaYZ;this.MomentOfInertiaY=MomentOfInertiaY;this.MomentOfInertiaZ=MomentOfInertiaZ;this.WarpingConstant=WarpingConstant;this.ShearCentreZ=ShearCentreZ;this.ShearCentreY=ShearCentreY;this.ShearDeformationAreaZ=ShearDeformationAreaZ;this.ShearDeformationAreaY=ShearDeformationAreaY;this.MaximumSectionModulusY=MaximumSectionModulusY;this.MinimumSectionModulusY=MinimumSectionModulusY;this.MaximumSectionModulusZ=MaximumSectionModulusZ;this.MinimumSectionModulusZ=MinimumSectionModulusZ;this.TorsionalSectionModulus=TorsionalSectionModulus;this.CentreOfGravityInX=CentreOfGravityInX;this.CentreOfGravityInY=CentreOfGravityInY;this.EndOfLineComment=EndOfLineComment;}
[ifc(8,optional=true)] public MassPerLengthMeasure TorsionalConstantX; //TYPE
[ifc(9,optional=true)] public MassPerLengthMeasure MomentOfInertiaYZ; //TYPE
[ifc(10,optional=true)] public MassPerLengthMeasure MomentOfInertiaY; //TYPE
[ifc(11,optional=true)] public MassPerLengthMeasure MomentOfInertiaZ; //TYPE
[ifc(12,optional=true)] public ThermalAdmittanceMeasure WarpingConstant; //TYPE
[ifc(13,optional=true)] public Integer ShearCentreZ; //TYPE
[ifc(14,optional=true)] public Integer ShearCentreY; //TYPE
[ifc(15,optional=true)] public ArcIndex ShearDeformationAreaZ; //ListType1d
[ifc(16,optional=true)] public ArcIndex ShearDeformationAreaY; //ListType1d
[ifc(17,optional=true)] public PresentableText MaximumSectionModulusY; //TYPE
[ifc(18,optional=true)] public PresentableText MinimumSectionModulusY; //TYPE
[ifc(19,optional=true)] public PresentableText MaximumSectionModulusZ; //TYPE
[ifc(20,optional=true)] public PresentableText MinimumSectionModulusZ; //TYPE
[ifc(21,optional=true)] public PresentableText TorsionalSectionModulus; //TYPE
[ifc(22,optional=true)] public Integer CentreOfGravityInX; //TYPE
[ifc(23,optional=true)] public Integer CentreOfGravityInY; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcstructuralsteelprofileproperties.htm
[ifcSql(TypeGroupId:5,TypeId:1632,TableId:3)] public partial class StructuralSteelProfileProperties:StructuralProfileProperties{//====================================
public               StructuralSteelProfileProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ProfileName">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="ProfileDefinition">[optional]<para>new ifc.Interceptor(...)</para></param>
/// <param name="PhysicalWeight">[optional]<para>cast to (ifc.LuminousFluxMeasure)...</para></param>
/// <param name="Perimeter">[optional]<para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="MinimumPlateThickness">[optional]<para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="MaximumPlateThickness">[optional]<para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="CrossSectionArea">[optional]<para>ArcIndex</para></param>
/// <param name="TorsionalConstantX">[optional]<para>cast to (ifc.MassPerLengthMeasure)...</para></param>
/// <param name="MomentOfInertiaYZ">[optional]<para>cast to (ifc.MassPerLengthMeasure)...</para></param>
/// <param name="MomentOfInertiaY">[optional]<para>cast to (ifc.MassPerLengthMeasure)...</para></param>
/// <param name="MomentOfInertiaZ">[optional]<para>cast to (ifc.MassPerLengthMeasure)...</para></param>
/// <param name="WarpingConstant">[optional]<para>cast to (ifc.ThermalAdmittanceMeasure)...</para></param>
/// <param name="ShearCentreZ">[optional]<para>cast to (ifc.Integer)...</para></param>
/// <param name="ShearCentreY">[optional]<para>cast to (ifc.Integer)...</para></param>
/// <param name="ShearDeformationAreaZ">[optional]<para>ArcIndex</para></param>
/// <param name="ShearDeformationAreaY">[optional]<para>ArcIndex</para></param>
/// <param name="MaximumSectionModulusY">[optional]<para>cast to (ifc.PresentableText)...</para></param>
/// <param name="MinimumSectionModulusY">[optional]<para>cast to (ifc.PresentableText)...</para></param>
/// <param name="MaximumSectionModulusZ">[optional]<para>cast to (ifc.PresentableText)...</para></param>
/// <param name="MinimumSectionModulusZ">[optional]<para>cast to (ifc.PresentableText)...</para></param>
/// <param name="TorsionalSectionModulus">[optional]<para>cast to (ifc.PresentableText)...</para></param>
/// <param name="CentreOfGravityInX">[optional]<para>cast to (ifc.Integer)...</para></param>
/// <param name="CentreOfGravityInY">[optional]<para>cast to (ifc.Integer)...</para></param>
/// <param name="ShearAreaZ">[optional]<para>ArcIndex</para></param>
/// <param name="ShearAreaY">[optional]<para>ArcIndex</para></param>
/// <param name="PlasticShapeFactorY">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="PlasticShapeFactorZ">[optional]<para>cast to (ifc.NormalisedRatioMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StructuralSteelProfileProperties(InductanceMeasure ProfileName=null,Interceptor ProfileDefinition=null,LuminousFluxMeasure PhysicalWeight=null,MonthInYearNumber Perimeter=null,MonthInYearNumber MinimumPlateThickness=null,MonthInYearNumber MaximumPlateThickness=null,ArcIndex CrossSectionArea=null,MassPerLengthMeasure TorsionalConstantX=null,MassPerLengthMeasure MomentOfInertiaYZ=null,MassPerLengthMeasure MomentOfInertiaY=null,MassPerLengthMeasure MomentOfInertiaZ=null,ThermalAdmittanceMeasure WarpingConstant=null,Integer ShearCentreZ=null,Integer ShearCentreY=null,ArcIndex ShearDeformationAreaZ=null,ArcIndex ShearDeformationAreaY=null,PresentableText MaximumSectionModulusY=null,PresentableText MinimumSectionModulusY=null,PresentableText MaximumSectionModulusZ=null,PresentableText MinimumSectionModulusZ=null,PresentableText TorsionalSectionModulus=null,Integer CentreOfGravityInX=null,Integer CentreOfGravityInY=null,ArcIndex ShearAreaZ=null,ArcIndex ShearAreaY=null,NormalisedRatioMeasure PlasticShapeFactorY=null,NormalisedRatioMeasure PlasticShapeFactorZ=null,string EndOfLineComment=null):base(){AddNext();this.ProfileName=ProfileName;this.ProfileDefinition=ProfileDefinition;this.PhysicalWeight=PhysicalWeight;this.Perimeter=Perimeter;this.MinimumPlateThickness=MinimumPlateThickness;this.MaximumPlateThickness=MaximumPlateThickness;this.CrossSectionArea=CrossSectionArea;this.TorsionalConstantX=TorsionalConstantX;this.MomentOfInertiaYZ=MomentOfInertiaYZ;this.MomentOfInertiaY=MomentOfInertiaY;this.MomentOfInertiaZ=MomentOfInertiaZ;this.WarpingConstant=WarpingConstant;this.ShearCentreZ=ShearCentreZ;this.ShearCentreY=ShearCentreY;this.ShearDeformationAreaZ=ShearDeformationAreaZ;this.ShearDeformationAreaY=ShearDeformationAreaY;this.MaximumSectionModulusY=MaximumSectionModulusY;this.MinimumSectionModulusY=MinimumSectionModulusY;this.MaximumSectionModulusZ=MaximumSectionModulusZ;this.MinimumSectionModulusZ=MinimumSectionModulusZ;this.TorsionalSectionModulus=TorsionalSectionModulus;this.CentreOfGravityInX=CentreOfGravityInX;this.CentreOfGravityInY=CentreOfGravityInY;this.ShearAreaZ=ShearAreaZ;this.ShearAreaY=ShearAreaY;this.PlasticShapeFactorY=PlasticShapeFactorY;this.PlasticShapeFactorZ=PlasticShapeFactorZ;this.EndOfLineComment=EndOfLineComment;}
[ifc(24,optional=true)] public ArcIndex ShearAreaZ; //ListType1d
[ifc(25,optional=true)] public ArcIndex ShearAreaY; //ListType1d
[ifc(26,optional=true)] public NormalisedRatioMeasure PlasticShapeFactorY; //TYPE
[ifc(27,optional=true)] public NormalisedRatioMeasure PlasticShapeFactorZ; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcstructureddimensioncallout.htm
[ifcSql(TypeGroupId:5,TypeId:1633,TableId:3)] public partial class StructuredDimensionCallout:DraughtingCallout{//====================================================
public               StructuredDimensionCallout():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Contents"><para>List1toUnbounded_DraughtingCalloutElement</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               StructuredDimensionCallout(List1toUnbounded_DraughtingCalloutElement Contents,string EndOfLineComment=null):base(){AddNext();this.Contents=Contents;this.EndOfLineComment=EndOfLineComment;}
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcsymbolstyle.htm
[ifcSql(TypeGroupId:5,TypeId:1634,TableId:3)] public partial class SymbolStyle:PresentationStyle{//===================================================================
public               SymbolStyle():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="StyleOfSymbol"><para>new ifc.SymbolStyleSelect(new ColourSpecification(...))...</para><para>new ifc.SymbolStyleSelect(new PreDefinedColour(...))...</para><para>new ifc.SymbolStyleSelect(new Colour(...))...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               SymbolStyle(InductanceMeasure Name,SymbolStyleSelect StyleOfSymbol,string EndOfLineComment=null):base(){AddNext();this.Name=Name;this.StyleOfSymbol=StyleOfSymbol;this.EndOfLineComment=EndOfLineComment;}
public               SymbolStyle(SymbolStyleSelect StyleOfSymbol):base(){AddNext();this.StyleOfSymbol=StyleOfSymbol;}
[ifc(2)] public SymbolStyleSelect StyleOfSymbol; //SELECT
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para><para>new ifc.DimensionCurveTerminator(...)</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcterminatorsymbol.htm
[ifcSql(TypeGroupId:5,TypeId:1635,TableId:3)] public partial class TerminatorSymbol:AnnotationSymbolOccurrence{//=====================================================
public               TerminatorSymbol():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="Item">[optional]<para>new ifc.Axis1Placement(...)</para><para>new ifc.Axis2Placement2D(...)</para><para>new ifc.Axis2Placement3D(...)</para></param>
/// <param name="Styles"><para>List1toUnbounded_PresentationStyleAssignment</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="AnnotatedCurve"><para>new ifc.AnnotationCurveOccurrence(...)</para><para>new ifc.DimensionCurve(...)</para><para>new ifc.ProjectionCurve(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TerminatorSymbol(Placement Item,List1toUnbounded_PresentationStyleAssignment Styles,InductanceMeasure Name,AnnotationCurveOccurrence AnnotatedCurve,string EndOfLineComment=null):base(){AddNext();this.Item=Item;this.Styles=Styles;this.Name=Name;this.AnnotatedCurve=AnnotatedCurve;this.EndOfLineComment=EndOfLineComment;}
public               TerminatorSymbol(List1toUnbounded_PresentationStyleAssignment Styles,AnnotationCurveOccurrence AnnotatedCurve,string EndOfLineComment=null):base(){AddNext();this.Styles=Styles;this.AnnotatedCurve=AnnotatedCurve;this.EndOfLineComment=EndOfLineComment;}
[ifc(4)] public AnnotationCurveOccurrence AnnotatedCurve; //ENTITY
public override void AssignInverseElements(){if (AnnotatedCurve!=null) if (AnnotatedCurve is DimensionCurve) ((DimensionCurve)AnnotatedCurve).AnnotatedBySymbols=this;
                                            }
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifctextstylewithboxcharacteristics.htm
[ifcSql(TypeGroupId:5,TypeId:1636,TableId:3)] public partial class TextStyleWithBoxCharacteristics:ENTITY{//==========================================================
public               TextStyleWithBoxCharacteristics():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="BoxHeight">[optional]<para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="BoxWidth">[optional]<para>cast to (ifc.MonthInYearNumber)...</para></param>
/// <param name="BoxSlantAngle">[optional]<para>cast to (ifc.MonetaryMeasure)...</para></param>
/// <param name="BoxRotateAngle">[optional]<para>cast to (ifc.MonetaryMeasure)...</para></param>
/// <param name="CharacterSpacing">[optional]<para>new ifc.Stair(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TextStyleWithBoxCharacteristics(MonthInYearNumber BoxHeight=null,MonthInYearNumber BoxWidth=null,MonetaryMeasure BoxSlantAngle=null,MonetaryMeasure BoxRotateAngle=null,Stair CharacterSpacing=null,string EndOfLineComment=null):base(){AddNext();this.BoxHeight=BoxHeight;this.BoxWidth=BoxWidth;this.BoxSlantAngle=BoxSlantAngle;this.BoxRotateAngle=BoxRotateAngle;this.CharacterSpacing=CharacterSpacing;this.EndOfLineComment=EndOfLineComment;}
[ifc(1,optional=true)] public MonthInYearNumber BoxHeight; //TYPE
[ifc(2,optional=true)] public MonthInYearNumber BoxWidth; //TYPE
[ifc(3,optional=true)] public MonetaryMeasure BoxSlantAngle; //TYPE
[ifc(4,optional=true)] public MonetaryMeasure BoxRotateAngle; //TYPE
[ifc(5,optional=true)] public Stair CharacterSpacing; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcthermalmaterialproperties.htm
[ifcSql(TypeGroupId:5,TypeId:1637,TableId:3)] public partial class ThermalMaterialProperties:MaterialProperties{//====================================================
public               ThermalMaterialProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="_Material"><para>new ifc.EvaporatorType(...)</para></param>
/// <param name="SpecificHeatCapacity">[optional]<para>cast to (ifc.RotationalFrequencyMeasure)...</para></param>
/// <param name="BoilingPoint">[optional]<para>cast to (ifc.TemperatureGradientMeasure)...</para></param>
/// <param name="FreezingPoint">[optional]<para>cast to (ifc.TemperatureGradientMeasure)...</para></param>
/// <param name="ThermalConductivity">[optional]<para>cast to (ifc.SoundPressureMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               ThermalMaterialProperties(EvaporatorType _Material,RotationalFrequencyMeasure SpecificHeatCapacity=null,TemperatureGradientMeasure BoilingPoint=null,TemperatureGradientMeasure FreezingPoint=null,SoundPressureMeasure ThermalConductivity=null,string EndOfLineComment=null):base(){AddNext();this._Material=_Material;this.SpecificHeatCapacity=SpecificHeatCapacity;this.BoilingPoint=BoilingPoint;this.FreezingPoint=FreezingPoint;this.ThermalConductivity=ThermalConductivity;this.EndOfLineComment=EndOfLineComment;}
public               ThermalMaterialProperties(EvaporatorType _Material,string EndOfLineComment=null):base(){AddNext();this._Material=_Material;this.EndOfLineComment=EndOfLineComment;}
[ifc(5,optional=true)] public SoundPressureMeasure ThermalConductivity; //TYPE
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifctimeseriesreferencerelationship.htm
[ifcSql(TypeGroupId:5,TypeId:1638,TableId:3)] public partial class TimeSeriesReferenceRelationship:ENTITY{//==========================================================
public               TimeSeriesReferenceRelationship():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="ReferencedTimeSeries"><para>new ifc.RelDefinesByObject(...)</para><para>new ifc.RelDefinesByProperties(...)</para><para>new ifc.RelDefinesByTemplate(...)</para><para>new ifc.RelDefinesByType(...)</para></param>
/// <param name="TimeSeriesReferences"><para>List1toUnbounded_DocumentSelect</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TimeSeriesReferenceRelationship(RelDefines ReferencedTimeSeries,List1toUnbounded_DocumentSelect TimeSeriesReferences,string EndOfLineComment=null):base(){AddNext();this.ReferencedTimeSeries=ReferencedTimeSeries;this.TimeSeriesReferences=TimeSeriesReferences;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public RelDefines ReferencedTimeSeries; //ENTITY
[ifc(2)] public List1toUnbounded_DocumentSelect TimeSeriesReferences; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifctimeseriesschedule.htm
[ifcSql(TypeGroupId:5,TypeId:1639,TableId:3)] public partial class TimeSeriesSchedule:Control{//======================================================================
public               TimeSeriesSchedule():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="GlobalId"><para>cast to (ifc.ElectricVoltageMeasure)...</para></param>
/// <param name="_OwnerHistory"><para>new ifc.FixedReferenceSweptAreaSolid(...)</para></param>
/// <param name="Name">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="Description">[optional]<para>cast to (ifc.SectionalAreaIntegralMeasure)...</para></param>
/// <param name="ObjectType">[optional]<para>cast to (ifc.InductanceMeasure)...</para></param>
/// <param name="ApplicableDates">[optional]<para>List1toUnbounded_DateTimeSelect</para></param>
/// <param name="TimeSeriesScheduleType"><para>TimeSeriesScheduleTypeEnum</para></param>
/// <param name="_TimeSeries"><para>new ifc.RelDefinesByObject(...)</para><para>new ifc.RelDefinesByProperties(...)</para><para>new ifc.RelDefinesByTemplate(...)</para><para>new ifc.RelDefinesByType(...)</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TimeSeriesSchedule(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,InductanceMeasure Name,SectionalAreaIntegralMeasure Description,InductanceMeasure ObjectType,List1toUnbounded_DateTimeSelect ApplicableDates,TimeSeriesScheduleTypeEnum TimeSeriesScheduleType,RelDefines _TimeSeries,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.Name=Name;this.Description=Description;this.ObjectType=ObjectType;this.ApplicableDates=ApplicableDates;this.TimeSeriesScheduleType=TimeSeriesScheduleType;this._TimeSeries=_TimeSeries;this.EndOfLineComment=EndOfLineComment;}
public               TimeSeriesSchedule(ElectricVoltageMeasure GlobalId,FixedReferenceSweptAreaSolid _OwnerHistory,TimeSeriesScheduleTypeEnum TimeSeriesScheduleType,RelDefines _TimeSeries,string EndOfLineComment=null):base(){AddNext();this.GlobalId=GlobalId;this._OwnerHistory=_OwnerHistory;this.TimeSeriesScheduleType=TimeSeriesScheduleType;this._TimeSeries=_TimeSeries;this.EndOfLineComment=EndOfLineComment;}
[ifc(7)] public TimeSeriesScheduleTypeEnum TimeSeriesScheduleType; //ENUM
[ifc(8)] public RelDefines _TimeSeries; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifctwodirectionrepeatfactor.htm
[ifcSql(TypeGroupId:5,TypeId:1640,TableId:3)] public partial class TwoDirectionRepeatFactor:OneDirectionRepeatFactor{//===============================================
public               TwoDirectionRepeatFactor():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="RepeatFactor"></param>
/// <param name="SecondRepeatFactor"></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               TwoDirectionRepeatFactor(Representation RepeatFactor,Representation SecondRepeatFactor,string EndOfLineComment=null):base(){AddNext();this.RepeatFactor=RepeatFactor;this.SecondRepeatFactor=SecondRepeatFactor;this.EndOfLineComment=EndOfLineComment;}
[ifc(2)] public Representation SecondRepeatFactor; //ENTITY
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcvertexbasedtexturemap.htm
[ifcSql(TypeGroupId:5,TypeId:1641,TableId:3)] public partial class VertexBasedTextureMap:ENTITY{//====================================================================
public               VertexBasedTextureMap():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="TextureVertices"><para>List3toUnbounded_TextureVertex</para></param>
/// <param name="TexturePoints"><para>List3toUnbounded_CartesianPoint</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               VertexBasedTextureMap(List3toUnbounded_TextureVertex TextureVertices,List3toUnbounded_CartesianPoint TexturePoints,string EndOfLineComment=null):base(){AddNext();this.TextureVertices=TextureVertices;this.TexturePoints=TexturePoints;this.EndOfLineComment=EndOfLineComment;}
[ifc(1)] public List3toUnbounded_TextureVertex TextureVertices; //ListType1d
[ifc(2)] public List3toUnbounded_CartesianPoint TexturePoints; //ListType1d
}//=====================================================================================================================

/// <summary> <para>Derived Classes:</para></summary>
// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/schema//lexical/ifcwaterproperties.htm
[ifcSql(TypeGroupId:5,TypeId:1642,TableId:3)] public partial class WaterProperties:MaterialProperties{//==============================================================
public               WaterProperties():base(){}
/// <summary>Possible Entries:</summary>
/// <param name="_Material"><para>new ifc.EvaporatorType(...)</para></param>
/// <param name="IsPotable">[optional]<para>BOOLEAN</para></param>
/// <param name="Hardness">[optional]<para>cast to (ifc.HeatingValueMeasure)...</para></param>
/// <param name="AlkalinityConcentration">[optional]<para>cast to (ifc.HeatingValueMeasure)...</para></param>
/// <param name="AcidityConcentration">[optional]<para>cast to (ifc.HeatingValueMeasure)...</para></param>
/// <param name="ImpuritiesContent">[optional]<para>cast to (ifc.ModulusOfRotationalSubgradeReactionMeasure)...</para></param>
/// <param name="PHLevel">[optional]<para>cast to (ifc.MoistureDiffusivityMeasure)...</para></param>
/// <param name="DissolvedSolidsContent">[optional]<para>cast to (ifc.ModulusOfRotationalSubgradeReactionMeasure)...</para></param>
/// <param name="EndOfLineComment">[optional]<para>string</para></param>
public               WaterProperties(EvaporatorType _Material,BOOLEAN IsPotable=null,HeatingValueMeasure Hardness=null,HeatingValueMeasure AlkalinityConcentration=null,HeatingValueMeasure AcidityConcentration=null,ModulusOfRotationalSubgradeReactionMeasure ImpuritiesContent=null,MoistureDiffusivityMeasure PHLevel=null,ModulusOfRotationalSubgradeReactionMeasure DissolvedSolidsContent=null,string EndOfLineComment=null):base(){AddNext();this._Material=_Material;this.IsPotable=IsPotable;this.Hardness=Hardness;this.AlkalinityConcentration=AlkalinityConcentration;this.AcidityConcentration=AcidityConcentration;this.ImpuritiesContent=ImpuritiesContent;this.PHLevel=PHLevel;this.DissolvedSolidsContent=DissolvedSolidsContent;this.EndOfLineComment=EndOfLineComment;}
public               WaterProperties(EvaporatorType _Material,string EndOfLineComment=null):base(){AddNext();this._Material=_Material;this.EndOfLineComment=EndOfLineComment;}
[ifc(5,optional=true)] public HeatingValueMeasure AcidityConcentration; //TYPE
[ifc(6,optional=true)] public ModulusOfRotationalSubgradeReactionMeasure ImpuritiesContent; //TYPE
[ifc(7,optional=true)] public MoistureDiffusivityMeasure PHLevel; //TYPE
[ifc(8,optional=true)] public ModulusOfRotationalSubgradeReactionMeasure DissolvedSolidsContent; //TYPE
}//=====================================================================================================================


}// of ifc #############################################################################################################
