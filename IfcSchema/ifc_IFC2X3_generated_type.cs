// ifc_IFC2X3_generated_type.cs Copyright (c) 2020, Bernhard Simon Bock, Friedrich Eder, MIT License (see https://github.com/IfcSharp/IfcSharpLibrary/blob/master/License.md)
// ported from IFC-Model by buildingSMART International Ltd (see https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/EXPRESS/IFC2X3_TC1.exp)
// official documentation see https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML

// CAUTION! THIS IS GENERATED CODE! DON'T MODIFY THIS FILE. THIS FILE WILL BE UPDATED WITH NEW VERSIONS.
using System;
using System.Collections.Generic;
namespace ifc{//########################################################################################################



//BASETYPES:
[ifcSql(TypeGroupId:0,TypeId:     1,TableId:5,LayerId:32)] public partial class REAL                      :TYPE<double>    {public REAL                      (double     value):base(value){}   public REAL                      (){} public static implicit operator REAL                      (double     value){return new REAL                      { IsNull=false, TypeValue = value };}public static implicit operator double    (REAL                       value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcreal.htm
[ifcSql(TypeGroupId:0,TypeId:     2,TableId:1,LayerId:32)] public partial class BINARY                    :TYPE<string>    {public BINARY                    (string     value):base(value){}   public BINARY                    (){} public static implicit operator BINARY                    (string     value){return new BINARY                    { IsNull=false, TypeValue = value };}public static implicit operator string    (BINARY                     value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcbinary.htm
[ifcSql(TypeGroupId:0,TypeId:     3,TableId:2,LayerId:32)] public partial class BOOLEAN                   :TYPE<bool>      {public BOOLEAN                   (bool       value):base(value){}   public BOOLEAN                   (){} public static implicit operator BOOLEAN                   (bool       value){return new BOOLEAN                   { IsNull=false, TypeValue = value };}public static implicit operator bool      (BOOLEAN                    value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcboolean.htm
[ifcSql(TypeGroupId:0,TypeId:     4,TableId:6,LayerId:32)] public partial class INTEGER                   :TYPE<int>       {public INTEGER                   (int        value):base(value){}   public INTEGER                   (){} public static implicit operator INTEGER                   (int        value){return new INTEGER                   { IsNull=false, TypeValue = value };}public static implicit operator int       (INTEGER                    value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcinteger.htm
[ifcSql(TypeGroupId:0,TypeId:     5,TableId:6,LayerId: 0)] public partial class NUMBER                    :TYPE<double>    {public NUMBER                    (double     value):base(value){}   public NUMBER                    (){} public static implicit operator NUMBER                    (double     value){return new NUMBER                    { IsNull=false, TypeValue = value };}public static implicit operator double    (NUMBER                     value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcnumber.htm
[ifcSql(TypeGroupId:0,TypeId:     6,TableId:7,LayerId: 0)] public partial class STRING                    :TYPE<string>    {public STRING                    (string     value):base(value){}   public STRING                    (){} public static implicit operator STRING                    (string     value){return new STRING                    { IsNull=false, TypeValue = value };}public static implicit operator string    (STRING                     value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcstring.htm
[ifcSql(TypeGroupId:0,TypeId:     7,TableId:7,LayerId: 0)] public partial class STRING_22_FIXED           :TYPE<string>    {public STRING_22_FIXED           (string     value):base(value){}   public STRING_22_FIXED           (){} public static implicit operator STRING_22_FIXED           (string     value){return new STRING_22_FIXED           { IsNull=false, TypeValue = value };}public static implicit operator string    (STRING_22_FIXED            value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcstring_22_fixed.htm
[ifcSql(TypeGroupId:0,TypeId:     8,TableId:7,LayerId: 0)] public partial class STRING_255                :TYPE<string>    {public STRING_255                (string     value):base(value){}   public STRING_255                (){} public static implicit operator STRING_255                (string     value){return new STRING_255                { IsNull=false, TypeValue = value };}public static implicit operator string    (STRING_255                 value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcstring_255.htm
[ifcSql(TypeGroupId:0,TypeId:     9,TableId:2,LayerId:32)] public partial class LOGICAL                   :TYPE<bool>      {public LOGICAL                   (bool       value):base(value){}   public LOGICAL                   (){} public static implicit operator LOGICAL                   (bool       value){return new LOGICAL                   { IsNull=false, TypeValue = value };}public static implicit operator bool      (LOGICAL                    value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifclogical.htm


//LISTTYPE1D:
[ifcSql(TypeGroupId:1,TypeId:230002,TableId:8,LayerId:32)] public partial class Array1to2_double          :Array1to2<double>{public Array1to2_double          (Array1to2<double> value):base(value){} public Array1to2_double          (){} public Array1to2_double          (params REAL[] items):base(){foreach (REAL e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230003,TableId:8,LayerId:32)] public partial class List3to4_int              :List3to4<int>{public List3to4_int              (List3to4<int> value):base(value){} public List3to4_int              (){} public List3to4_int              (params INTEGER[] items):base(){foreach (INTEGER e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230007,TableId:8,LayerId:30)] public partial class List1toUnbounded_CompositeCurveSegment:List1toUnbounded<CompositeCurveSegment>{public List1toUnbounded_CompositeCurveSegment(List1toUnbounded<CompositeCurveSegment> value):base(value){} public List1toUnbounded_CompositeCurveSegment(){} public List1toUnbounded_CompositeCurveSegment(params CompositeCurveSegment[] items):base(){foreach (CompositeCurveSegment e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230008,TableId:8,LayerId: 2)] public partial class Set1toUnbounded_PropertySetDefinition:Set1toUnbounded<PropertySetDefinition>{public Set1toUnbounded_PropertySetDefinition(Set1toUnbounded<PropertySetDefinition> value):base(value){} public Set1toUnbounded_PropertySetDefinition(){} public Set1toUnbounded_PropertySetDefinition(params PropertySetDefinition[] items):base(){foreach (PropertySetDefinition e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230009,TableId:8,LayerId:30)] public partial class List1toUnboundedUnique_RepresentationMap:List1toUnboundedUnique<RepresentationMap>{public List1toUnboundedUnique_RepresentationMap(List1toUnboundedUnique<RepresentationMap> value):base(value){} public List1toUnboundedUnique_RepresentationMap(){} public List1toUnboundedUnique_RepresentationMap(params RepresentationMap[] items):base(){foreach (RepresentationMap e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230010,TableId:8,LayerId:-4)] public partial class Set1toUnbounded_DraughtingCalloutElement:Set1toUnbounded<DraughtingCalloutElement>{public Set1toUnbounded_DraughtingCalloutElement(Set1toUnbounded<DraughtingCalloutElement> value):base(value){} public Set1toUnbounded_DraughtingCalloutElement(){} public Set1toUnbounded_DraughtingCalloutElement(params DraughtingCalloutElement[] items):base(){foreach (DraughtingCalloutElement e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230011,TableId:8,LayerId:33)] public partial class Set1toUnbounded_PresentationStyleAssignment:Set1toUnbounded<PresentationStyleAssignment>{public Set1toUnbounded_PresentationStyleAssignment(Set1toUnbounded<PresentationStyleAssignment> value):base(value){} public Set1toUnbounded_PresentationStyleAssignment(){} public Set1toUnbounded_PresentationStyleAssignment(params PresentationStyleAssignment[] items):base(){foreach (PresentationStyleAssignment e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230012,TableId:8,LayerId:30)] public partial class Set1toUnbounded_Curve     :Set1toUnbounded<Curve>{public Set1toUnbounded_Curve     (Set1toUnbounded<Curve> value):base(value){} public Set1toUnbounded_Curve     (){} public Set1toUnbounded_Curve     (params Curve[] items):base(){foreach (Curve e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230013,TableId:8,LayerId:25)] public partial class Set1toUnbounded_AppliedValue:Set1toUnbounded<AppliedValue>{public Set1toUnbounded_AppliedValue(Set1toUnbounded<AppliedValue> value):base(value){} public Set1toUnbounded_AppliedValue(){} public Set1toUnbounded_AppliedValue(params AppliedValue[] items):base(){foreach (AppliedValue e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230014,TableId:8,LayerId:37)] public partial class Set1toUnbounded_Property  :Set1toUnbounded<Property>{public Set1toUnbounded_Property  (Set1toUnbounded<Property> value):base(value){} public Set1toUnbounded_Property  (){} public Set1toUnbounded_Property  (params Property[] items):base(){foreach (Property e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230015,TableId:8,LayerId:30)] public partial class List2toUnbounded_CartesianPoint:List2toUnbounded<CartesianPoint>{public List2toUnbounded_CartesianPoint(List2toUnbounded<CartesianPoint> value):base(value){} public List2toUnbounded_CartesianPoint(){} public List2toUnbounded_CartesianPoint(params CartesianPoint[] items):base(){foreach (CartesianPoint e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230016,TableId:8,LayerId:32)] public partial class List1to3_LengthMeasure    :List1to3<LengthMeasure>{public List1to3_LengthMeasure    (List1to3<LengthMeasure> value):base(value){} public List1to3_LengthMeasure    (){} public List1to3_LengthMeasure    (params LengthMeasure[] items):base(){foreach (LengthMeasure e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230017,TableId:8,LayerId:27)] public partial class Set1toUnbounded_ClassificationItem:Set1toUnbounded<ClassificationItem>{public Set1toUnbounded_ClassificationItem(Set1toUnbounded<ClassificationItem> value):base(value){} public Set1toUnbounded_ClassificationItem(){} public Set1toUnbounded_ClassificationItem(params ClassificationItem[] items):base(){foreach (ClassificationItem e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230018,TableId:8,LayerId:27)] public partial class Set1toUnbounded_ClassificationNotationFacet:Set1toUnbounded<ClassificationNotationFacet>{public Set1toUnbounded_ClassificationNotationFacet(Set1toUnbounded<ClassificationNotationFacet> value):base(value){} public Set1toUnbounded_ClassificationNotationFacet(){} public Set1toUnbounded_ClassificationNotationFacet(params ClassificationNotationFacet[] items):base(){foreach (ClassificationNotationFacet e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230019,TableId:8,LayerId:41)] public partial class Set1toUnbounded_Face      :Set1toUnbounded<Face>{public Set1toUnbounded_Face      (Set1toUnbounded<Face> value):base(value){} public Set1toUnbounded_Face      (){} public Set1toUnbounded_Face      (params Face[] items):base(){foreach (Face e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230020,TableId:8,LayerId:36)] public partial class Set2toUnbounded_ProfileDef:Set2toUnbounded<ProfileDef>{public Set2toUnbounded_ProfileDef(Set2toUnbounded<ProfileDef> value):base(value){} public Set2toUnbounded_ProfileDef(){} public Set2toUnbounded_ProfileDef(params ProfileDef[] items):base(){foreach (ProfileDef e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230021,TableId:8,LayerId:24)] public partial class List1toUnboundedUnique_Constraint:List1toUnboundedUnique<Constraint>{public List1toUnboundedUnique_Constraint(List1toUnboundedUnique<Constraint> value):base(value){} public List1toUnboundedUnique_Constraint(){} public List1toUnboundedUnique_Constraint(params Constraint[] items):base(){foreach (Constraint e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230022,TableId:8,LayerId:27)] public partial class Set1toUnbounded_ClassificationNotationSelect:Set1toUnbounded<ClassificationNotationSelect>{public Set1toUnbounded_ClassificationNotationSelect(Set1toUnbounded<ClassificationNotationSelect> value):base(value){} public Set1toUnbounded_ClassificationNotationSelect(){} public Set1toUnbounded_ClassificationNotationSelect(params ClassificationNotationSelect[] items):base(){foreach (ClassificationNotationSelect e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230023,TableId:8,LayerId:24)] public partial class Set1toUnbounded_Constraint:Set1toUnbounded<Constraint>{public Set1toUnbounded_Constraint(Set1toUnbounded<Constraint> value):base(value){} public Set1toUnbounded_Constraint(){} public Set1toUnbounded_Constraint(params Constraint[] items):base(){foreach (Constraint e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230024,TableId:8,LayerId:22)] public partial class Set1toUnbounded_ActorSelect:Set1toUnbounded<ActorSelect>{public Set1toUnbounded_ActorSelect(Set1toUnbounded<ActorSelect> value):base(value){} public Set1toUnbounded_ActorSelect(){} public Set1toUnbounded_ActorSelect(params ActorSelect[] items):base(){foreach (ActorSelect e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230025,TableId:8,LayerId:30)] public partial class Set0toUnbounded_Curve     :Set0toUnbounded<Curve>{public Set0toUnbounded_Curve     (Set0toUnbounded<Curve> value):base(value){} public Set0toUnbounded_Curve     (){} public Set0toUnbounded_Curve     (params Curve[] items):base(){foreach (Curve e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230026,TableId:8,LayerId:33)] public partial class List1toUnbounded_CurveStyleFontPattern:List1toUnbounded<CurveStyleFontPattern>{public List1toUnbounded_CurveStyleFontPattern(List1toUnbounded<CurveStyleFontPattern> value):base(value){} public List1toUnbounded_CurveStyleFontPattern(){} public List1toUnbounded_CurveStyleFontPattern(params CurveStyleFontPattern[] items):base(){foreach (CurveStyleFontPattern e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230027,TableId:8,LayerId:32)] public partial class Set1toUnbounded_DerivedUnitElement:Set1toUnbounded<DerivedUnitElement>{public Set1toUnbounded_DerivedUnitElement(Set1toUnbounded<DerivedUnitElement> value):base(value){} public Set1toUnbounded_DerivedUnitElement(){} public Set1toUnbounded_DerivedUnitElement(params DerivedUnitElement[] items):base(){foreach (DerivedUnitElement e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230028,TableId:8,LayerId:32)] public partial class List2to3_double           :List2to3<double>{public List2to3_double           (List2to3<double> value):base(value){} public List2to3_double           (){} public List2to3_double           (params REAL[] items):base(){foreach (REAL e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230029,TableId:8,LayerId:27)] public partial class Set1toUnbounded_DocumentReference:Set1toUnbounded<DocumentReference>{public Set1toUnbounded_DocumentReference(Set1toUnbounded<DocumentReference> value):base(value){} public Set1toUnbounded_DocumentReference(){} public Set1toUnbounded_DocumentReference(params DocumentReference[] items):base(){foreach (DocumentReference e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230030,TableId:8,LayerId:27)] public partial class Set1toUnbounded_DocumentInformation:Set1toUnbounded<DocumentInformation>{public Set1toUnbounded_DocumentInformation(Set1toUnbounded<DocumentInformation> value):base(value){} public Set1toUnbounded_DocumentInformation(){} public Set1toUnbounded_DocumentInformation(params DocumentInformation[] items):base(){foreach (DocumentInformation e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230031,TableId:8,LayerId:41)] public partial class List1toUnbounded_OrientedEdge:List1toUnbounded<OrientedEdge>{public List1toUnbounded_OrientedEdge(List1toUnbounded<OrientedEdge> value):base(value){} public List1toUnbounded_OrientedEdge(){} public List1toUnbounded_OrientedEdge(params OrientedEdge[] items):base(){foreach (OrientedEdge e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230032,TableId:8,LayerId:38)] public partial class Set1toUnbounded_PhysicalQuantity:Set1toUnbounded<PhysicalQuantity>{public Set1toUnbounded_PhysicalQuantity(Set1toUnbounded<PhysicalQuantity> value):base(value){} public Set1toUnbounded_PhysicalQuantity(){} public Set1toUnbounded_PhysicalQuantity(params PhysicalQuantity[] items):base(){foreach (PhysicalQuantity e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230033,TableId:8,LayerId:41)] public partial class Set1toUnbounded_FaceBound :Set1toUnbounded<FaceBound>{public Set1toUnbounded_FaceBound (Set1toUnbounded<FaceBound> value):base(value){} public Set1toUnbounded_FaceBound (){} public Set1toUnbounded_FaceBound (params FaceBound[] items):base(){foreach (FaceBound e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230034,TableId:8,LayerId:41)] public partial class Set1toUnbounded_ConnectedFaceSet:Set1toUnbounded<ConnectedFaceSet>{public Set1toUnbounded_ConnectedFaceSet(Set1toUnbounded<ConnectedFaceSet> value):base(value){} public Set1toUnbounded_ConnectedFaceSet(){} public Set1toUnbounded_ConnectedFaceSet(params ConnectedFaceSet[] items):base(){foreach (ConnectedFaceSet e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230035,TableId:8,LayerId:41)] public partial class Set1toUnbounded_ClosedShell:Set1toUnbounded<ClosedShell>{public Set1toUnbounded_ClosedShell(Set1toUnbounded<ClosedShell> value):base(value){} public Set1toUnbounded_ClosedShell(){} public Set1toUnbounded_ClosedShell(params ClosedShell[] items):base(){foreach (ClosedShell e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230036,TableId:8,LayerId:33)] public partial class Set1toUnbounded_FillStyleSelect:Set1toUnbounded<FillStyleSelect>{public Set1toUnbounded_FillStyleSelect(Set1toUnbounded<FillStyleSelect> value):base(value){} public Set1toUnbounded_FillStyleSelect(){} public Set1toUnbounded_FillStyleSelect(params FillStyleSelect[] items):base(){foreach (FillStyleSelect e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230037,TableId:8,LayerId:33)] public partial class Set1toUnbounded_FillAreaStyleTileShapeSelect:Set1toUnbounded<FillAreaStyleTileShapeSelect>{public Set1toUnbounded_FillAreaStyleTileShapeSelect(Set1toUnbounded<FillAreaStyleTileShapeSelect> value):base(value){} public Set1toUnbounded_FillAreaStyleTileShapeSelect(){} public Set1toUnbounded_FillAreaStyleTileShapeSelect(params FillAreaStyleTileShapeSelect[] items):base(){foreach (FillAreaStyleTileShapeSelect e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230038,TableId:8,LayerId:29)] public partial class Set1toUnbounded_GeometricSetSelect:Set1toUnbounded<GeometricSetSelect>{public Set1toUnbounded_GeometricSetSelect(Set1toUnbounded<GeometricSetSelect> value):base(value){} public Set1toUnbounded_GeometricSetSelect(){} public Set1toUnbounded_GeometricSetSelect(params GeometricSetSelect[] items):base(){foreach (GeometricSetSelect e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230039,TableId:8,LayerId:28)] public partial class List1toUnboundedUnique_GridAxis:List1toUnboundedUnique<GridAxis>{public List1toUnboundedUnique_GridAxis(List1toUnboundedUnique<GridAxis> value):base(value){} public List1toUnboundedUnique_GridAxis(){} public List1toUnboundedUnique_GridAxis(params GridAxis[] items):base(){foreach (GridAxis e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230040,TableId:8,LayerId:22)] public partial class Set1toUnbounded_Person    :Set1toUnbounded<Person>{public Set1toUnbounded_Person    (Set1toUnbounded<Person> value):base(value){} public Set1toUnbounded_Person    (){} public Set1toUnbounded_Person    (params Person[] items):base(){foreach (Person e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230041,TableId:8,LayerId:-1)] public partial class List1toUnbounded_IrregularTimeSeriesValue:List1toUnbounded<IrregularTimeSeriesValue>{public List1toUnbounded_IrregularTimeSeriesValue(List1toUnbounded<IrregularTimeSeriesValue> value):base(value){} public List1toUnbounded_IrregularTimeSeriesValue(){} public List1toUnbounded_IrregularTimeSeriesValue(params IrregularTimeSeriesValue[] items):base(){foreach (IrregularTimeSeriesValue e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230042,TableId:8,LayerId:32)] public partial class List1toUnbounded_Value    :List1toUnbounded<Value>{public List1toUnbounded_Value    (List1toUnbounded<Value> value):base(value){} public List1toUnbounded_Value    (){} public List1toUnbounded_Value    (params Value[] items):base(){foreach (Value e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230043,TableId:8,LayerId:27)] public partial class Set1toUnbounded_LibraryReference:Set1toUnbounded<LibraryReference>{public Set1toUnbounded_LibraryReference(Set1toUnbounded<LibraryReference> value):base(value){} public Set1toUnbounded_LibraryReference(){} public Set1toUnbounded_LibraryReference(params LibraryReference[] items):base(){foreach (LibraryReference e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230044,TableId:8,LayerId:32)] public partial class List1toUnbounded_PlaneAngleMeasure:List1toUnbounded<PlaneAngleMeasure>{public List1toUnbounded_PlaneAngleMeasure(List1toUnbounded<PlaneAngleMeasure> value):base(value){} public List1toUnbounded_PlaneAngleMeasure(){} public List1toUnbounded_PlaneAngleMeasure(params PlaneAngleMeasure[] items):base(){foreach (PlaneAngleMeasure e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230045,TableId:8,LayerId:32)] public partial class List1toUnbounded_LuminousIntensityDistributionMeasure:List1toUnbounded<LuminousIntensityDistributionMeasure>{public List1toUnbounded_LuminousIntensityDistributionMeasure(List1toUnbounded<LuminousIntensityDistributionMeasure> value):base(value){} public List1toUnbounded_LuminousIntensityDistributionMeasure(){} public List1toUnbounded_LuminousIntensityDistributionMeasure(params LuminousIntensityDistributionMeasure[] items):base(){foreach (LuminousIntensityDistributionMeasure e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230046,TableId:8,LayerId:35)] public partial class List1toUnbounded_LightDistributionData:List1toUnbounded<LightDistributionData>{public List1toUnbounded_LightDistributionData(List1toUnbounded<LightDistributionData> value):base(value){} public List1toUnbounded_LightDistributionData(){} public List1toUnbounded_LightDistributionData(params LightDistributionData[] items):base(){foreach (LightDistributionData e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230047,TableId:8,LayerId:39)] public partial class List1toUnbounded_Representation:List1toUnbounded<Representation>{public List1toUnbounded_Representation(List1toUnbounded<Representation> value):base(value){} public List1toUnbounded_Representation(){} public List1toUnbounded_Representation(params Representation[] items):base(){foreach (Representation e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230048,TableId:8,LayerId:31)] public partial class List1toUnbounded_MaterialLayer:List1toUnbounded<MaterialLayer>{public List1toUnbounded_MaterialLayer(List1toUnbounded<MaterialLayer> value):base(value){} public List1toUnbounded_MaterialLayer(){} public List1toUnbounded_MaterialLayer(params MaterialLayer[] items):base(){foreach (MaterialLayer e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230049,TableId:8,LayerId:31)] public partial class List1toUnbounded_Material :List1toUnbounded<Material>{public List1toUnbounded_Material (List1toUnbounded<Material> value):base(value){} public List1toUnbounded_Material (){} public List1toUnbounded_Material (params Material[] items):base(){foreach (Material e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230050,TableId:8,LayerId:-5)] public partial class Set1toUnbounded_Relaxation:Set1toUnbounded<Relaxation>{public Set1toUnbounded_Relaxation(Set1toUnbounded<Relaxation> value):base(value){} public Set1toUnbounded_Relaxation(){} public Set1toUnbounded_Relaxation(params Relaxation[] items):base(){foreach (Relaxation e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230051,TableId:8,LayerId:32)] public partial class List1toUnboundedUnique_Text:List1toUnboundedUnique<Text>{public List1toUnboundedUnique_Text(List1toUnboundedUnique<Text> value):base(value){} public List1toUnboundedUnique_Text(){} public List1toUnboundedUnique_Text(params Text[] items):base(){foreach (Text e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230052,TableId:8,LayerId:22)] public partial class List1toUnbounded_ActorRole:List1toUnbounded<ActorRole>{public List1toUnbounded_ActorRole(List1toUnbounded<ActorRole> value):base(value){} public List1toUnbounded_ActorRole(){} public List1toUnbounded_ActorRole(params ActorRole[] items):base(){foreach (ActorRole e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230053,TableId:8,LayerId:22)] public partial class List1toUnbounded_Address  :List1toUnbounded<Address>{public List1toUnbounded_Address  (List1toUnbounded<Address> value):base(value){} public List1toUnbounded_Address  (){} public List1toUnbounded_Address  (params Address[] items):base(){foreach (Address e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230054,TableId:8,LayerId:22)] public partial class Set1toUnbounded_Organization:Set1toUnbounded<Organization>{public Set1toUnbounded_Organization(Set1toUnbounded<Organization> value):base(value){} public Set1toUnbounded_Organization(){} public Set1toUnbounded_Organization(params Organization[] items):base(){foreach (Organization e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230055,TableId:8,LayerId:41)] public partial class List1toUnboundedUnique_OrientedEdge:List1toUnboundedUnique<OrientedEdge>{public List1toUnboundedUnique_OrientedEdge(List1toUnboundedUnique<OrientedEdge> value):base(value){} public List1toUnboundedUnique_OrientedEdge(){} public List1toUnboundedUnique_OrientedEdge(params OrientedEdge[] items):base(){foreach (OrientedEdge e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230056,TableId:8,LayerId:32)] public partial class List1toUnbounded_Label    :List1toUnbounded<Label>{public List1toUnbounded_Label    (List1toUnbounded<Label> value):base(value){} public List1toUnbounded_Label    (){} public List1toUnbounded_Label    (params Label[] items):base(){foreach (Label e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230057,TableId:8,LayerId:32)] public partial class List1toUnbounded_BINARY   :List1toUnbounded<BINARY>{public List1toUnbounded_BINARY   (List1toUnbounded<BINARY> value):base(value){} public List1toUnbounded_BINARY   (){} public List1toUnbounded_BINARY   (params BINARY[] items):base(){foreach (BINARY e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230058,TableId:8,LayerId:30)] public partial class List3toUnboundedUnique_CartesianPoint:List3toUnboundedUnique<CartesianPoint>{public List3toUnboundedUnique_CartesianPoint(List3toUnboundedUnique<CartesianPoint> value):base(value){} public List3toUnboundedUnique_CartesianPoint(){} public List3toUnboundedUnique_CartesianPoint(params CartesianPoint[] items):base(){foreach (CartesianPoint e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230059,TableId:8,LayerId:35)] public partial class Set1toUnbounded_LayeredItem:Set1toUnbounded<LayeredItem>{public Set1toUnbounded_LayeredItem(Set1toUnbounded<LayeredItem> value):base(value){} public Set1toUnbounded_LayeredItem(){} public Set1toUnbounded_LayeredItem(params LayeredItem[] items):base(){foreach (LayeredItem e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230060,TableId:8,LayerId:33)] public partial class Set0toUnbounded_PresentationStyleSelect:Set0toUnbounded<PresentationStyleSelect>{public Set0toUnbounded_PresentationStyleSelect(Set0toUnbounded<PresentationStyleSelect> value):base(value){} public Set0toUnbounded_PresentationStyleSelect(){} public Set0toUnbounded_PresentationStyleSelect(params PresentationStyleSelect[] items):base(){foreach (PresentationStyleSelect e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230061,TableId:8,LayerId:33)] public partial class Set1toUnbounded_PresentationStyleSelect:Set1toUnbounded<PresentationStyleSelect>{public Set1toUnbounded_PresentationStyleSelect(Set1toUnbounded<PresentationStyleSelect> value):base(value){} public Set1toUnbounded_PresentationStyleSelect(){} public Set1toUnbounded_PresentationStyleSelect(params PresentationStyleSelect[] items):base(){foreach (PresentationStyleSelect e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230062,TableId:8,LayerId:39)] public partial class Set1toUnbounded_RepresentationContext:Set1toUnbounded<RepresentationContext>{public Set1toUnbounded_RepresentationContext(Set1toUnbounded<RepresentationContext> value):base(value){} public Set1toUnbounded_RepresentationContext(){} public Set1toUnbounded_RepresentationContext(params RepresentationContext[] items):base(){foreach (RepresentationContext e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230063,TableId:8,LayerId:10)] public partial class List1toUnboundedUnique_RelAssignsToProjectOrder:List1toUnboundedUnique<RelAssignsToProjectOrder>{public List1toUnboundedUnique_RelAssignsToProjectOrder(List1toUnboundedUnique<RelAssignsToProjectOrder> value):base(value){} public List1toUnboundedUnique_RelAssignsToProjectOrder(){} public List1toUnboundedUnique_RelAssignsToProjectOrder(params RelAssignsToProjectOrder[] items):base(){foreach (RelAssignsToProjectOrder e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230064,TableId:8,LayerId:32)] public partial class List1toUnboundedUnique_Value:List1toUnboundedUnique<Value>{public List1toUnboundedUnique_Value(List1toUnboundedUnique<Value> value):base(value){} public List1toUnboundedUnique_Value(){} public List1toUnboundedUnique_Value(params Value[] items):base(){foreach (Value e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230065,TableId:8,LayerId:32)] public partial class List2toUnbounded_double   :List2toUnbounded<double>{public List2toUnbounded_double   (List2toUnbounded<double> value):base(value){} public List2toUnbounded_double   (){} public List2toUnbounded_double   (params REAL[] items):base(){foreach (REAL e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230066,TableId:8,LayerId:26)] public partial class List1toUnbounded_TimeSeriesValue:List1toUnbounded<TimeSeriesValue>{public List1toUnbounded_TimeSeriesValue(List1toUnbounded<TimeSeriesValue> value):base(value){} public List1toUnbounded_TimeSeriesValue(){} public List1toUnbounded_TimeSeriesValue(params TimeSeriesValue[] items):base(){foreach (TimeSeriesValue e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230067,TableId:8,LayerId:36)] public partial class List1toUnbounded_SectionReinforcementProperties:List1toUnbounded<SectionReinforcementProperties>{public List1toUnbounded_SectionReinforcementProperties(List1toUnbounded<SectionReinforcementProperties> value):base(value){} public List1toUnbounded_SectionReinforcementProperties(){} public List1toUnbounded_SectionReinforcementProperties(params SectionReinforcementProperties[] items):base(){foreach (SectionReinforcementProperties e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230068,TableId:8,LayerId: 2)] public partial class Set1toUnbounded_ObjectDefinition:Set1toUnbounded<ObjectDefinition>{public Set1toUnbounded_ObjectDefinition(Set1toUnbounded<ObjectDefinition> value):base(value){} public Set1toUnbounded_ObjectDefinition(){} public Set1toUnbounded_ObjectDefinition(params ObjectDefinition[] items):base(){foreach (ObjectDefinition e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230069,TableId:8,LayerId: 2)] public partial class Set1toUnbounded_Root      :Set1toUnbounded<Root>{public Set1toUnbounded_Root      (Set1toUnbounded<Root> value):base(value){} public Set1toUnbounded_Root      (){} public Set1toUnbounded_Root      (params Root[] items):base(){foreach (Root e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230070,TableId:8,LayerId:32)] public partial class List0toUnbounded_int      :List0toUnbounded<int>{public List0toUnbounded_int      (List0toUnbounded<int> value):base(value){} public List0toUnbounded_int      (){} public List0toUnbounded_int      (params INTEGER[] items):base(){foreach (INTEGER e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230071,TableId:8,LayerId: 4)] public partial class Set1toUnbounded_Element   :Set1toUnbounded<Element>{public Set1toUnbounded_Element   (Set1toUnbounded<Element> value):base(value){} public Set1toUnbounded_Element   (){} public Set1toUnbounded_Element   (params Element[] items):base(){foreach (Element e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230072,TableId:8,LayerId: 2)] public partial class Set1toUnbounded_Product   :Set1toUnbounded<Product>{public Set1toUnbounded_Product   (Set1toUnbounded<Product> value):base(value){} public Set1toUnbounded_Product   (){} public Set1toUnbounded_Product   (params Product[] items):base(){foreach (Product e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230073,TableId:8,LayerId: 5)] public partial class Set1toUnbounded_Covering  :Set1toUnbounded<Covering>{public Set1toUnbounded_Covering  (Set1toUnbounded<Covering> value):base(value){} public Set1toUnbounded_Covering  (){} public Set1toUnbounded_Covering  (params Covering[] items):base(){foreach (Covering e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230074,TableId:8,LayerId: 2)] public partial class Set1toUnbounded_Object    :Set1toUnbounded<Object>{public Set1toUnbounded_Object    (Set1toUnbounded<Object> value):base(value){} public Set1toUnbounded_Object    (){} public Set1toUnbounded_Object    (params Object[] items):base(){foreach (Object e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230075,TableId:8,LayerId: 6)] public partial class Set1toUnbounded_DistributionControlElement:Set1toUnbounded<DistributionControlElement>{public Set1toUnbounded_DistributionControlElement(Set1toUnbounded<DistributionControlElement> value):base(value){} public Set1toUnbounded_DistributionControlElement(){} public Set1toUnbounded_DistributionControlElement(params DistributionControlElement[] items):base(){foreach (DistributionControlElement e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230076,TableId:8,LayerId: 4)] public partial class Set1toUnbounded_SpatialStructureElement:Set1toUnbounded<SpatialStructureElement>{public Set1toUnbounded_SpatialStructureElement(Set1toUnbounded<SpatialStructureElement> value):base(value){} public Set1toUnbounded_SpatialStructureElement(){} public Set1toUnbounded_SpatialStructureElement(params SpatialStructureElement[] items):base(){foreach (SpatialStructureElement e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230077,TableId:8,LayerId:30)] public partial class Set1toUnbounded_RepresentationItem:Set1toUnbounded<RepresentationItem>{public Set1toUnbounded_RepresentationItem(Set1toUnbounded<RepresentationItem> value):base(value){} public Set1toUnbounded_RepresentationItem(){} public Set1toUnbounded_RepresentationItem(params RepresentationItem[] items):base(){foreach (RepresentationItem e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230078,TableId:8,LayerId:36)] public partial class Set1toUnbounded_ReinforcementBarProperties:Set1toUnbounded<ReinforcementBarProperties>{public Set1toUnbounded_ReinforcementBarProperties(Set1toUnbounded<ReinforcementBarProperties> value):base(value){} public Set1toUnbounded_ReinforcementBarProperties(){} public Set1toUnbounded_ReinforcementBarProperties(params ReinforcementBarProperties[] items):base(){foreach (ReinforcementBarProperties e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230079,TableId:8,LayerId:36)] public partial class List2toUnbounded_ProfileDef:List2toUnbounded<ProfileDef>{public List2toUnbounded_ProfileDef(List2toUnbounded<ProfileDef> value):base(value){} public List2toUnbounded_ProfileDef(){} public List2toUnbounded_ProfileDef(params ProfileDef[] items):base(){foreach (ProfileDef e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230080,TableId:8,LayerId:30)] public partial class List2toUnbounded_Axis2Placement3D:List2toUnbounded<Axis2Placement3D>{public List2toUnbounded_Axis2Placement3D(List2toUnbounded<Axis2Placement3D> value):base(value){} public List2toUnbounded_Axis2Placement3D(){} public List2toUnbounded_Axis2Placement3D(params Axis2Placement3D[] items):base(){foreach (Axis2Placement3D e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230081,TableId:8,LayerId:39)] public partial class List1toUnbounded_ShapeModel:List1toUnbounded<ShapeModel>{public List1toUnbounded_ShapeModel(List1toUnbounded<ShapeModel> value):base(value){} public List1toUnbounded_ShapeModel(){} public List1toUnbounded_ShapeModel(params ShapeModel[] items):base(){foreach (ShapeModel e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230082,TableId:8,LayerId:41)] public partial class Set1toUnbounded_Shell     :Set1toUnbounded<Shell>{public Set1toUnbounded_Shell     (Set1toUnbounded<Shell> value):base(value){} public Set1toUnbounded_Shell     (){} public Set1toUnbounded_Shell     (params Shell[] items):base(){foreach (Shell e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230083,TableId:8,LayerId: 6)] public partial class List1to8_SoundValue       :List1to8<SoundValue>{public List1to8_SoundValue       (List1to8<SoundValue> value):base(value){} public List1to8_SoundValue       (){} public List1to8_SoundValue       (params SoundValue[] items):base(){foreach (SoundValue e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230084,TableId:8,LayerId:20)] public partial class Set1toUnbounded_StructuralLoadGroup:Set1toUnbounded<StructuralLoadGroup>{public Set1toUnbounded_StructuralLoadGroup(Set1toUnbounded<StructuralLoadGroup> value):base(value){} public Set1toUnbounded_StructuralLoadGroup(){} public Set1toUnbounded_StructuralLoadGroup(params StructuralLoadGroup[] items):base(){foreach (StructuralLoadGroup e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230085,TableId:8,LayerId:20)] public partial class Set1toUnbounded_StructuralResultGroup:Set1toUnbounded<StructuralResultGroup>{public Set1toUnbounded_StructuralResultGroup(Set1toUnbounded<StructuralResultGroup> value):base(value){} public Set1toUnbounded_StructuralResultGroup(){} public Set1toUnbounded_StructuralResultGroup(params StructuralResultGroup[] items):base(){foreach (StructuralResultGroup e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230086,TableId:8,LayerId:40)] public partial class List1toUnbounded_StructuralLoad:List1toUnbounded<StructuralLoad>{public List1toUnbounded_StructuralLoad(List1toUnbounded<StructuralLoad> value):base(value){} public List1toUnbounded_StructuralLoad(){} public List1toUnbounded_StructuralLoad(params StructuralLoad[] items):base(){foreach (StructuralLoad e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230087,TableId:8,LayerId:40)] public partial class List2toUnbounded_StructuralLoad:List2toUnbounded<StructuralLoad>{public List2toUnbounded_StructuralLoad(List2toUnbounded<StructuralLoad> value):base(value){} public List2toUnbounded_StructuralLoad(){} public List2toUnbounded_StructuralLoad(params StructuralLoad[] items):base(){foreach (StructuralLoad e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230088,TableId:8,LayerId:32)] public partial class List2toUnbounded_PositiveLengthMeasure:List2toUnbounded<PositiveLengthMeasure>{public List2toUnbounded_PositiveLengthMeasure(List2toUnbounded<PositiveLengthMeasure> value):base(value){} public List2toUnbounded_PositiveLengthMeasure(){} public List2toUnbounded_PositiveLengthMeasure(params PositiveLengthMeasure[] items):base(){foreach (PositiveLengthMeasure e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230089,TableId:8,LayerId:33)] public partial class Set1to5_SurfaceStyleElementSelect:Set1to5<SurfaceStyleElementSelect>{public Set1to5_SurfaceStyleElementSelect(Set1to5<SurfaceStyleElementSelect> value):base(value){} public Set1to5_SurfaceStyleElementSelect(){} public Set1to5_SurfaceStyleElementSelect(params SurfaceStyleElementSelect[] items):base(){foreach (SurfaceStyleElementSelect e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230090,TableId:8,LayerId:33)] public partial class List1toUnbounded_SurfaceTexture:List1toUnbounded<SurfaceTexture>{public List1toUnbounded_SurfaceTexture(List1toUnbounded<SurfaceTexture> value):base(value){} public List1toUnbounded_SurfaceTexture(){} public List1toUnbounded_SurfaceTexture(params SurfaceTexture[] items):base(){foreach (SurfaceTexture e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230091,TableId:8,LayerId:42)] public partial class List1toUnbounded_TableRow :List1toUnbounded<TableRow>{public List1toUnbounded_TableRow (List1toUnbounded<TableRow> value):base(value){} public List1toUnbounded_TableRow (){} public List1toUnbounded_TableRow (params TableRow[] items):base(){foreach (TableRow e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230092,TableId:8,LayerId:33)] public partial class List1toUnbounded_TextFontName:List1toUnbounded<TextFontName>{public List1toUnbounded_TextFontName(List1toUnbounded<TextFontName> value):base(value){} public List1toUnbounded_TextFontName(){} public List1toUnbounded_TextFontName(params TextFontName[] items):base(){foreach (TextFontName e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230093,TableId:8,LayerId:32)] public partial class List1toUnbounded_SimpleValue:List1toUnbounded<SimpleValue>{public List1toUnbounded_SimpleValue(List1toUnbounded<SimpleValue> value):base(value){} public List1toUnbounded_SimpleValue(){} public List1toUnbounded_SimpleValue(params SimpleValue[] items):base(){foreach (SimpleValue e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230094,TableId:8,LayerId:34)] public partial class Set1toUnbounded_VertexBasedTextureMap:Set1toUnbounded<VertexBasedTextureMap>{public Set1toUnbounded_VertexBasedTextureMap(Set1toUnbounded<VertexBasedTextureMap> value):base(value){} public Set1toUnbounded_VertexBasedTextureMap(){} public Set1toUnbounded_VertexBasedTextureMap(params VertexBasedTextureMap[] items):base(){foreach (VertexBasedTextureMap e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230095,TableId:8,LayerId:32)] public partial class List2to2_ParameterValue   :List2to2<ParameterValue>{public List2to2_ParameterValue   (List2to2<ParameterValue> value):base(value){} public List2to2_ParameterValue   (){} public List2to2_ParameterValue   (params ParameterValue[] items):base(){foreach (ParameterValue e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230096,TableId:8,LayerId:27)] public partial class Set1toUnbounded_DocumentSelect:Set1toUnbounded<DocumentSelect>{public Set1toUnbounded_DocumentSelect(Set1toUnbounded<DocumentSelect> value):base(value){} public Set1toUnbounded_DocumentSelect(){} public Set1toUnbounded_DocumentSelect(params DocumentSelect[] items):base(){foreach (DocumentSelect e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230097,TableId:8,LayerId:26)] public partial class List1toUnbounded_DateTimeSelect:List1toUnbounded<DateTimeSelect>{public List1toUnbounded_DateTimeSelect(List1toUnbounded<DateTimeSelect> value):base(value){} public List1toUnbounded_DateTimeSelect(){} public List1toUnbounded_DateTimeSelect(params DateTimeSelect[] items):base(){foreach (DateTimeSelect e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230098,TableId:8,LayerId:30)] public partial class Set1to2_TrimmingSelect    :Set1to2<TrimmingSelect>{public Set1to2_TrimmingSelect    (Set1to2<TrimmingSelect> value):base(value){} public Set1to2_TrimmingSelect    (){} public Set1to2_TrimmingSelect    (params TrimmingSelect[] items):base(){foreach (TrimmingSelect e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230099,TableId:8,LayerId:32)] public partial class Set1toUnbounded_Unit      :Set1toUnbounded<Unit>{public Set1toUnbounded_Unit      (Set1toUnbounded<Unit> value):base(value){} public Set1toUnbounded_Unit      (){} public Set1toUnbounded_Unit      (params Unit[] items):base(){foreach (Unit e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230100,TableId:8,LayerId:33)] public partial class List3toUnbounded_TextureVertex:List3toUnbounded<TextureVertex>{public List3toUnbounded_TextureVertex(List3toUnbounded<TextureVertex> value):base(value){} public List3toUnbounded_TextureVertex(){} public List3toUnbounded_TextureVertex(params TextureVertex[] items):base(){foreach (TextureVertex e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230101,TableId:8,LayerId:30)] public partial class List3toUnbounded_CartesianPoint:List3toUnbounded<CartesianPoint>{public List3toUnbounded_CartesianPoint(List3toUnbounded<CartesianPoint> value):base(value){} public List3toUnbounded_CartesianPoint(){} public List3toUnbounded_CartesianPoint(params CartesianPoint[] items):base(){foreach (CartesianPoint e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230102,TableId:8,LayerId:28)] public partial class List2to2Unique_GridAxis   :List2to2Unique<GridAxis>{public List2to2Unique_GridAxis   (List2to2Unique<GridAxis> value):base(value){} public List2to2Unique_GridAxis   (){} public List2to2Unique_GridAxis   (params GridAxis[] items):base(){foreach (GridAxis e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }
[ifcSql(TypeGroupId:1,TypeId:230103,TableId:8,LayerId:32)] public partial class List2to3_LengthMeasure    :List2to3<LengthMeasure>{public List2to3_LengthMeasure    (List2to3<LengthMeasure> value):base(value){} public List2to3_LengthMeasure    (){} public List2to3_LengthMeasure    (params LengthMeasure[] items):base(){foreach (LengthMeasure e in items)  this.Add(e);} new bool IsNull{get{return (this.Count==0);}set{if (value) this.Clear();}} }


//TYPES:
//documentation link see end of line
[ifcSql(TypeGroupId:3,TypeId:230001,TableId:7,LayerId:32)] public partial class Label                     :TYPE<string>    {public Label                     (string     value):base(value){}   public Label                     (){} public static implicit operator Label                     (string     value){return new Label                     { IsNull=false, TypeValue = value };}public static implicit operator string    (Label                      value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifclabel.htm
[ifcSql(TypeGroupId:3,TypeId:230004,TableId:5,LayerId:32)] public partial class RatioMeasure              :TYPE<double>    {public RatioMeasure              (double     value):base(value){}   public RatioMeasure              (){} public static implicit operator RatioMeasure              (double     value){return new RatioMeasure              { IsNull=false, TypeValue = value };}public static implicit operator double    (RatioMeasure               value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcratiomeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230005,TableId:5,LayerId:32)] public partial class LengthMeasure             :TYPE<double>    {public LengthMeasure             (double     value):base(value){}   public LengthMeasure             (){} public static implicit operator LengthMeasure             (double     value){return new LengthMeasure             { IsNull=false, TypeValue = value };}public static implicit operator double    (LengthMeasure              value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifclengthmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230006,TableId:5,LayerId:32)] public partial class PlaneAngleMeasure         :TYPE<double>    {public PlaneAngleMeasure         (double     value):base(value){}   public PlaneAngleMeasure         (){} public static implicit operator PlaneAngleMeasure         (double     value){return new PlaneAngleMeasure         { IsNull=false, TypeValue = value };}public static implicit operator double    (PlaneAngleMeasure          value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcplaneanglemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230104,TableId:5,LayerId:32)] public partial class AbsorbedDoseMeasure       :TYPE<double>    {public AbsorbedDoseMeasure       (double     value):base(value){}   public AbsorbedDoseMeasure       (){} public static implicit operator AbsorbedDoseMeasure       (double     value){return new AbsorbedDoseMeasure       { IsNull=false, TypeValue = value };}public static implicit operator double    (AbsorbedDoseMeasure        value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcabsorbeddosemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230105,TableId:5,LayerId:32)] public partial class AccelerationMeasure       :TYPE<double>    {public AccelerationMeasure       (double     value):base(value){}   public AccelerationMeasure       (){} public static implicit operator AccelerationMeasure       (double     value){return new AccelerationMeasure       { IsNull=false, TypeValue = value };}public static implicit operator double    (AccelerationMeasure        value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcaccelerationmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230106,TableId:5,LayerId:32)] public partial class AmountOfSubstanceMeasure  :TYPE<double>    {public AmountOfSubstanceMeasure  (double     value):base(value){}   public AmountOfSubstanceMeasure  (){} public static implicit operator AmountOfSubstanceMeasure  (double     value){return new AmountOfSubstanceMeasure  { IsNull=false, TypeValue = value };}public static implicit operator double    (AmountOfSubstanceMeasure   value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcamountofsubstancemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230107,TableId:5,LayerId:32)] public partial class AngularVelocityMeasure    :TYPE<double>    {public AngularVelocityMeasure    (double     value):base(value){}   public AngularVelocityMeasure    (){} public static implicit operator AngularVelocityMeasure    (double     value){return new AngularVelocityMeasure    { IsNull=false, TypeValue = value };}public static implicit operator double    (AngularVelocityMeasure     value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcangularvelocitymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230108,TableId:5,LayerId:32)] public partial class AreaMeasure               :TYPE<double>    {public AreaMeasure               (double     value):base(value){}   public AreaMeasure               (){} public static implicit operator AreaMeasure               (double     value){return new AreaMeasure               { IsNull=false, TypeValue = value };}public static implicit operator double    (AreaMeasure                value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcareameasure.htm
[ifcSql(TypeGroupId:3,TypeId:230109,TableId:2,LayerId:32)] public partial class Boolean                   :TYPE<bool>      {public Boolean                   (bool       value):base(value){}   public Boolean                   (){} public static implicit operator Boolean                   (bool       value){return new Boolean                   { IsNull=false, TypeValue = value };}public static implicit operator bool      (Boolean                    value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcboolean.htm
[ifcSql(TypeGroupId:3,TypeId:230110,TableId:7,LayerId:34)] public partial class BoxAlignment              :TYPE<string>    {public BoxAlignment              (string     value):base(value){}   public BoxAlignment              (){} public static implicit operator BoxAlignment              (string     value){return new BoxAlignment              { IsNull=false, TypeValue = value };}public static implicit operator string    (BoxAlignment               value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcboxalignment.htm
[ifcSql(TypeGroupId:3,TypeId:230111,TableId:8,LayerId:32)] public partial class ComplexNumber             :TYPE<Array1to2<double>>{public ComplexNumber             (Array1to2<double> value):base(value){}   public ComplexNumber             (){} public static implicit operator ComplexNumber             (Array1to2<double> value){return new ComplexNumber             { IsNull=false, TypeValue = value };}public static implicit operator Array1to2<double>(ComplexNumber              value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifccomplexnumber.htm
[ifcSql(TypeGroupId:3,TypeId:230112,TableId:8,LayerId:32)] public partial class CompoundPlaneAngleMeasure :TYPE<List3to4<int>>{public CompoundPlaneAngleMeasure (List3to4<int> value):base(value){}   public CompoundPlaneAngleMeasure (){} public static implicit operator CompoundPlaneAngleMeasure (List3to4<int> value){return new CompoundPlaneAngleMeasure { IsNull=false, TypeValue = value };}public static implicit operator List3to4<int>(CompoundPlaneAngleMeasure  value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifccompoundplaneanglemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230113,TableId:5,LayerId:32)] public partial class ContextDependentMeasure   :TYPE<double>    {public ContextDependentMeasure   (double     value):base(value){}   public ContextDependentMeasure   (){} public static implicit operator ContextDependentMeasure   (double     value){return new ContextDependentMeasure   { IsNull=false, TypeValue = value };}public static implicit operator double    (ContextDependentMeasure    value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifccontextdependentmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230114,TableId:5,LayerId:32)] public partial class CountMeasure              :TYPE<double>    {public CountMeasure              (double     value):base(value){}   public CountMeasure              (){} public static implicit operator CountMeasure              (double     value){return new CountMeasure              { IsNull=false, TypeValue = value };}public static implicit operator double    (CountMeasure               value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifccountmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230115,TableId:5,LayerId:32)] public partial class CurvatureMeasure          :TYPE<double>    {public CurvatureMeasure          (double     value):base(value){}   public CurvatureMeasure          (){} public static implicit operator CurvatureMeasure          (double     value){return new CurvatureMeasure          { IsNull=false, TypeValue = value };}public static implicit operator double    (CurvatureMeasure           value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifccurvaturemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230116,TableId:6,LayerId:26)] public partial class DayInMonthNumber          :TYPE<int>       {public DayInMonthNumber          (int        value):base(value){}   public DayInMonthNumber          (){} public static implicit operator DayInMonthNumber          (int        value){return new DayInMonthNumber          { IsNull=false, TypeValue = value };}public static implicit operator int       (DayInMonthNumber           value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcdayinmonthnumber.htm
[ifcSql(TypeGroupId:3,TypeId:230117,TableId:6,LayerId:26)] public partial class DaylightSavingHour        :TYPE<int>       {public DaylightSavingHour        (int        value):base(value){}   public DaylightSavingHour        (){} public static implicit operator DaylightSavingHour        (int        value){return new DaylightSavingHour        { IsNull=false, TypeValue = value };}public static implicit operator int       (DaylightSavingHour         value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcdaylightsavinghour.htm
[ifcSql(TypeGroupId:3,TypeId:230118,TableId:7,LayerId:32)] public partial class DescriptiveMeasure        :TYPE<string>    {public DescriptiveMeasure        (string     value):base(value){}   public DescriptiveMeasure        (){} public static implicit operator DescriptiveMeasure        (string     value){return new DescriptiveMeasure        { IsNull=false, TypeValue = value };}public static implicit operator string    (DescriptiveMeasure         value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcdescriptivemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230119,TableId:6,LayerId:30)] public partial class DimensionCount            :TYPE<int>       {public DimensionCount            (int        value):base(value){}   public DimensionCount            (){} public static implicit operator DimensionCount            (int        value){return new DimensionCount            { IsNull=false, TypeValue = value };}public static implicit operator int       (DimensionCount             value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcdimensioncount.htm
[ifcSql(TypeGroupId:3,TypeId:230120,TableId:5,LayerId:32)] public partial class DoseEquivalentMeasure     :TYPE<double>    {public DoseEquivalentMeasure     (double     value):base(value){}   public DoseEquivalentMeasure     (){} public static implicit operator DoseEquivalentMeasure     (double     value){return new DoseEquivalentMeasure     { IsNull=false, TypeValue = value };}public static implicit operator double    (DoseEquivalentMeasure      value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcdoseequivalentmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230121,TableId:5,LayerId:32)] public partial class DynamicViscosityMeasure   :TYPE<double>    {public DynamicViscosityMeasure   (double     value):base(value){}   public DynamicViscosityMeasure   (){} public static implicit operator DynamicViscosityMeasure   (double     value){return new DynamicViscosityMeasure   { IsNull=false, TypeValue = value };}public static implicit operator double    (DynamicViscosityMeasure    value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcdynamicviscositymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230122,TableId:5,LayerId:32)] public partial class ElectricCapacitanceMeasure:TYPE<double>    {public ElectricCapacitanceMeasure(double     value):base(value){}   public ElectricCapacitanceMeasure(){} public static implicit operator ElectricCapacitanceMeasure(double     value){return new ElectricCapacitanceMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (ElectricCapacitanceMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcelectriccapacitancemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230123,TableId:5,LayerId:32)] public partial class ElectricChargeMeasure     :TYPE<double>    {public ElectricChargeMeasure     (double     value):base(value){}   public ElectricChargeMeasure     (){} public static implicit operator ElectricChargeMeasure     (double     value){return new ElectricChargeMeasure     { IsNull=false, TypeValue = value };}public static implicit operator double    (ElectricChargeMeasure      value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcelectricchargemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230124,TableId:5,LayerId:32)] public partial class ElectricConductanceMeasure:TYPE<double>    {public ElectricConductanceMeasure(double     value):base(value){}   public ElectricConductanceMeasure(){} public static implicit operator ElectricConductanceMeasure(double     value){return new ElectricConductanceMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (ElectricConductanceMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcelectricconductancemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230125,TableId:5,LayerId:32)] public partial class ElectricCurrentMeasure    :TYPE<double>    {public ElectricCurrentMeasure    (double     value):base(value){}   public ElectricCurrentMeasure    (){} public static implicit operator ElectricCurrentMeasure    (double     value){return new ElectricCurrentMeasure    { IsNull=false, TypeValue = value };}public static implicit operator double    (ElectricCurrentMeasure     value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcelectriccurrentmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230126,TableId:5,LayerId:32)] public partial class ElectricResistanceMeasure :TYPE<double>    {public ElectricResistanceMeasure (double     value):base(value){}   public ElectricResistanceMeasure (){} public static implicit operator ElectricResistanceMeasure (double     value){return new ElectricResistanceMeasure { IsNull=false, TypeValue = value };}public static implicit operator double    (ElectricResistanceMeasure  value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcelectricresistancemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230127,TableId:5,LayerId:32)] public partial class ElectricVoltageMeasure    :TYPE<double>    {public ElectricVoltageMeasure    (double     value):base(value){}   public ElectricVoltageMeasure    (){} public static implicit operator ElectricVoltageMeasure    (double     value){return new ElectricVoltageMeasure    { IsNull=false, TypeValue = value };}public static implicit operator double    (ElectricVoltageMeasure     value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcelectricvoltagemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230128,TableId:5,LayerId:32)] public partial class EnergyMeasure             :TYPE<double>    {public EnergyMeasure             (double     value):base(value){}   public EnergyMeasure             (){} public static implicit operator EnergyMeasure             (double     value){return new EnergyMeasure             { IsNull=false, TypeValue = value };}public static implicit operator double    (EnergyMeasure              value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcenergymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230129,TableId:7,LayerId:33)] public partial class FontStyle                 :TYPE<string>    {public FontStyle                 (string     value):base(value){}   public FontStyle                 (){} public static implicit operator FontStyle                 (string     value){return new FontStyle                 { IsNull=false, TypeValue = value };}public static implicit operator string    (FontStyle                  value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcfontstyle.htm
[ifcSql(TypeGroupId:3,TypeId:230130,TableId:7,LayerId:33)] public partial class FontVariant               :TYPE<string>    {public FontVariant               (string     value):base(value){}   public FontVariant               (){} public static implicit operator FontVariant               (string     value){return new FontVariant               { IsNull=false, TypeValue = value };}public static implicit operator string    (FontVariant                value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcfontvariant.htm
[ifcSql(TypeGroupId:3,TypeId:230131,TableId:7,LayerId:33)] public partial class FontWeight                :TYPE<string>    {public FontWeight                (string     value):base(value){}   public FontWeight                (){} public static implicit operator FontWeight                (string     value){return new FontWeight                { IsNull=false, TypeValue = value };}public static implicit operator string    (FontWeight                 value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcfontweight.htm
[ifcSql(TypeGroupId:3,TypeId:230132,TableId:5,LayerId:32)] public partial class ForceMeasure              :TYPE<double>    {public ForceMeasure              (double     value):base(value){}   public ForceMeasure              (){} public static implicit operator ForceMeasure              (double     value){return new ForceMeasure              { IsNull=false, TypeValue = value };}public static implicit operator double    (ForceMeasure               value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcforcemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230133,TableId:5,LayerId:32)] public partial class FrequencyMeasure          :TYPE<double>    {public FrequencyMeasure          (double     value):base(value){}   public FrequencyMeasure          (){} public static implicit operator FrequencyMeasure          (double     value){return new FrequencyMeasure          { IsNull=false, TypeValue = value };}public static implicit operator double    (FrequencyMeasure           value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcfrequencymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230134,TableId:7,LayerId:42)] public partial class GloballyUniqueId          :TYPE<string>    {public GloballyUniqueId          (string     value):base(value){}   public GloballyUniqueId          (){} public static implicit operator GloballyUniqueId          (string     value){return new GloballyUniqueId          { IsNull=false, TypeValue = value };}public static implicit operator string    (GloballyUniqueId           value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcgloballyuniqueid.htm
[ifcSql(TypeGroupId:3,TypeId:230135,TableId:5,LayerId:32)] public partial class HeatFluxDensityMeasure    :TYPE<double>    {public HeatFluxDensityMeasure    (double     value):base(value){}   public HeatFluxDensityMeasure    (){} public static implicit operator HeatFluxDensityMeasure    (double     value){return new HeatFluxDensityMeasure    { IsNull=false, TypeValue = value };}public static implicit operator double    (HeatFluxDensityMeasure     value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcheatfluxdensitymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230136,TableId:5,LayerId:32)] public partial class HeatingValueMeasure       :TYPE<double>    {public HeatingValueMeasure       (double     value):base(value){}   public HeatingValueMeasure       (){} public static implicit operator HeatingValueMeasure       (double     value){return new HeatingValueMeasure       { IsNull=false, TypeValue = value };}public static implicit operator double    (HeatingValueMeasure        value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcheatingvaluemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230137,TableId:6,LayerId:26)] public partial class HourInDay                 :TYPE<int>       {public HourInDay                 (int        value):base(value){}   public HourInDay                 (){} public static implicit operator HourInDay                 (int        value){return new HourInDay                 { IsNull=false, TypeValue = value };}public static implicit operator int       (HourInDay                  value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifchourinday.htm
[ifcSql(TypeGroupId:3,TypeId:230138,TableId:7,LayerId:32)] public partial class Identifier                :TYPE<string>    {public Identifier                (string     value):base(value){}   public Identifier                (){} public static implicit operator Identifier                (string     value){return new Identifier                { IsNull=false, TypeValue = value };}public static implicit operator string    (Identifier                 value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcidentifier.htm
[ifcSql(TypeGroupId:3,TypeId:230139,TableId:5,LayerId:32)] public partial class IlluminanceMeasure        :TYPE<double>    {public IlluminanceMeasure        (double     value):base(value){}   public IlluminanceMeasure        (){} public static implicit operator IlluminanceMeasure        (double     value){return new IlluminanceMeasure        { IsNull=false, TypeValue = value };}public static implicit operator double    (IlluminanceMeasure         value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcilluminancemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230140,TableId:5,LayerId:32)] public partial class InductanceMeasure         :TYPE<double>    {public InductanceMeasure         (double     value):base(value){}   public InductanceMeasure         (){} public static implicit operator InductanceMeasure         (double     value){return new InductanceMeasure         { IsNull=false, TypeValue = value };}public static implicit operator double    (InductanceMeasure          value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcinductancemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230141,TableId:6,LayerId:32)] public partial class Integer                   :TYPE<int>       {public Integer                   (int        value):base(value){}   public Integer                   (){} public static implicit operator Integer                   (int        value){return new Integer                   { IsNull=false, TypeValue = value };}public static implicit operator int       (Integer                    value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcinteger.htm
[ifcSql(TypeGroupId:3,TypeId:230142,TableId:6,LayerId:32)] public partial class IntegerCountRateMeasure   :TYPE<int>       {public IntegerCountRateMeasure   (int        value):base(value){}   public IntegerCountRateMeasure   (){} public static implicit operator IntegerCountRateMeasure   (int        value){return new IntegerCountRateMeasure   { IsNull=false, TypeValue = value };}public static implicit operator int       (IntegerCountRateMeasure    value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcintegercountratemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230143,TableId:5,LayerId:32)] public partial class IonConcentrationMeasure   :TYPE<double>    {public IonConcentrationMeasure   (double     value):base(value){}   public IonConcentrationMeasure   (){} public static implicit operator IonConcentrationMeasure   (double     value){return new IonConcentrationMeasure   { IsNull=false, TypeValue = value };}public static implicit operator double    (IonConcentrationMeasure    value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcionconcentrationmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230144,TableId:5,LayerId:32)] public partial class IsothermalMoistureCapacityMeasure:TYPE<double>    {public IsothermalMoistureCapacityMeasure(double     value):base(value){}   public IsothermalMoistureCapacityMeasure(){} public static implicit operator IsothermalMoistureCapacityMeasure(double     value){return new IsothermalMoistureCapacityMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (IsothermalMoistureCapacityMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcisothermalmoisturecapacitymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230145,TableId:5,LayerId:32)] public partial class KinematicViscosityMeasure :TYPE<double>    {public KinematicViscosityMeasure (double     value):base(value){}   public KinematicViscosityMeasure (){} public static implicit operator KinematicViscosityMeasure (double     value){return new KinematicViscosityMeasure { IsNull=false, TypeValue = value };}public static implicit operator double    (KinematicViscosityMeasure  value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifckinematicviscositymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230146,TableId:5,LayerId:32)] public partial class LinearForceMeasure        :TYPE<double>    {public LinearForceMeasure        (double     value):base(value){}   public LinearForceMeasure        (){} public static implicit operator LinearForceMeasure        (double     value){return new LinearForceMeasure        { IsNull=false, TypeValue = value };}public static implicit operator double    (LinearForceMeasure         value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifclinearforcemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230147,TableId:5,LayerId:32)] public partial class LinearMomentMeasure       :TYPE<double>    {public LinearMomentMeasure       (double     value):base(value){}   public LinearMomentMeasure       (){} public static implicit operator LinearMomentMeasure       (double     value){return new LinearMomentMeasure       { IsNull=false, TypeValue = value };}public static implicit operator double    (LinearMomentMeasure        value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifclinearmomentmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230148,TableId:5,LayerId:32)] public partial class LinearStiffnessMeasure    :TYPE<double>    {public LinearStiffnessMeasure    (double     value):base(value){}   public LinearStiffnessMeasure    (){} public static implicit operator LinearStiffnessMeasure    (double     value){return new LinearStiffnessMeasure    { IsNull=false, TypeValue = value };}public static implicit operator double    (LinearStiffnessMeasure     value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifclinearstiffnessmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230149,TableId:5,LayerId:32)] public partial class LinearVelocityMeasure     :TYPE<double>    {public LinearVelocityMeasure     (double     value):base(value){}   public LinearVelocityMeasure     (){} public static implicit operator LinearVelocityMeasure     (double     value){return new LinearVelocityMeasure     { IsNull=false, TypeValue = value };}public static implicit operator double    (LinearVelocityMeasure      value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifclinearvelocitymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230150,TableId:2,LayerId:32)] public partial class Logical                   :TYPE<bool>      {public Logical                   (bool       value):base(value){}   public Logical                   (){} public static implicit operator Logical                   (bool       value){return new Logical                   { IsNull=false, TypeValue = value };}public static implicit operator bool      (Logical                    value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifclogical.htm
[ifcSql(TypeGroupId:3,TypeId:230151,TableId:5,LayerId:32)] public partial class LuminousFluxMeasure       :TYPE<double>    {public LuminousFluxMeasure       (double     value):base(value){}   public LuminousFluxMeasure       (){} public static implicit operator LuminousFluxMeasure       (double     value){return new LuminousFluxMeasure       { IsNull=false, TypeValue = value };}public static implicit operator double    (LuminousFluxMeasure        value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcluminousfluxmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230152,TableId:5,LayerId:32)] public partial class LuminousIntensityDistributionMeasure:TYPE<double>    {public LuminousIntensityDistributionMeasure(double     value):base(value){}   public LuminousIntensityDistributionMeasure(){} public static implicit operator LuminousIntensityDistributionMeasure(double     value){return new LuminousIntensityDistributionMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (LuminousIntensityDistributionMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcluminousintensitydistributionmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230153,TableId:5,LayerId:32)] public partial class LuminousIntensityMeasure  :TYPE<double>    {public LuminousIntensityMeasure  (double     value):base(value){}   public LuminousIntensityMeasure  (){} public static implicit operator LuminousIntensityMeasure  (double     value){return new LuminousIntensityMeasure  { IsNull=false, TypeValue = value };}public static implicit operator double    (LuminousIntensityMeasure   value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcluminousintensitymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230154,TableId:5,LayerId:32)] public partial class MagneticFluxDensityMeasure:TYPE<double>    {public MagneticFluxDensityMeasure(double     value):base(value){}   public MagneticFluxDensityMeasure(){} public static implicit operator MagneticFluxDensityMeasure(double     value){return new MagneticFluxDensityMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (MagneticFluxDensityMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcmagneticfluxdensitymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230155,TableId:5,LayerId:32)] public partial class MagneticFluxMeasure       :TYPE<double>    {public MagneticFluxMeasure       (double     value):base(value){}   public MagneticFluxMeasure       (){} public static implicit operator MagneticFluxMeasure       (double     value){return new MagneticFluxMeasure       { IsNull=false, TypeValue = value };}public static implicit operator double    (MagneticFluxMeasure        value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcmagneticfluxmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230156,TableId:5,LayerId:32)] public partial class MassDensityMeasure        :TYPE<double>    {public MassDensityMeasure        (double     value):base(value){}   public MassDensityMeasure        (){} public static implicit operator MassDensityMeasure        (double     value){return new MassDensityMeasure        { IsNull=false, TypeValue = value };}public static implicit operator double    (MassDensityMeasure         value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcmassdensitymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230157,TableId:5,LayerId:32)] public partial class MassFlowRateMeasure       :TYPE<double>    {public MassFlowRateMeasure       (double     value):base(value){}   public MassFlowRateMeasure       (){} public static implicit operator MassFlowRateMeasure       (double     value){return new MassFlowRateMeasure       { IsNull=false, TypeValue = value };}public static implicit operator double    (MassFlowRateMeasure        value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcmassflowratemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230158,TableId:5,LayerId:32)] public partial class MassMeasure               :TYPE<double>    {public MassMeasure               (double     value):base(value){}   public MassMeasure               (){} public static implicit operator MassMeasure               (double     value){return new MassMeasure               { IsNull=false, TypeValue = value };}public static implicit operator double    (MassMeasure                value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcmassmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230159,TableId:5,LayerId:32)] public partial class MassPerLengthMeasure      :TYPE<double>    {public MassPerLengthMeasure      (double     value):base(value){}   public MassPerLengthMeasure      (){} public static implicit operator MassPerLengthMeasure      (double     value){return new MassPerLengthMeasure      { IsNull=false, TypeValue = value };}public static implicit operator double    (MassPerLengthMeasure       value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcmassperlengthmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230160,TableId:6,LayerId:26)] public partial class MinuteInHour              :TYPE<int>       {public MinuteInHour              (int        value):base(value){}   public MinuteInHour              (){} public static implicit operator MinuteInHour              (int        value){return new MinuteInHour              { IsNull=false, TypeValue = value };}public static implicit operator int       (MinuteInHour               value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcminuteinhour.htm
[ifcSql(TypeGroupId:3,TypeId:230161,TableId:5,LayerId:32)] public partial class ModulusOfElasticityMeasure:TYPE<double>    {public ModulusOfElasticityMeasure(double     value):base(value){}   public ModulusOfElasticityMeasure(){} public static implicit operator ModulusOfElasticityMeasure(double     value){return new ModulusOfElasticityMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (ModulusOfElasticityMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcmodulusofelasticitymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230162,TableId:5,LayerId:32)] public partial class ModulusOfLinearSubgradeReactionMeasure:TYPE<double>    {public ModulusOfLinearSubgradeReactionMeasure(double     value):base(value){}   public ModulusOfLinearSubgradeReactionMeasure(){} public static implicit operator ModulusOfLinearSubgradeReactionMeasure(double     value){return new ModulusOfLinearSubgradeReactionMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (ModulusOfLinearSubgradeReactionMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcmodulusoflinearsubgradereactionmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230163,TableId:5,LayerId:32)] public partial class ModulusOfRotationalSubgradeReactionMeasure:TYPE<double>    {public ModulusOfRotationalSubgradeReactionMeasure(double     value):base(value){}   public ModulusOfRotationalSubgradeReactionMeasure(){} public static implicit operator ModulusOfRotationalSubgradeReactionMeasure(double     value){return new ModulusOfRotationalSubgradeReactionMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (ModulusOfRotationalSubgradeReactionMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcmodulusofrotationalsubgradereactionmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230164,TableId:5,LayerId:32)] public partial class ModulusOfSubgradeReactionMeasure:TYPE<double>    {public ModulusOfSubgradeReactionMeasure(double     value):base(value){}   public ModulusOfSubgradeReactionMeasure(){} public static implicit operator ModulusOfSubgradeReactionMeasure(double     value){return new ModulusOfSubgradeReactionMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (ModulusOfSubgradeReactionMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcmodulusofsubgradereactionmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230165,TableId:5,LayerId:32)] public partial class MoistureDiffusivityMeasure:TYPE<double>    {public MoistureDiffusivityMeasure(double     value):base(value){}   public MoistureDiffusivityMeasure(){} public static implicit operator MoistureDiffusivityMeasure(double     value){return new MoistureDiffusivityMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (MoistureDiffusivityMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcmoisturediffusivitymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230166,TableId:5,LayerId:32)] public partial class MolecularWeightMeasure    :TYPE<double>    {public MolecularWeightMeasure    (double     value):base(value){}   public MolecularWeightMeasure    (){} public static implicit operator MolecularWeightMeasure    (double     value){return new MolecularWeightMeasure    { IsNull=false, TypeValue = value };}public static implicit operator double    (MolecularWeightMeasure     value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcmolecularweightmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230167,TableId:5,LayerId:32)] public partial class MomentOfInertiaMeasure    :TYPE<double>    {public MomentOfInertiaMeasure    (double     value):base(value){}   public MomentOfInertiaMeasure    (){} public static implicit operator MomentOfInertiaMeasure    (double     value){return new MomentOfInertiaMeasure    { IsNull=false, TypeValue = value };}public static implicit operator double    (MomentOfInertiaMeasure     value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcmomentofinertiameasure.htm
[ifcSql(TypeGroupId:3,TypeId:230168,TableId:5,LayerId:32)] public partial class MonetaryMeasure           :TYPE<double>    {public MonetaryMeasure           (double     value):base(value){}   public MonetaryMeasure           (){} public static implicit operator MonetaryMeasure           (double     value){return new MonetaryMeasure           { IsNull=false, TypeValue = value };}public static implicit operator double    (MonetaryMeasure            value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcmonetarymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230169,TableId:6,LayerId:26)] public partial class MonthInYearNumber         :TYPE<int>       {public MonthInYearNumber         (int        value):base(value){}   public MonthInYearNumber         (){} public static implicit operator MonthInYearNumber         (int        value){return new MonthInYearNumber         { IsNull=false, TypeValue = value };}public static implicit operator int       (MonthInYearNumber          value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcmonthinyearnumber.htm
[ifcSql(TypeGroupId:3,TypeId:230170,TableId:5,LayerId:32)] public partial class NormalisedRatioMeasure    :TYPE<double>    {public NormalisedRatioMeasure    (double     value):base(value){}   public NormalisedRatioMeasure    (){} public static implicit operator NormalisedRatioMeasure    (double     value){return new NormalisedRatioMeasure    { IsNull=false, TypeValue = value };}public static implicit operator double    (NormalisedRatioMeasure     value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcnormalisedratiomeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230171,TableId:5,LayerId:32)] public partial class NumericMeasure            :TYPE<double>    {public NumericMeasure            (double     value):base(value){}   public NumericMeasure            (){} public static implicit operator NumericMeasure            (double     value){return new NumericMeasure            { IsNull=false, TypeValue = value };}public static implicit operator double    (NumericMeasure             value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcnumericmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230172,TableId:5,LayerId:32)] public partial class PHMeasure                 :TYPE<double>    {public PHMeasure                 (double     value):base(value){}   public PHMeasure                 (){} public static implicit operator PHMeasure                 (double     value){return new PHMeasure                 { IsNull=false, TypeValue = value };}public static implicit operator double    (PHMeasure                  value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcphmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230173,TableId:5,LayerId:32)] public partial class ParameterValue            :TYPE<double>    {public ParameterValue            (double     value):base(value){}   public ParameterValue            (){} public static implicit operator ParameterValue            (double     value){return new ParameterValue            { IsNull=false, TypeValue = value };}public static implicit operator double    (ParameterValue             value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcparametervalue.htm
[ifcSql(TypeGroupId:3,TypeId:230174,TableId:5,LayerId:32)] public partial class PlanarForceMeasure        :TYPE<double>    {public PlanarForceMeasure        (double     value):base(value){}   public PlanarForceMeasure        (){} public static implicit operator PlanarForceMeasure        (double     value){return new PlanarForceMeasure        { IsNull=false, TypeValue = value };}public static implicit operator double    (PlanarForceMeasure         value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcplanarforcemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230175,TableId:5,LayerId:32)] public partial class PositiveLengthMeasure     :TYPE<double>    {public PositiveLengthMeasure     (double     value):base(value){}   public PositiveLengthMeasure     (){} public static implicit operator PositiveLengthMeasure     (double     value){return new PositiveLengthMeasure     { IsNull=false, TypeValue = value };}public static implicit operator double    (PositiveLengthMeasure      value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcpositivelengthmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230176,TableId:5,LayerId:32)] public partial class PositivePlaneAngleMeasure :TYPE<double>    {public PositivePlaneAngleMeasure (double     value):base(value){}   public PositivePlaneAngleMeasure (){} public static implicit operator PositivePlaneAngleMeasure (double     value){return new PositivePlaneAngleMeasure { IsNull=false, TypeValue = value };}public static implicit operator double    (PositivePlaneAngleMeasure  value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcpositiveplaneanglemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230177,TableId:5,LayerId:32)] public partial class PositiveRatioMeasure      :TYPE<double>    {public PositiveRatioMeasure      (double     value):base(value){}   public PositiveRatioMeasure      (){} public static implicit operator PositiveRatioMeasure      (double     value){return new PositiveRatioMeasure      { IsNull=false, TypeValue = value };}public static implicit operator double    (PositiveRatioMeasure       value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcpositiveratiomeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230178,TableId:5,LayerId:32)] public partial class PowerMeasure              :TYPE<double>    {public PowerMeasure              (double     value):base(value){}   public PowerMeasure              (){} public static implicit operator PowerMeasure              (double     value){return new PowerMeasure              { IsNull=false, TypeValue = value };}public static implicit operator double    (PowerMeasure               value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcpowermeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230179,TableId:7,LayerId:33)] public partial class PresentableText           :TYPE<string>    {public PresentableText           (string     value):base(value){}   public PresentableText           (){} public static implicit operator PresentableText           (string     value){return new PresentableText           { IsNull=false, TypeValue = value };}public static implicit operator string    (PresentableText            value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcpresentabletext.htm
[ifcSql(TypeGroupId:3,TypeId:230180,TableId:5,LayerId:32)] public partial class PressureMeasure           :TYPE<double>    {public PressureMeasure           (double     value):base(value){}   public PressureMeasure           (){} public static implicit operator PressureMeasure           (double     value){return new PressureMeasure           { IsNull=false, TypeValue = value };}public static implicit operator double    (PressureMeasure            value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcpressuremeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230181,TableId:5,LayerId:32)] public partial class RadioActivityMeasure      :TYPE<double>    {public RadioActivityMeasure      (double     value):base(value){}   public RadioActivityMeasure      (){} public static implicit operator RadioActivityMeasure      (double     value){return new RadioActivityMeasure      { IsNull=false, TypeValue = value };}public static implicit operator double    (RadioActivityMeasure       value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcradioactivitymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230182,TableId:5,LayerId:32)] public partial class Real                      :TYPE<double>    {public Real                      (double     value):base(value){}   public Real                      (){} public static implicit operator Real                      (double     value){return new Real                      { IsNull=false, TypeValue = value };}public static implicit operator double    (Real                       value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcreal.htm
[ifcSql(TypeGroupId:3,TypeId:230183,TableId:5,LayerId:32)] public partial class RotationalFrequencyMeasure:TYPE<double>    {public RotationalFrequencyMeasure(double     value):base(value){}   public RotationalFrequencyMeasure(){} public static implicit operator RotationalFrequencyMeasure(double     value){return new RotationalFrequencyMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (RotationalFrequencyMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcrotationalfrequencymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230184,TableId:5,LayerId:32)] public partial class RotationalMassMeasure     :TYPE<double>    {public RotationalMassMeasure     (double     value):base(value){}   public RotationalMassMeasure     (){} public static implicit operator RotationalMassMeasure     (double     value){return new RotationalMassMeasure     { IsNull=false, TypeValue = value };}public static implicit operator double    (RotationalMassMeasure      value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcrotationalmassmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230185,TableId:5,LayerId:32)] public partial class RotationalStiffnessMeasure:TYPE<double>    {public RotationalStiffnessMeasure(double     value):base(value){}   public RotationalStiffnessMeasure(){} public static implicit operator RotationalStiffnessMeasure(double     value){return new RotationalStiffnessMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (RotationalStiffnessMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcrotationalstiffnessmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230186,TableId:5,LayerId:32)] public partial class SecondInMinute            :TYPE<double>    {public SecondInMinute            (double     value):base(value){}   public SecondInMinute            (){} public static implicit operator SecondInMinute            (double     value){return new SecondInMinute            { IsNull=false, TypeValue = value };}public static implicit operator double    (SecondInMinute             value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcsecondinminute.htm
[ifcSql(TypeGroupId:3,TypeId:230187,TableId:5,LayerId:32)] public partial class SectionModulusMeasure     :TYPE<double>    {public SectionModulusMeasure     (double     value):base(value){}   public SectionModulusMeasure     (){} public static implicit operator SectionModulusMeasure     (double     value){return new SectionModulusMeasure     { IsNull=false, TypeValue = value };}public static implicit operator double    (SectionModulusMeasure      value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcsectionmodulusmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230188,TableId:5,LayerId:32)] public partial class SectionalAreaIntegralMeasure:TYPE<double>    {public SectionalAreaIntegralMeasure(double     value):base(value){}   public SectionalAreaIntegralMeasure(){} public static implicit operator SectionalAreaIntegralMeasure(double     value){return new SectionalAreaIntegralMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (SectionalAreaIntegralMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcsectionalareaintegralmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230189,TableId:5,LayerId:32)] public partial class ShearModulusMeasure       :TYPE<double>    {public ShearModulusMeasure       (double     value):base(value){}   public ShearModulusMeasure       (){} public static implicit operator ShearModulusMeasure       (double     value){return new ShearModulusMeasure       { IsNull=false, TypeValue = value };}public static implicit operator double    (ShearModulusMeasure        value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcshearmodulusmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230190,TableId:5,LayerId:32)] public partial class SolidAngleMeasure         :TYPE<double>    {public SolidAngleMeasure         (double     value):base(value){}   public SolidAngleMeasure         (){} public static implicit operator SolidAngleMeasure         (double     value){return new SolidAngleMeasure         { IsNull=false, TypeValue = value };}public static implicit operator double    (SolidAngleMeasure          value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcsolidanglemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230191,TableId:5,LayerId:32)] public partial class SoundPowerMeasure         :TYPE<double>    {public SoundPowerMeasure         (double     value):base(value){}   public SoundPowerMeasure         (){} public static implicit operator SoundPowerMeasure         (double     value){return new SoundPowerMeasure         { IsNull=false, TypeValue = value };}public static implicit operator double    (SoundPowerMeasure          value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcsoundpowermeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230192,TableId:5,LayerId:32)] public partial class SoundPressureMeasure      :TYPE<double>    {public SoundPressureMeasure      (double     value):base(value){}   public SoundPressureMeasure      (){} public static implicit operator SoundPressureMeasure      (double     value){return new SoundPressureMeasure      { IsNull=false, TypeValue = value };}public static implicit operator double    (SoundPressureMeasure       value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcsoundpressuremeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230193,TableId:5,LayerId:32)] public partial class SpecificHeatCapacityMeasure:TYPE<double>    {public SpecificHeatCapacityMeasure(double     value):base(value){}   public SpecificHeatCapacityMeasure(){} public static implicit operator SpecificHeatCapacityMeasure(double     value){return new SpecificHeatCapacityMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (SpecificHeatCapacityMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcspecificheatcapacitymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230194,TableId:5,LayerId:33)] public partial class SpecularExponent          :TYPE<double>    {public SpecularExponent          (double     value):base(value){}   public SpecularExponent          (){} public static implicit operator SpecularExponent          (double     value){return new SpecularExponent          { IsNull=false, TypeValue = value };}public static implicit operator double    (SpecularExponent           value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcspecularexponent.htm
[ifcSql(TypeGroupId:3,TypeId:230195,TableId:5,LayerId:33)] public partial class SpecularRoughness         :TYPE<double>    {public SpecularRoughness         (double     value):base(value){}   public SpecularRoughness         (){} public static implicit operator SpecularRoughness         (double     value){return new SpecularRoughness         { IsNull=false, TypeValue = value };}public static implicit operator double    (SpecularRoughness          value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcspecularroughness.htm
[ifcSql(TypeGroupId:3,TypeId:230196,TableId:5,LayerId:32)] public partial class TemperatureGradientMeasure:TYPE<double>    {public TemperatureGradientMeasure(double     value):base(value){}   public TemperatureGradientMeasure(){} public static implicit operator TemperatureGradientMeasure(double     value){return new TemperatureGradientMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (TemperatureGradientMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifctemperaturegradientmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230197,TableId:7,LayerId:32)] public partial class Text                      :TYPE<string>    {public Text                      (string     value):base(value){}   public Text                      (){} public static implicit operator Text                      (string     value){return new Text                      { IsNull=false, TypeValue = value };}public static implicit operator string    (Text                       value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifctext.htm
[ifcSql(TypeGroupId:3,TypeId:230198,TableId:7,LayerId:33)] public partial class TextAlignment             :TYPE<string>    {public TextAlignment             (string     value):base(value){}   public TextAlignment             (){} public static implicit operator TextAlignment             (string     value){return new TextAlignment             { IsNull=false, TypeValue = value };}public static implicit operator string    (TextAlignment              value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifctextalignment.htm
[ifcSql(TypeGroupId:3,TypeId:230199,TableId:7,LayerId:33)] public partial class TextDecoration            :TYPE<string>    {public TextDecoration            (string     value):base(value){}   public TextDecoration            (){} public static implicit operator TextDecoration            (string     value){return new TextDecoration            { IsNull=false, TypeValue = value };}public static implicit operator string    (TextDecoration             value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifctextdecoration.htm
[ifcSql(TypeGroupId:3,TypeId:230200,TableId:7,LayerId:33)] public partial class TextFontName              :TYPE<string>    {public TextFontName              (string     value):base(value){}   public TextFontName              (){} public static implicit operator TextFontName              (string     value){return new TextFontName              { IsNull=false, TypeValue = value };}public static implicit operator string    (TextFontName               value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifctextfontname.htm
[ifcSql(TypeGroupId:3,TypeId:230201,TableId:7,LayerId:33)] public partial class TextTransformation        :TYPE<string>    {public TextTransformation        (string     value):base(value){}   public TextTransformation        (){} public static implicit operator TextTransformation        (string     value){return new TextTransformation        { IsNull=false, TypeValue = value };}public static implicit operator string    (TextTransformation         value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifctexttransformation.htm
[ifcSql(TypeGroupId:3,TypeId:230202,TableId:5,LayerId:32)] public partial class ThermalAdmittanceMeasure  :TYPE<double>    {public ThermalAdmittanceMeasure  (double     value):base(value){}   public ThermalAdmittanceMeasure  (){} public static implicit operator ThermalAdmittanceMeasure  (double     value){return new ThermalAdmittanceMeasure  { IsNull=false, TypeValue = value };}public static implicit operator double    (ThermalAdmittanceMeasure   value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcthermaladmittancemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230203,TableId:5,LayerId:32)] public partial class ThermalConductivityMeasure:TYPE<double>    {public ThermalConductivityMeasure(double     value):base(value){}   public ThermalConductivityMeasure(){} public static implicit operator ThermalConductivityMeasure(double     value){return new ThermalConductivityMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (ThermalConductivityMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcthermalconductivitymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230204,TableId:5,LayerId:32)] public partial class ThermalExpansionCoefficientMeasure:TYPE<double>    {public ThermalExpansionCoefficientMeasure(double     value):base(value){}   public ThermalExpansionCoefficientMeasure(){} public static implicit operator ThermalExpansionCoefficientMeasure(double     value){return new ThermalExpansionCoefficientMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (ThermalExpansionCoefficientMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcthermalexpansioncoefficientmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230205,TableId:5,LayerId:32)] public partial class ThermalResistanceMeasure  :TYPE<double>    {public ThermalResistanceMeasure  (double     value):base(value){}   public ThermalResistanceMeasure  (){} public static implicit operator ThermalResistanceMeasure  (double     value){return new ThermalResistanceMeasure  { IsNull=false, TypeValue = value };}public static implicit operator double    (ThermalResistanceMeasure   value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcthermalresistancemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230206,TableId:5,LayerId:32)] public partial class ThermalTransmittanceMeasure:TYPE<double>    {public ThermalTransmittanceMeasure(double     value):base(value){}   public ThermalTransmittanceMeasure(){} public static implicit operator ThermalTransmittanceMeasure(double     value){return new ThermalTransmittanceMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (ThermalTransmittanceMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcthermaltransmittancemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230207,TableId:5,LayerId:32)] public partial class ThermodynamicTemperatureMeasure:TYPE<double>    {public ThermodynamicTemperatureMeasure(double     value):base(value){}   public ThermodynamicTemperatureMeasure(){} public static implicit operator ThermodynamicTemperatureMeasure(double     value){return new ThermodynamicTemperatureMeasure{ IsNull=false, TypeValue = value };}public static implicit operator double    (ThermodynamicTemperatureMeasure value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcthermodynamictemperaturemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230208,TableId:5,LayerId:32)] public partial class TimeMeasure               :TYPE<double>    {public TimeMeasure               (double     value):base(value){}   public TimeMeasure               (){} public static implicit operator TimeMeasure               (double     value){return new TimeMeasure               { IsNull=false, TypeValue = value };}public static implicit operator double    (TimeMeasure                value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifctimemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230209,TableId:6,LayerId:26)] public partial class TimeStamp                 :TYPE<int>       {public TimeStamp                 (int        value):base(value){}   public TimeStamp                 (){} public static implicit operator TimeStamp                 (int        value){return new TimeStamp                 { IsNull=false, TypeValue = value };}public static implicit operator int       (TimeStamp                  value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifctimestamp.htm
[ifcSql(TypeGroupId:3,TypeId:230210,TableId:5,LayerId:32)] public partial class TorqueMeasure             :TYPE<double>    {public TorqueMeasure             (double     value):base(value){}   public TorqueMeasure             (){} public static implicit operator TorqueMeasure             (double     value){return new TorqueMeasure             { IsNull=false, TypeValue = value };}public static implicit operator double    (TorqueMeasure              value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifctorquemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230211,TableId:5,LayerId:32)] public partial class VaporPermeabilityMeasure  :TYPE<double>    {public VaporPermeabilityMeasure  (double     value):base(value){}   public VaporPermeabilityMeasure  (){} public static implicit operator VaporPermeabilityMeasure  (double     value){return new VaporPermeabilityMeasure  { IsNull=false, TypeValue = value };}public static implicit operator double    (VaporPermeabilityMeasure   value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcvaporpermeabilitymeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230212,TableId:5,LayerId:32)] public partial class VolumeMeasure             :TYPE<double>    {public VolumeMeasure             (double     value):base(value){}   public VolumeMeasure             (){} public static implicit operator VolumeMeasure             (double     value){return new VolumeMeasure             { IsNull=false, TypeValue = value };}public static implicit operator double    (VolumeMeasure              value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcvolumemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230213,TableId:5,LayerId:32)] public partial class VolumetricFlowRateMeasure :TYPE<double>    {public VolumetricFlowRateMeasure (double     value):base(value){}   public VolumetricFlowRateMeasure (){} public static implicit operator VolumetricFlowRateMeasure (double     value){return new VolumetricFlowRateMeasure { IsNull=false, TypeValue = value };}public static implicit operator double    (VolumetricFlowRateMeasure  value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcvolumetricflowratemeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230214,TableId:5,LayerId:32)] public partial class WarpingConstantMeasure    :TYPE<double>    {public WarpingConstantMeasure    (double     value):base(value){}   public WarpingConstantMeasure    (){} public static implicit operator WarpingConstantMeasure    (double     value){return new WarpingConstantMeasure    { IsNull=false, TypeValue = value };}public static implicit operator double    (WarpingConstantMeasure     value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcwarpingconstantmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230215,TableId:5,LayerId:32)] public partial class WarpingMomentMeasure      :TYPE<double>    {public WarpingMomentMeasure      (double     value):base(value){}   public WarpingMomentMeasure      (){} public static implicit operator WarpingMomentMeasure      (double     value){return new WarpingMomentMeasure      { IsNull=false, TypeValue = value };}public static implicit operator double    (WarpingMomentMeasure       value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcwarpingmomentmeasure.htm
[ifcSql(TypeGroupId:3,TypeId:230216,TableId:6,LayerId:26)] public partial class YearNumber                :TYPE<int>       {public YearNumber                (int        value):base(value){}   public YearNumber                (){} public static implicit operator YearNumber                (int        value){return new YearNumber                { IsNull=false, TypeValue = value };}public static implicit operator int       (YearNumber                 value){return value.TypeValue;} }// https://standards.buildingsmart.org/IFC/RELEASE/IFC2x3/TC1/HTML/link/ifcyearnumber.htm

}// of ifc #############################################################################################################
